

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Oct 24 12:31:22 2025

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67  0000                     
    68                           ; Generated 17/01/2025 GMT
    69                           ; 
    70                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F4550 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103 ;;_port	offset=-1 (param)
   104 ;;_channel	offset=-1 (param)
   105 ;;_pwm_init$1799	offset	0
   106 ;;_period	offset=-1 (param)
   107 ;;_m	offset=-2 (param)
   108 ;;_cb	offset=-2 (param)
   109 ;;_rising_edge	offset=-1 (param)
   110 ;;_enable	offset=-1 (param)
   111 ;;_p	offset=-2 (param)
   112 ;;_s	offset=-2 (param)
   113 ;;_init_value	offset=-3 (param)
   114 ;;_pHeap	offset	0
   115 ;;_temp	offset	2
   116 ;;_segHeader	offset	4
   117 ;;_segLen	offset	5
   118 ;;_nBytes	offset=-1 (param)
   119 ;;_pSegB	offset	0
   120 ;;_uSegB	offset	2
   121 ;;_uSegA	offset	3
   122 ;;_uSum	offset	4
   123 ;;_pSegA	offset=-2 (param)
   124 ;;_tad	offset=-1 (param)
   125 ;;_cclk	offset=-2 (param)
   126 ;;_go_done	offset=-2 (param)
   127 ;;_count	offset	0
   128 ;;_pHeap	offset	2
   129 ;;_new_task	offset	0
   130 ;;_id	offset=-1 (param)
   131 ;;_task_f	offset=-3 (param)
   132 ;;_prior	offset=-4 (param)
   133 ;;_local	offset	0
   134 ;;_ch	offset=-1 (param)
   135 ;;_duty	offset=-2 (param)
   136 ;;_time	offset=-1 (param)
   137 ;;_next	offset	0
   138 ;;_m	offset=-2 (param)
   139 ;;_m	offset=-2 (param)
   140 ;;_idx	offset	0
   141 ;;_i	offset	1
   142 ;;_best_priority	offset	2
   143 ;;_idle_selected	offset	3
   144 ;;_any_ready_non_idle	offset	4
   145 ;;_start	offset	5
   146 ;;_i	offset	0
   147 ;;_task	offset=-2 (param)
   148 ;;_sign	offset	0
   149 ;;_counter	offset	1
   150 ;;_dividend	offset=-2 (param)
   151 ;;_divisor	offset=-4 (param)
   152 ;;_msg	offset	0
   153 ;;_ch	offset=-1 (param)
   154 ;;_channel	offset=-1 (param)
   155 ;;_i	offset	0
   156 ;;_p	offset=-2 (param)
   157 ;;_data	offset=-4 (param)
   158 ;;_len	offset=-5 (param)
   159 ;;_p	offset=-2 (param)
   160 ;;_buffer	offset=-3 (param)
   161 ;;_s	offset=-2 (param)
   162 ;;_s	offset=-2 (param)
   163 ;;_type	offset	0
   164 ;;_bat	offset	1
   165 ;;_is_low	offset	3
   166 ;;_LOW_THRESHOLD	offset	4
   167 ;;_last_low	offset	6
   168 ;;_task_central$747	offset	0
   169 ;;_task_central$746	offset	2
   170 ;;_task_central$745	offset	4
   171 ;;_task_central$744	offset	6
   172 ;;_task_central$743	offset	8
   173 ;;_task_central$742	offset	10
   174 ;;_task_central$741	offset	12
   175 ;;_task_central$740	offset	14
   176 ;;_next	offset	16
   177 ;;_m4	offset	20
   178 ;;_m3	offset	22
   179 ;;_m2	offset	24
   180 ;;_m1	offset	26
   181 ;;_a	offset	28
   182 ;;_g	offset	29
   183 ;;_smsg	offset	30
   184 ;;_mtype	offset	35
   185 ;;_i	offset	0
   186 ;;_p	offset=-2 (param)
   187 ;;_data	offset=-4 (param)
   188 ;;_len	offset=-5 (param)
   189 ;;_p	offset=-2 (param)
   190 ;;_buffer	offset=-4 (param)
   191 ;;_idx	offset	0
   192 ;;_i	offset	1
   193 ;;_best_priority	offset	2
   194 ;;_idle_selected	offset	3
   195 ;;_any_ready_non_idle	offset	4
   196 ;;_start	offset	5
   197 ;;_i	offset	0
   198 ;;_task	offset=-2 (param)
   199 ;;_sign	offset	0
   200 ;;_counter	offset	1
   201 ;;_dividend	offset=-2 (param)
   202 ;;_divisor	offset=-4 (param)
   203 ;;_i	offset	0
   204                           
   205                           	psect	idataCOMRAM
   206  0029B0                     __pidataCOMRAM:
   207                           	callstack 0
   208                           
   209                           ;initializer for __pwm_period
   210  0029B0  FF                 	db	255
   211                           
   212                           ;initializer for _g_flight_enabled
   213  0029B1  01                 	db	1
   214  0000                     _TMR0	set	4054
   215  0000                     _PORTBbits	set	3969
   216  0000                     _LATBbits	set	3978
   217  0000                     _TRISBbits	set	3987
   218  0000                     _INTCONbits	set	4082
   219  0000                     _TOS	set	4093
   220  0000                     _STKPTR	set	4092
   221  0000                     _TRISDbits	set	3989
   222  0000                     _LATDbits	set	3980
   223  0000                     _PORTDbits	set	3971
   224  0000                     _ADCON2bits	set	4032
   225  0000                     _ADCON1bits	set	4033
   226  0000                     _ADCON0bits	set	4034
   227  0000                     _OSCCONbits	set	4051
   228  0000                     _STATUS	set	4056
   229  0000                     _BSR	set	4064
   230  0000                     _WREG	set	4072
   231  0000                     _INTCON2bits	set	4081
   232  0000                     _T0CONbits	set	4053
   233  0000                     _ADRES	set	4035
   234                           
   235                           ; #config settings
   236                           
   237                           	psect	cinit
   238  002764                     __pcinit:
   239                           	callstack 0
   240  002764                     start_initialization:
   241                           	callstack 0
   242  002764                     __initialization:
   243                           	callstack 0
   244                           
   245                           ; Initialize objects allocated to COMRAM (2 bytes)
   246                           ; load TBLPTR registers with __pidataCOMRAM
   247  002764  0EB0               	movlw	low __pidataCOMRAM
   248  002766  6EF6               	movwf	tblptrl,c
   249  002768  0E29               	movlw	high __pidataCOMRAM
   250  00276A  6EF7               	movwf	tblptrh,c
   251  00276C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   252  00276E  6EF8               	movwf	tblptru,c
   253  002770  0009               	tblrd		*+	;fetch initializer
   254  002772  CFF5 F051          	movff	tablat,__pdataCOMRAM
   255  002776  0009               	tblrd		*+	;fetch initializer
   256  002778  CFF5 F052          	movff	tablat,__pdataCOMRAM+1
   257                           
   258                           ; Clear objects allocated to BIGRAM (1045 bytes)
   259  00277C  EE00  F081         	lfsr	0,__pbssBIGRAM
   260  002780  EE24 F015          	lfsr	2,1045
   261  002784                     clear_0:
   262  002784  6AEE               	clrf	postinc0,c
   263  002786  50DD               	movf	postdec2,w,c
   264  002788  50D9               	movf	fsr2l,w,c
   265  00278A  E1FC               	bnz	clear_0
   266  00278C  50DA               	movf	fsr2h,w,c
   267  00278E  E1FA               	bnz	clear_0
   268                           
   269                           ; Clear objects allocated to BANK0 (33 bytes)
   270  002790  EE00  F060         	lfsr	0,__pbssBANK0
   271  002794  0E21               	movlw	33
   272  002796                     clear_1:
   273  002796  6AEE               	clrf	postinc0,c
   274  002798  06E8               	decf	wreg,f,c
   275  00279A  E1FD               	bnz	clear_1
   276                           
   277                           ; Clear objects allocated to COMRAM (30 bytes)
   278  00279C  EE00  F021         	lfsr	0,__pbssCOMRAM
   279  0027A0  0E1E               	movlw	30
   280  0027A2                     clear_2:
   281  0027A2  6AEE               	clrf	postinc0,c
   282  0027A4  06E8               	decf	wreg,f,c
   283  0027A6  E1FD               	bnz	clear_2
   284  0027A8                     end_of_initialization:
   285                           	callstack 0
   286  0027A8                     __end_of__initialization:
   287                           	callstack 0
   288  0027A8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   289  0027AA  6EF8               	movwf	tblptru,c
   290  0027AC  0100               	movlb	0
   291  0027AE  EF2A  F013         	goto	_main	;jump to C main() function
   292                           
   293                           	psect	bssCOMRAM
   294  000021                     __pbssCOMRAM:
   295                           	callstack 0
   296  000021                     __pwm_duty:
   297                           	callstack 0
   298  000021                     	ds	4
   299  000025                     task_central@F3734:
   300                           	callstack 0
   301  000025                     	ds	4
   302  000029                     _g_speeds:
   303                           	callstack 0
   304  000029                     	ds	4
   305  00002D                     __exti_cb:
   306                           	callstack 0
   307  00002D                     	ds	2
   308  00002F                     __pwm_phase:
   309                           	callstack 0
   310  00002F                     	ds	1
   311  000030                     _g_speeds_mutex:
   312                           	callstack 0
   313  000030                     	ds	15
   314                           
   315                           	psect	dataCOMRAM
   316  000051                     __pdataCOMRAM:
   317                           	callstack 0
   318  000051                     __pwm_period:
   319                           	callstack 0
   320  000051                     	ds	1
   321  000052                     _g_flight_enabled:
   322                           	callstack 0
   323  000052                     	ds	1
   324                           
   325                           	psect	bssBANK0
   326  000060                     __pbssBANK0:
   327                           	callstack 0
   328  000060                     _g_pipe:
   329                           	callstack 0
   330  000060                     	ds	33
   331                           
   332                           	psect	bssBIGRAM
   333  000081                     __pbssBIGRAM:
   334                           	callstack 0
   335  000081                     _readyQueue:
   336                           	callstack 0
   337  000081                     	ds	533
   338  000296                     __uDynamicHeap:
   339                           	callstack 0
   340  000296                     	ds	512
   341                           
   342                           	psect	cstackCOMRAM
   343  00003F                     __pcstackCOMRAM:
   344                           	callstack 0
   345  00003F                     ??_ISR_TIMER_0:
   346                           
   347                           ; 1 bytes @ 0x0
   348  00003F                     	ds	18
   349                           
   350 ;;
   351 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   352 ;;
   353 ;; *************** function _main *****************
   354 ;; Defined at:
   355 ;;		line 18 in file "main.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;		None
   360 ;; Return value:  Size  Location     Type
   361 ;;                  2  [STACK] int 
   362 ;; Registers used:
   363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   369 ;;      Params:         0       0       0       0       0       0       0       0       0
   370 ;;      Locals:         0       0       0       0       0       0       0       0       0
   371 ;;      Temps:          0       0       0       0       0       0       0       0       0
   372 ;;      Totals:         0       0       0       0       0       0       0       0       0
   373 ;;Total ram usage:        0 bytes
   374 ;; Hardware stack levels required when called: 16
   375 ;; This function calls:
   376 ;;		_os_config
   377 ;;		_os_create_task
   378 ;;		_os_start
   379 ;; This function is called by:
   380 ;;		Startup code after reset
   381 ;; This function uses a reentrant model
   382 ;;
   383                           
   384                           	psect	text0
   385  002654                     __ptext0:
   386                           	callstack 0
   387  002654                     _main:
   388                           	callstack 15
   389  002654  EC51  F014         	call	_os_config	;wreg free
   390  002658  0E0A               	movlw	10
   391  00265A  6EE6               	movwf	postinc1,c
   392  00265C  0E14               	movlw	low _task_central
   393  00265E  6EE6               	movwf	postinc1,c
   394  002660  0E00               	movlw	high _task_central
   395  002662  6EE6               	movwf	postinc1,c
   396  002664  0EC8               	movlw	200
   397  002666  6EE6               	movwf	postinc1,c
   398  002668  EC96  F010         	call	_os_create_task	;wreg free
   399  00266C  0E09               	movlw	9
   400  00266E  6EE6               	movwf	postinc1,c
   401  002670  0EA4               	movlw	low _task_motors
   402  002672  6EE6               	movwf	postinc1,c
   403  002674  0E1B               	movlw	high _task_motors
   404  002676  6EE6               	movwf	postinc1,c
   405  002678  0EC9               	movlw	201
   406  00267A  6EE6               	movwf	postinc1,c
   407  00267C  EC96  F010         	call	_os_create_task	;wreg free
   408  002680  0E06               	movlw	6
   409  002682  6EE6               	movwf	postinc1,c
   410  002684  0E50               	movlw	low _task_sensors
   411  002686  6EE6               	movwf	postinc1,c
   412  002688  0E23               	movlw	high _task_sensors
   413  00268A  6EE6               	movwf	postinc1,c
   414  00268C  0ECA               	movlw	202
   415  00268E  6EE6               	movwf	postinc1,c
   416  002690  EC96  F010         	call	_os_create_task	;wreg free
   417  002694  0E05               	movlw	5
   418  002696  6EE6               	movwf	postinc1,c
   419  002698  0EA2               	movlw	low _task_battery
   420  00269A  6EE6               	movwf	postinc1,c
   421  00269C  0E1C               	movlw	high _task_battery
   422  00269E  6EE6               	movwf	postinc1,c
   423  0026A0  0ECB               	movlw	203
   424  0026A2  6EE6               	movwf	postinc1,c
   425  0026A4  EC96  F010         	call	_os_create_task	;wreg free
   426  0026A8  EC80  F014         	call	_os_start	;wreg free
   427  0026AC                     l19:
   428  0026AC  EF56  F013         	goto	l19
   429  0026B0  EF06  F000         	goto	start
   430  0026B4                     __end_of_main:
   431                           	callstack 0
   432                           
   433 ;; *************** function _os_start *****************
   434 ;; Defined at:
   435 ;;		line 23 in file "kernel.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1  [STACK] void 
   442 ;; Registers used:
   443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   449 ;;      Params:         0       0       0       0       0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0       0       0       0       0
   451 ;;      Temps:          0       0       0       0       0       0       0       0       0
   452 ;;      Totals:         0       0       0       0       0       0       0       0       0
   453 ;;Total ram usage:        0 bytes
   454 ;; Hardware stack levels used: 1
   455 ;; Hardware stack levels required when called: 15
   456 ;; This function calls:
   457 ;;		_SRAMInitHeap
   458 ;;		_conf_interrupts
   459 ;;		_conf_osc_internal_8MHz
   460 ;;		_conf_timer_0
   461 ;;		_config_app
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a reentrant model
   465 ;;
   466                           
   467                           	psect	text1
   468  002900                     __ptext1:
   469                           	callstack 0
   470  002900                     _os_start:
   471                           	callstack 15
   472  002900                     
   473                           ;kernel.c: 26:     conf_osc_internal_8MHz();
   474  002900  ECD0  F014         	call	_conf_osc_internal_8MHz	;wreg free
   475                           
   476                           ;kernel.c: 28:     conf_interrupts();
   477  002904  ECD6  F014         	call	_conf_interrupts	;wreg free
   478  002908                     
   479                           ;kernel.c: 32:     SRAMInitHeap();
   480  002908  EC29  F010         	call	_SRAMInitHeap	;wreg free
   481  00290C                     
   482                           ;kernel.c: 36:     config_app();
   483  00290C  ECE8  F011         	call	_config_app	;wreg free
   484  002910                     
   485                           ;kernel.c: 38:     conf_timer_0();
   486  002910  EC65  F014         	call	_conf_timer_0	;wreg free
   487  002914                     
   488                           ;kernel.c: 41:     (INTCONbits.GIE = 1);
   489  002914  8EF2               	bsf	242,7,c	;volatile
   490  002916                     
   491                           ; _os_start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
   492  002916  0012               	return		;funcret
   493  002918                     __end_of_os_start:
   494                           	callstack 0
   495                           
   496 ;; *************** function _config_app *****************
   497 ;; Defined at:
   498 ;;		line 38 in file "user_app.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1  [STACK] void 
   505 ;; Registers used:
   506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   512 ;;      Params:         0       0       0       0       0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0       0       0       0       0
   515 ;;      Totals:         0       0       0       0       0       0       0       0       0
   516 ;;Total ram usage:        0 bytes
   517 ;; Hardware stack levels used: 1
   518 ;; Hardware stack levels required when called: 14
   519 ;; This function calls:
   520 ;;		_adc_go
   521 ;;		_config_adc
   522 ;;		_create_pipe
   523 ;;		_exti_enable
   524 ;;		_exti_init
   525 ;;		_exti_set_callback
   526 ;;		_mutex_init
   527 ;;		_pwm_init
   528 ;;		_set_channel
   529 ;;		_set_port
   530 ;; This function is called by:
   531 ;;		_os_start
   532 ;; This function uses a reentrant model
   533 ;;
   534                           
   535                           	psect	text2
   536  0023D0                     __ptext2:
   537                           	callstack 0
   538  0023D0                     _config_app:
   539                           	callstack 15
   540  0023D0                     
   541                           ;user_app.c: 41:     set_channel(CHANNEL_0);
   542  0023D0  0E00               	movlw	0
   543  0023D2  6EE6               	movwf	postinc1,c
   544  0023D4  EC8C  F014         	call	_set_channel	;wreg free
   545                           
   546                           ;user_app.c: 42:     set_port(AN02);
   547  0023D8  0E0C               	movlw	12
   548  0023DA  6EE6               	movwf	postinc1,c
   549  0023DC  ECA4  F014         	call	_set_port	;wreg free
   550                           
   551                           ;user_app.c: 44:     config_adc(TAD12, FOSC32);
   552  0023E0  0E02               	movlw	2
   553  0023E2  6EE6               	movwf	postinc1,c
   554  0023E4  0E05               	movlw	5
   555  0023E6  6EE6               	movwf	postinc1,c
   556  0023E8  EC10  F014         	call	_config_adc	;wreg free
   557  0023EC                     
   558                           ;user_app.c: 45:     adc_go(1);
   559  0023EC  0E01               	movlw	1
   560  0023EE  6EE6               	movwf	postinc1,c
   561  0023F0  0E00               	movlw	0
   562  0023F2  6EE6               	movwf	postinc1,c
   563  0023F4  ECB7  F014         	call	_adc_go	;wreg free
   564  0023F8                     
   565                           ;user_app.c: 48:     pwm_init(255);
   566  0023F8  0EFF               	movlw	255
   567  0023FA  6EE6               	movwf	postinc1,c
   568  0023FC  EC8E  F012         	call	_pwm_init	;wreg free
   569  002400                     
   570                           ;user_app.c: 51:     exti_init(1);
   571  002400  0E01               	movlw	1
   572  002402  6EE6               	movwf	postinc1,c
   573  002404  ECF8  F013         	call	_exti_init	;wreg free
   574  002408                     
   575                           ;user_app.c: 52:     exti_set_callback(isr_button_toggle);
   576  002408  0E30               	movlw	low _isr_button_toggle
   577  00240A  6EE6               	movwf	postinc1,c
   578  00240C  0E29               	movlw	high _isr_button_toggle
   579  00240E  6EE6               	movwf	postinc1,c
   580  002410  ECAE  F014         	call	_exti_set_callback	;wreg free
   581  002414                     
   582                           ;user_app.c: 53:     exti_enable(1);
   583  002414  0E01               	movlw	1
   584  002416  6EE6               	movwf	postinc1,c
   585  002418  EC3D  F014         	call	_exti_enable	;wreg free
   586  00241C                     
   587                           ;user_app.c: 56:     TRISDbits.RD0 = 0;
   588  00241C  9095               	bcf	149,0,c	;volatile
   589  00241E                     
   590                           ;user_app.c: 59:     mutex_init(&g_speeds_mutex);
   591  00241E  0E30               	movlw	low _g_speeds_mutex
   592  002420  6EE6               	movwf	postinc1,c
   593  002422  0E00               	movlw	high _g_speeds_mutex
   594  002424  6EE6               	movwf	postinc1,c
   595  002426  EC20  F012         	call	_mutex_init	;wreg free
   596  00242A                     
   597                           ;user_app.c: 60:     create_pipe(&g_pipe);
   598  00242A  0E60               	movlw	low _g_pipe
   599  00242C  6EE6               	movwf	postinc1,c
   600  00242E  0E00               	movlw	high _g_pipe
   601  002430  6EE6               	movwf	postinc1,c
   602  002432  EC40  F00F         	call	_create_pipe	;wreg free
   603  002436                     
   604                           ;user_app.c: 63:     g_speeds.m1 = g_speeds.m2 = g_speeds.m3 = g_speeds.m4 = 0;
   605  002436  6A2C               	clrf	(_g_speeds+3)^0,c
   606  002438  6A2B               	clrf	(_g_speeds+2)^0,c
   607  00243A  6A2A               	clrf	(_g_speeds+1)^0,c
   608  00243C  6A29               	clrf	_g_speeds^0,c	;# 
   609  00243E                     
   610                           ; _config_app: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
   611  00243E  0012               	return		;funcret
   612  002440                     __end_of_config_app:
   613                           	callstack 0
   614                           
   615 ;; *************** function _set_port *****************
   616 ;; Defined at:
   617 ;;		line 11 in file "io.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;  port            1  [STACK] enum E3166
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1  [STACK] void 
   624 ;; Registers used:
   625 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   631 ;;      Params:         0       0       0       0       0       0       0       0       0
   632 ;;      Locals:         0       0       0       0       0       0       0       0       0
   633 ;;      Temps:          0       0       0       0       0       0       0       0       0
   634 ;;      Totals:         0       0       0       0       0       0       0       0       0
   635 ;;Total ram usage:        0 bytes
   636 ;; Hardware stack levels used: 1
   637 ;; Hardware stack levels required when called: 11
   638 ;; This function calls:
   639 ;;		Nothing
   640 ;; This function is called by:
   641 ;;		_config_app
   642 ;; This function uses a reentrant model
   643 ;;
   644                           
   645                           	psect	text3
   646  002948                     __ptext3:
   647                           	callstack 0
   648  002948                     _set_port:
   649                           	callstack 17
   650  002948                     
   651                           ;io.c: 11: void set_port(port_conf_t port);io.c: 12: {;io.c: 13:     ADCON1bits.PCFG = p
      +                          ort;
   652                           ;stkvar	_port @ sp[(0)+-1]
   653  002948  0EFF               	movlw	-1
   654  00294A  CFE3 F00C          	movff	plusw1,btemp+11
   655  00294E  50C1               	movf	193,w,c	;volatile
   656  002950  180C               	xorwf	(btemp+11)^0,w,c
   657  002952  0BF0               	andlw	-16
   658  002954  180C               	xorwf	(btemp+11)^0,w,c
   659  002956  6EC1               	movwf	193,c	;volatile
   660  002958                     
   661                           ; _set_port: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, args
      +                          ize = 1, vargsize = 0
   662  002958  52E5               	movf	postdec1,f,c
   663  00295A  0012               	return		;funcret
   664  00295C                     __end_of_set_port:
   665                           	callstack 0
   666                           
   667 ;; *************** function _set_channel *****************
   668 ;; Defined at:
   669 ;;		line 6 in file "io.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  channel         1  [STACK] enum E3151
   672 ;; Auto vars:     Size  Location     Type
   673 ;;		None
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1  [STACK] void 
   676 ;; Registers used:
   677 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   683 ;;      Params:         0       0       0       0       0       0       0       0       0
   684 ;;      Locals:         0       0       0       0       0       0       0       0       0
   685 ;;      Temps:          0       0       0       0       0       0       0       0       0
   686 ;;      Totals:         0       0       0       0       0       0       0       0       0
   687 ;;Total ram usage:        0 bytes
   688 ;; Hardware stack levels used: 1
   689 ;; Hardware stack levels required when called: 11
   690 ;; This function calls:
   691 ;;		Nothing
   692 ;; This function is called by:
   693 ;;		_config_app
   694 ;;		_read_adc_channel
   695 ;; This function uses a reentrant model
   696 ;;
   697                           
   698                           	psect	text4
   699  002918                     __ptext4:
   700                           	callstack 0
   701  002918                     _set_channel:
   702                           	callstack 12
   703  002918                     
   704                           ;io.c: 6: void set_channel(channel_t channel);io.c: 7: {;io.c: 8:     ADCON0bits.CHS = c
      +                          hannel;
   705                           ;stkvar	_channel @ sp[(0)+-1]
   706  002918  0EFF               	movlw	-1
   707  00291A  CFE3 F00C          	movff	plusw1,btemp+11
   708  00291E  460C               	rlncf	(btemp+11)^0,f,c
   709  002920  460C               	rlncf	(btemp+11)^0,f,c
   710  002922  50C2               	movf	194,w,c	;volatile
   711  002924  180C               	xorwf	(btemp+11)^0,w,c
   712  002926  0BC3               	andlw	-61
   713  002928  180C               	xorwf	(btemp+11)^0,w,c
   714  00292A  6EC2               	movwf	194,c	;volatile
   715  00292C                     
   716                           ; _set_channel: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
   717  00292C  52E5               	movf	postdec1,f,c
   718  00292E  0012               	return		;funcret
   719  002930                     __end_of_set_channel:
   720                           	callstack 0
   721                           
   722 ;; *************** function _pwm_init *****************
   723 ;; Defined at:
   724 ;;		line 40 in file "io.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  period          1  [STACK] unsigned char 
   727 ;; Auto vars:     Size  Location     Type
   728 ;;		None
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1  [STACK] void 
   731 ;; Registers used:
   732 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   738 ;;      Params:         0       0       0       0       0       0       0       0       0
   739 ;;      Locals:         0       0       0       0       0       0       0       0       0
   740 ;;      Temps:          0       0       0       0       0       0       0       0       0
   741 ;;      Totals:         0       0       0       0       0       0       0       0       0
   742 ;;Total ram usage:        0 bytes
   743 ;; Hardware stack levels used: 1
   744 ;; Hardware stack levels required when called: 11
   745 ;; This function calls:
   746 ;;		Nothing
   747 ;; This function is called by:
   748 ;;		_config_app
   749 ;; This function uses a reentrant model
   750 ;;
   751                           
   752                           	psect	text5
   753  00251C                     __ptext5:
   754                           	callstack 0
   755  00251C                     _pwm_init:
   756                           	callstack 0
   757                           
   758                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   759  00251C  52E6               	movf	postinc1,f,c
   760  00251E  52E6               	movf	postinc1,f,c
   761  002520                     
   762                           ;io.c: 40: void pwm_init(uint8_t period);io.c: 41: {;io.c: 42:     _pwm_period = (period
      +                           == 0) ? 255 : period;
   763                           ;stkvar	_period @ sp[(-2)+-1]
   764  002520  0EFD               	movlw	-3
   765  002522  50E3               	movf	plusw1,w,c
   766  002524  B4D8               	btfsc	status,2,c
   767  002526  EF97  F012         	goto	u1271
   768  00252A  EF99  F012         	goto	u1270
   769  00252E                     u1271:
   770  00252E  EFA5  F012         	goto	l2280
   771  002532                     u1270:
   772  002532                     
   773                           ;stkvar	_period @ sp[(-2)+-1]
   774  002532  0EFD               	movlw	-3
   775  002534  50E3               	movf	plusw1,w,c
   776  002536  6E0B               	movwf	(btemp+10)^0,c
   777  002538  6A0C               	clrf	(btemp+11)^0,c
   778                           
   779                           ;stkvar	_pwm_init$1799 @ sp[(-2)+0]
   780  00253A  0EFE               	movlw	-2
   781  00253C  C00B  FFE3         	movff	btemp+10,plusw1
   782  002540  0EFF               	movlw	-1
   783  002542  C00C  FFE3         	movff	btemp+11,plusw1
   784  002546  EFAF  F012         	goto	l2282
   785  00254A                     l2280:
   786  00254A  0EFF               	movlw	255
   787  00254C  6E0B               	movwf	(btemp+10)^0,c
   788  00254E  0E00               	movlw	0
   789  002550  6E0C               	movwf	(btemp+11)^0,c
   790                           
   791                           ;stkvar	_pwm_init$1799 @ sp[(-2)+0]
   792  002552  0EFE               	movlw	-2
   793  002554  C00B  FFE3         	movff	btemp+10,plusw1
   794  002558  0EFF               	movlw	-1
   795  00255A  C00C  FFE3         	movff	btemp+11,plusw1
   796  00255E                     l2282:
   797                           
   798                           ;stkvar	_pwm_init$1799 @ sp[(-2)+0]
   799  00255E  0EFE               	movlw	-2
   800  002560  CFE3 F051          	movff	plusw1,__pwm_period	;volatile
   801  002564                     
   802                           ;io.c: 43:     _pwm_phase = 0;
   803  002564  6A2F               	clrf	__pwm_phase^0,c	;volatile
   804  002566                     
   805                           ;io.c: 44:     _pwm_duty[0] = _pwm_duty[1] = _pwm_duty[2] = _pwm_duty[3] = 0;
   806  002566  6A24               	clrf	(__pwm_duty+3)^0,c	;volatile
   807  002568  6A23               	clrf	(__pwm_duty+2)^0,c	;volatile
   808  00256A  6A22               	clrf	(__pwm_duty+1)^0,c	;volatile
   809  00256C  6A21               	clrf	__pwm_duty^0,c	;volatile
   810  00256E                     
   811                           ;io.c: 47:     TRISDbits.RD1 = 0;
   812  00256E  9295               	bcf	149,1,c	;volatile
   813  002570                     
   814                           ;io.c: 48:     TRISDbits.RD2 = 0;
   815  002570  9495               	bcf	149,2,c	;volatile
   816  002572                     
   817                           ;io.c: 49:     TRISDbits.RD3 = 0;
   818  002572  9695               	bcf	149,3,c	;volatile
   819  002574                     
   820                           ;io.c: 50:     TRISDbits.RD4 = 0;
   821  002574  9895               	bcf	149,4,c	;volatile
   822  002576                     
   823                           ;io.c: 52:     LATDbits.LATD1 = 0;
   824  002576  928C               	bcf	140,1,c	;volatile
   825  002578                     
   826                           ;io.c: 53:     LATDbits.LATD2 = 0;
   827  002578  948C               	bcf	140,2,c	;volatile
   828  00257A                     
   829                           ;io.c: 54:     LATDbits.LATD3 = 0;
   830  00257A  968C               	bcf	140,3,c	;volatile
   831  00257C                     
   832                           ;io.c: 55:     LATDbits.LATD4 = 0;
   833  00257C  988C               	bcf	140,4,c	;volatile
   834  00257E                     
   835                           ; _pwm_init: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, args
      +                          ize = 1, vargsize = 0
   836  00257E  52E5               	movf	postdec1,f,c
   837  002580  52E5               	movf	postdec1,f,c
   838  002582  52E5               	movf	postdec1,f,c
   839  002584  0012               	return		;funcret
   840  002586                     __end_of_pwm_init:
   841                           	callstack 0
   842                           
   843 ;; *************** function _mutex_init *****************
   844 ;; Defined at:
   845 ;;		line 52 in file "sync.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  m               2  [STACK] PTR struct mutex
   848 ;;		 -> g_speeds_mutex(15), 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1  [STACK] void 
   853 ;; Registers used:
   854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   860 ;;      Params:         0       0       0       0       0       0       0       0       0
   861 ;;      Locals:         0       0       0       0       0       0       0       0       0
   862 ;;      Temps:          0       0       0       0       0       0       0       0       0
   863 ;;      Totals:         0       0       0       0       0       0       0       0       0
   864 ;;Total ram usage:        0 bytes
   865 ;; Hardware stack levels used: 1
   866 ;; Hardware stack levels required when called: 11
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_config_app
   871 ;; This function uses a reentrant model
   872 ;;
   873                           
   874                           	psect	text6
   875  002440                     __ptext6:
   876                           	callstack 0
   877  002440                     _mutex_init:
   878                           	callstack 17
   879  002440                     
   880                           ;sync.c: 52: void mutex_init(mutex_t *m);sync.c: 53: {;sync.c: 54:     m->locked = 0;
   881                           ;stkvar	_m @ sp[(0)+-2]
   882  002440  0EFE               	movlw	-2
   883  002442  CFE3 FFD9          	movff	plusw1,fsr2l
   884  002446  0EFF               	movlw	-1
   885  002448  CFE3 FFDA          	movff	plusw1,fsr2h
   886  00244C  0E00               	movlw	0
   887  00244E  6EDF               	movwf	indf2,c
   888  002450                     
   889                           ;sync.c: 55:     m->owner = 0;
   890                           ;stkvar	_m @ sp[(0)+-2]
   891  002450  0EFE               	movlw	-2
   892  002452  CFE3 F00B          	movff	plusw1,btemp+10
   893  002456  0EFF               	movlw	-1
   894  002458  CFE3 F00C          	movff	plusw1,btemp+11
   895  00245C  0E01               	movlw	1
   896  00245E  240B               	addwf	(btemp+10)^0,w,c
   897  002460  6ED9               	movwf	fsr2l,c
   898  002462  0E00               	movlw	0
   899  002464  200C               	addwfc	(btemp+11)^0,w,c
   900  002466  6EDA               	movwf	fsr2h,c
   901  002468  0E00               	movlw	0
   902  00246A  6EDE               	movwf	postinc2,c
   903  00246C  0E00               	movlw	0
   904  00246E  6EDD               	movwf	postdec2,c
   905  002470                     
   906                           ;sync.c: 56:     m->q_in = 0;
   907                           ;stkvar	_m @ sp[(0)+-2]
   908  002470  0EFE               	movlw	-2
   909  002472  CFE3 F00B          	movff	plusw1,btemp+10
   910  002476  0EFF               	movlw	-1
   911  002478  CFE3 F00C          	movff	plusw1,btemp+11
   912  00247C  0E0D               	movlw	13
   913  00247E  240B               	addwf	(btemp+10)^0,w,c
   914  002480  6ED9               	movwf	fsr2l,c
   915  002482  0E00               	movlw	0
   916  002484  200C               	addwfc	(btemp+11)^0,w,c
   917  002486  6EDA               	movwf	fsr2h,c
   918  002488  0E00               	movlw	0
   919  00248A  6EDF               	movwf	indf2,c
   920  00248C                     
   921                           ;sync.c: 57:     m->q_out = 0;
   922                           ;stkvar	_m @ sp[(0)+-2]
   923  00248C  0EFE               	movlw	-2
   924  00248E  CFE3 F00B          	movff	plusw1,btemp+10
   925  002492  0EFF               	movlw	-1
   926  002494  CFE3 F00C          	movff	plusw1,btemp+11
   927  002498  0E0E               	movlw	14
   928  00249A  240B               	addwf	(btemp+10)^0,w,c
   929  00249C  6ED9               	movwf	fsr2l,c
   930  00249E  0E00               	movlw	0
   931  0024A0  200C               	addwfc	(btemp+11)^0,w,c
   932  0024A2  6EDA               	movwf	fsr2h,c
   933  0024A4  0E00               	movlw	0
   934  0024A6  6EDF               	movwf	indf2,c
   935  0024A8                     
   936                           ; _mutex_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
   937  0024A8  52E5               	movf	postdec1,f,c
   938  0024AA  52E5               	movf	postdec1,f,c
   939  0024AC  0012               	return		;funcret
   940  0024AE                     __end_of_mutex_init:
   941                           	callstack 0
   942                           
   943 ;; *************** function _exti_set_callback *****************
   944 ;; Defined at:
   945 ;;		line 93 in file "io.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  cb              2  [STACK] PTR FTN()void 
   948 ;;		 -> isr_button_toggle(1), 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1  [STACK] void 
   953 ;; Registers used:
   954 ;;		wreg, fsr1l, fsr1h
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   960 ;;      Params:         0       0       0       0       0       0       0       0       0
   961 ;;      Locals:         0       0       0       0       0       0       0       0       0
   962 ;;      Temps:          0       0       0       0       0       0       0       0       0
   963 ;;      Totals:         0       0       0       0       0       0       0       0       0
   964 ;;Total ram usage:        0 bytes
   965 ;; Hardware stack levels used: 1
   966 ;; Hardware stack levels required when called: 11
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		_config_app
   971 ;; This function uses a reentrant model
   972 ;;
   973                           
   974                           	psect	text7
   975  00295C                     __ptext7:
   976                           	callstack 0
   977  00295C                     _exti_set_callback:
   978                           	callstack 17
   979  00295C                     
   980                           ;io.c: 93: void exti_set_callback(void (*cb)(void));io.c: 94: {;io.c: 95:     _exti_cb =
      +                           cb;
   981                           ;stkvar	_cb @ sp[(0)+-2]
   982  00295C  0EFE               	movlw	-2
   983  00295E  CFE3 F02D          	movff	plusw1,__exti_cb
   984  002962  0EFF               	movlw	-1
   985  002964  CFE3 F02E          	movff	plusw1,__exti_cb+1
   986  002968                     
   987                           ; _exti_set_callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 2, argsize = 2, vargsize = 0
   988  002968  52E5               	movf	postdec1,f,c
   989  00296A  52E5               	movf	postdec1,f,c
   990  00296C  0012               	return		;funcret
   991  00296E                     __end_of_exti_set_callback:
   992                           	callstack 0
   993                           
   994 ;; *************** function _exti_init *****************
   995 ;; Defined at:
   996 ;;		line 80 in file "io.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  rising_edge     1  [STACK] unsigned char 
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;		None
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1  [STACK] void 
  1003 ;; Registers used:
  1004 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1010 ;;      Params:         0       0       0       0       0       0       0       0       0
  1011 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1013 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1014 ;;Total ram usage:        0 bytes
  1015 ;; Hardware stack levels used: 1
  1016 ;; Hardware stack levels required when called: 11
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_config_app
  1021 ;; This function uses a reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text8
  1025  0027F0                     __ptext8:
  1026                           	callstack 0
  1027  0027F0                     _exti_init:
  1028                           	callstack 17
  1029  0027F0                     
  1030                           ;io.c: 80: void exti_init(uint8_t rising_edge);io.c: 81: {;io.c: 83:     TRISBbits.RB0 =
      +                           1;
  1031  0027F0  8093               	bsf	147,0,c	;volatile
  1032  0027F2                     
  1033                           ;io.c: 84:     INTCON2bits.INTEDG0 = rising_edge ? 1 : 0;
  1034                           ;stkvar	_rising_edge @ sp[(0)+-1]
  1035  0027F2  0EFF               	movlw	-1
  1036  0027F4  50E3               	movf	plusw1,w,c
  1037  0027F6  A4D8               	btfss	status,2,c
  1038  0027F8  EF00  F014         	goto	u1281
  1039  0027FC  EF04  F014         	goto	u1280
  1040  002800                     u1281:
  1041  002800  6A0C               	clrf	(btemp+11)^0,c
  1042  002802  2A0C               	incf	(btemp+11)^0,f,c
  1043  002804  EF05  F014         	goto	u1298
  1044  002808                     u1280:
  1045  002808  6A0C               	clrf	(btemp+11)^0,c
  1046  00280A                     u1298:
  1047  00280A  3A0C               	swapf	(btemp+11)^0,f,c
  1048  00280C  460C               	rlncf	(btemp+11)^0,f,c
  1049  00280E  460C               	rlncf	(btemp+11)^0,f,c
  1050  002810  50F1               	movf	241,w,c	;volatile
  1051  002812  180C               	xorwf	(btemp+11)^0,w,c
  1052  002814  0BBF               	andlw	-65
  1053  002816  180C               	xorwf	(btemp+11)^0,w,c
  1054  002818  6EF1               	movwf	241,c	;volatile
  1055  00281A                     
  1056                           ;io.c: 85:     INTCONbits.INT0IF = 0;
  1057  00281A  92F2               	bcf	242,1,c	;volatile
  1058  00281C                     
  1059                           ; _exti_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  1060  00281C  52E5               	movf	postdec1,f,c
  1061  00281E  0012               	return		;funcret
  1062  002820                     __end_of_exti_init:
  1063                           	callstack 0
  1064                           
  1065 ;; *************** function _exti_enable *****************
  1066 ;; Defined at:
  1067 ;;		line 88 in file "io.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  enable          1  [STACK] unsigned char 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1  [STACK] void 
  1074 ;; Registers used:
  1075 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1081 ;;      Params:         0       0       0       0       0       0       0       0       0
  1082 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1084 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1085 ;;Total ram usage:        0 bytes
  1086 ;; Hardware stack levels used: 1
  1087 ;; Hardware stack levels required when called: 11
  1088 ;; This function calls:
  1089 ;;		Nothing
  1090 ;; This function is called by:
  1091 ;;		_config_app
  1092 ;; This function uses a reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text9
  1096  00287A                     __ptext9:
  1097                           	callstack 0
  1098  00287A                     _exti_enable:
  1099                           	callstack 17
  1100  00287A                     
  1101                           ;io.c: 88: void exti_enable(uint8_t enable);io.c: 89: {;io.c: 90:     INTCONbits.INT0IE 
      +                          = enable ? 1 : 0;
  1102                           ;stkvar	_enable @ sp[(0)+-1]
  1103  00287A  0EFF               	movlw	-1
  1104  00287C  50E3               	movf	plusw1,w,c
  1105  00287E  A4D8               	btfss	status,2,c
  1106  002880  EF44  F014         	goto	u1301
  1107  002884  EF48  F014         	goto	u1300
  1108  002888                     u1301:
  1109  002888  6A0C               	clrf	(btemp+11)^0,c
  1110  00288A  2A0C               	incf	(btemp+11)^0,f,c
  1111  00288C  EF49  F014         	goto	u1318
  1112  002890                     u1300:
  1113  002890  6A0C               	clrf	(btemp+11)^0,c
  1114  002892                     u1318:
  1115  002892  3A0C               	swapf	(btemp+11)^0,f,c
  1116  002894  50F2               	movf	242,w,c	;volatile
  1117  002896  180C               	xorwf	(btemp+11)^0,w,c
  1118  002898  0BEF               	andlw	-17
  1119  00289A  180C               	xorwf	(btemp+11)^0,w,c
  1120  00289C  6EF2               	movwf	242,c	;volatile
  1121  00289E                     
  1122                           ; _exti_enable: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  1123  00289E  52E5               	movf	postdec1,f,c
  1124  0028A0  0012               	return		;funcret
  1125  0028A2                     __end_of_exti_enable:
  1126                           	callstack 0
  1127                           
  1128 ;; *************** function _create_pipe *****************
  1129 ;; Defined at:
  1130 ;;		line 6 in file "pipe.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  p               2  [STACK] PTR struct pipe
  1133 ;;		 -> g_pipe(33), 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1  [STACK] void 
  1138 ;; Registers used:
  1139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1145 ;;      Params:         0       0       0       0       0       0       0       0       0
  1146 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1148 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1149 ;;Total ram usage:        0 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; Hardware stack levels required when called: 13
  1152 ;; This function calls:
  1153 ;;		_SRAMalloc
  1154 ;;		_sem_init
  1155 ;; This function is called by:
  1156 ;;		_config_app
  1157 ;; This function uses a reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text10
  1161  001E80                     __ptext10:
  1162                           	callstack 0
  1163  001E80                     _create_pipe:
  1164                           	callstack 15
  1165  001E80                     
  1166                           ;pipe.c: 6: void create_pipe(pipe_t *p);pipe.c: 7: {;pipe.c: 8:     p->pipe_pos_read = 0
      +                          ;
  1167                           ;stkvar	_p @ sp[(0)+-2]
  1168  001E80  0EFE               	movlw	-2
  1169  001E82  CFE3 FFD9          	movff	plusw1,fsr2l
  1170  001E86  0EFF               	movlw	-1
  1171  001E88  CFE3 FFDA          	movff	plusw1,fsr2h
  1172  001E8C  0E00               	movlw	0
  1173  001E8E  6EDF               	movwf	indf2,c
  1174  001E90                     
  1175                           ;pipe.c: 9:     p->pipe_pos_write = 0;
  1176                           ;stkvar	_p @ sp[(0)+-2]
  1177  001E90  0EFE               	movlw	-2
  1178  001E92  CFE3 F00B          	movff	plusw1,btemp+10
  1179  001E96  0EFF               	movlw	-1
  1180  001E98  CFE3 F00C          	movff	plusw1,btemp+11
  1181  001E9C  0E01               	movlw	1
  1182  001E9E  240B               	addwf	(btemp+10)^0,w,c
  1183  001EA0  6ED9               	movwf	fsr2l,c
  1184  001EA2  0E00               	movlw	0
  1185  001EA4  200C               	addwfc	(btemp+11)^0,w,c
  1186  001EA6  6EDA               	movwf	fsr2h,c
  1187  001EA8  0E00               	movlw	0
  1188  001EAA  6EDF               	movwf	indf2,c
  1189  001EAC                     
  1190                           ;pipe.c: 10:     p->pipe_capacity = 3;
  1191                           ;stkvar	_p @ sp[(0)+-2]
  1192  001EAC  0EFE               	movlw	-2
  1193  001EAE  CFE3 F00B          	movff	plusw1,btemp+10
  1194  001EB2  0EFF               	movlw	-1
  1195  001EB4  CFE3 F00C          	movff	plusw1,btemp+11
  1196  001EB8  0E04               	movlw	4
  1197  001EBA  240B               	addwf	(btemp+10)^0,w,c
  1198  001EBC  6ED9               	movwf	fsr2l,c
  1199  001EBE  0E00               	movlw	0
  1200  001EC0  200C               	addwfc	(btemp+11)^0,w,c
  1201  001EC2  6EDA               	movwf	fsr2h,c
  1202  001EC4  0E03               	movlw	3
  1203  001EC6  6EDF               	movwf	indf2,c
  1204  001EC8                     
  1205                           ;pipe.c: 12:     p->pipe_data = (char*)SRAMalloc(p->pipe_capacity);
  1206                           ;stkvar	_p @ sp[(0)+-2]
  1207  001EC8  0EFE               	movlw	-2
  1208  001ECA  CFE3 F00B          	movff	plusw1,btemp+10
  1209  001ECE  0EFF               	movlw	-1
  1210  001ED0  CFE3 F00C          	movff	plusw1,btemp+11
  1211  001ED4  0E04               	movlw	4
  1212  001ED6  240B               	addwf	(btemp+10)^0,w,c
  1213  001ED8  6ED9               	movwf	fsr2l,c
  1214  001EDA  0E00               	movlw	0
  1215  001EDC  200C               	addwfc	(btemp+11)^0,w,c
  1216  001EDE  6EDA               	movwf	fsr2h,c
  1217  001EE0  50DF               	movf	indf2,w,c
  1218  001EE2  6EE6               	movwf	postinc1,c
  1219  001EE4  EC12  F00A         	call	_SRAMalloc	;wreg free
  1220                           
  1221                           ;stkvar	_p @ sp[(0)+-2]
  1222  001EE8  0EFE               	movlw	-2
  1223  001EEA  CFE3 F00B          	movff	plusw1,btemp+10
  1224  001EEE  0EFF               	movlw	-1
  1225  001EF0  CFE3 F00C          	movff	plusw1,btemp+11
  1226  001EF4  0E02               	movlw	2
  1227  001EF6  240B               	addwf	(btemp+10)^0,w,c
  1228  001EF8  6ED9               	movwf	fsr2l,c
  1229  001EFA  0E00               	movlw	0
  1230  001EFC  200C               	addwfc	(btemp+11)^0,w,c
  1231  001EFE  6EDA               	movwf	fsr2h,c
  1232  001F00  C001  FFDE         	movff	btemp,postinc2
  1233  001F04  C002  FFDD         	movff	btemp+1,postdec2
  1234  001F08                     
  1235                           ;pipe.c: 14:     sem_init(&p->pipe_sem_read, 0);
  1236  001F08  0E00               	movlw	0
  1237  001F0A  6EE6               	movwf	postinc1,c
  1238                           
  1239                           ;stkvar	_p @ sp[(-1)+-2]
  1240  001F0C  0EFD               	movlw	-3
  1241  001F0E  50E3               	movf	plusw1,w,c
  1242  001F10  0F05               	addlw	5
  1243  001F12  6E0B               	movwf	(btemp+10)^0,c
  1244  001F14  0EFE               	movlw	-2
  1245  001F16  CFE3 F00C          	movff	plusw1,btemp+11
  1246  001F1A  0E00               	movlw	0
  1247  001F1C  220C               	addwfc	(btemp+11)^0,f,c
  1248  001F1E  C00B  FFE6         	movff	btemp+10,postinc1
  1249  001F22  C00C  FFE6         	movff	btemp+11,postinc1
  1250  001F26  EC5A  F013         	call	_sem_init	;wreg free
  1251  001F2A                     
  1252                           ;pipe.c: 15:     sem_init(&p->pipe_sem_write, p->pipe_capacity);
  1253                           ;stkvar	_p @ sp[(0)+-2]
  1254  001F2A  0EFE               	movlw	-2
  1255  001F2C  CFE3 F00B          	movff	plusw1,btemp+10
  1256  001F30  0EFF               	movlw	-1
  1257  001F32  CFE3 F00C          	movff	plusw1,btemp+11
  1258  001F36  0E04               	movlw	4
  1259  001F38  240B               	addwf	(btemp+10)^0,w,c
  1260  001F3A  6ED9               	movwf	fsr2l,c
  1261  001F3C  0E00               	movlw	0
  1262  001F3E  200C               	addwfc	(btemp+11)^0,w,c
  1263  001F40  6EDA               	movwf	fsr2h,c
  1264  001F42  50DF               	movf	indf2,w,c
  1265  001F44  6EE6               	movwf	postinc1,c
  1266                           
  1267                           ;stkvar	_p @ sp[(-1)+-2]
  1268  001F46  0EFD               	movlw	-3
  1269  001F48  50E3               	movf	plusw1,w,c
  1270  001F4A  0F13               	addlw	19
  1271  001F4C  6E0B               	movwf	(btemp+10)^0,c
  1272  001F4E  0EFE               	movlw	-2
  1273  001F50  CFE3 F00C          	movff	plusw1,btemp+11
  1274  001F54  0E00               	movlw	0
  1275  001F56  220C               	addwfc	(btemp+11)^0,f,c
  1276  001F58  C00B  FFE6         	movff	btemp+10,postinc1
  1277  001F5C  C00C  FFE6         	movff	btemp+11,postinc1
  1278  001F60  EC5A  F013         	call	_sem_init	;wreg free
  1279  001F64                     
  1280                           ; _create_pipe: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  1281  001F64  52E5               	movf	postdec1,f,c
  1282  001F66  52E5               	movf	postdec1,f,c
  1283  001F68  0012               	return		;funcret
  1284  001F6A                     __end_of_create_pipe:
  1285                           	callstack 0
  1286                           
  1287 ;; *************** function _sem_init *****************
  1288 ;; Defined at:
  1289 ;;		line 10 in file "sync.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  s               2  [STACK] PTR struct semaphore
  1292 ;;		 -> g_pipe(33), 
  1293 ;;  init_value      1  [STACK] unsigned char 
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;		None
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1  [STACK] void 
  1298 ;; Registers used:
  1299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1305 ;;      Params:         0       0       0       0       0       0       0       0       0
  1306 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1308 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1309 ;;Total ram usage:        0 bytes
  1310 ;; Hardware stack levels used: 1
  1311 ;; Hardware stack levels required when called: 11
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_create_pipe
  1316 ;; This function uses a reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text11
  1320  0026B4                     __ptext11:
  1321                           	callstack 0
  1322  0026B4                     _sem_init:
  1323                           	callstack 16
  1324  0026B4                     
  1325                           ;sync.c: 10: void sem_init(sem_t *s, uint8_t init_value);sync.c: 11: {;sync.c: 12:     s
      +                          ->contador = init_value;
  1326                           ;stkvar	_init_value @ sp[(0)+-3]
  1327  0026B4  0EFD               	movlw	-3
  1328  0026B6  50E3               	movf	plusw1,w,c
  1329  0026B8  6E0B               	movwf	(btemp+10)^0,c
  1330  0026BA  6A0C               	clrf	(btemp+11)^0,c
  1331                           
  1332                           ;stkvar	_s @ sp[(0)+-2]
  1333  0026BC  0EFE               	movlw	-2
  1334  0026BE  CFE3 FFD9          	movff	plusw1,fsr2l
  1335  0026C2  0EFF               	movlw	-1
  1336  0026C4  CFE3 FFDA          	movff	plusw1,fsr2h
  1337  0026C8  C00B  FFDE         	movff	btemp+10,postinc2
  1338  0026CC  C00C  FFDD         	movff	btemp+11,postdec2
  1339  0026D0                     
  1340                           ;sync.c: 13:     s->sem_queue_in = 0;
  1341                           ;stkvar	_s @ sp[(0)+-2]
  1342  0026D0  0EFE               	movlw	-2
  1343  0026D2  CFE3 F00B          	movff	plusw1,btemp+10
  1344  0026D6  0EFF               	movlw	-1
  1345  0026D8  CFE3 F00C          	movff	plusw1,btemp+11
  1346  0026DC  0E0C               	movlw	12
  1347  0026DE  240B               	addwf	(btemp+10)^0,w,c
  1348  0026E0  6ED9               	movwf	fsr2l,c
  1349  0026E2  0E00               	movlw	0
  1350  0026E4  200C               	addwfc	(btemp+11)^0,w,c
  1351  0026E6  6EDA               	movwf	fsr2h,c
  1352  0026E8  0E00               	movlw	0
  1353  0026EA  6EDF               	movwf	indf2,c
  1354  0026EC                     
  1355                           ;sync.c: 14:     s->sem_queue_out = 0;
  1356                           ;stkvar	_s @ sp[(0)+-2]
  1357  0026EC  0EFE               	movlw	-2
  1358  0026EE  CFE3 F00B          	movff	plusw1,btemp+10
  1359  0026F2  0EFF               	movlw	-1
  1360  0026F4  CFE3 F00C          	movff	plusw1,btemp+11
  1361  0026F8  0E0D               	movlw	13
  1362  0026FA  240B               	addwf	(btemp+10)^0,w,c
  1363  0026FC  6ED9               	movwf	fsr2l,c
  1364  0026FE  0E00               	movlw	0
  1365  002700  200C               	addwfc	(btemp+11)^0,w,c
  1366  002702  6EDA               	movwf	fsr2h,c
  1367  002704  0E00               	movlw	0
  1368  002706  6EDF               	movwf	indf2,c
  1369  002708                     
  1370                           ; _sem_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, args
      +                          ize = 3, vargsize = 0
  1371  002708  52E5               	movf	postdec1,f,c
  1372  00270A  52E5               	movf	postdec1,f,c
  1373  00270C  52E5               	movf	postdec1,f,c
  1374  00270E  0012               	return		;funcret
  1375  002710                     __end_of_sem_init:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function _SRAMalloc *****************
  1379 ;; Defined at:
  1380 ;;		line 154 in file "mem.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  nBytes          1  [STACK] unsigned char 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  pHeap           2  [STACK] PTR struct _SALLOC
  1385 ;;		 -> _uDynamicHeap(512), 
  1386 ;;  temp            2  [STACK] PTR struct _SALLOC
  1387 ;;		 -> _uDynamicHeap(512), 
  1388 ;;  segHeader       1  [STACK] struct _SALLOC
  1389 ;;  segLen          1  [STACK] unsigned char 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  2  [STACK] PTR unsigned char 
  1392 ;; Registers used:
  1393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1399 ;;      Params:         0       0       0       0       0       0       0       0       0
  1400 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1401 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1402 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1403 ;;Total ram usage:        0 bytes
  1404 ;; Hardware stack levels used: 1
  1405 ;; Hardware stack levels required when called: 12
  1406 ;; This function calls:
  1407 ;;		__SRAMmerge
  1408 ;; This function is called by:
  1409 ;;		_create_pipe
  1410 ;; This function uses a reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text12
  1414  001424                     __ptext12:
  1415                           	callstack 0
  1416  001424                     _SRAMalloc:
  1417                           	callstack 0
  1418                           
  1419                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1420  001424  0E06               	movlw	6
  1421  001426  26E1               	addwf	fsr1l,f,c
  1422  001428  0E00               	movlw	0
  1423  00142A  22E2               	addwfc	fsr1h,f,c
  1424  00142C                     
  1425                           ;mem.c: 154: unsigned char * SRAMalloc( unsigned char nBytes);mem.c: 155: {;mem.c: 156: 
      +                           SALLOC * pHeap;;mem.c: 157:  SALLOC * temp;;mem.c: 158:       SALLOC segHeader;;mem.c: 
      +                          159:       unsigned char segLen;;mem.c: 162:  if (nBytes > (0x7F - 1)) return (0);
  1426                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1427  00142C  0EF9               	movlw	-7
  1428  00142E  CFE3 F001          	movff	plusw1,btemp
  1429  001432  0E7E               	movlw	126
  1430  001434  6401               	cpfsgt	btemp^0,c
  1431  001436  EF1F  F00A         	goto	u1181
  1432  00143A  EF21  F00A         	goto	u1180
  1433  00143E                     u1181:
  1434  00143E  EF27  F00A         	goto	l2208
  1435  001442                     u1180:
  1436  001442                     l2204:
  1437  001442  0E00               	movlw	0
  1438  001444  6E01               	movwf	btemp^0,c
  1439  001446  0E00               	movlw	0
  1440  001448  6E02               	movwf	(btemp+1)^0,c
  1441  00144A  EF03  F00B         	goto	l470
  1442  00144E                     l2208:
  1443                           
  1444                           ;mem.c: 165:  pHeap = (SALLOC *)_uDynamicHeap;
  1445                           ;stkvar	_pHeap @ sp[(-6)+0]
  1446  00144E  0E02               	movlw	high __uDynamicHeap
  1447  001450  6E01               	movwf	btemp^0,c
  1448  001452  0EFB               	movlw	-5
  1449  001454  C001  FFE3         	movff	btemp,plusw1
  1450  001458  0E96               	movlw	low __uDynamicHeap
  1451  00145A  6E01               	movwf	btemp^0,c
  1452  00145C  0EFA               	movlw	-6
  1453  00145E  C001  FFE3         	movff	btemp,plusw1
  1454  001462                     l2210:
  1455                           
  1456                           ;mem.c: 168:  {;mem.c: 170:   segHeader = *pHeap;
  1457                           ;stkvar	_pHeap @ sp[(-6)+0]
  1458  001462  0EFA               	movlw	-6
  1459  001464  CFE3 FFD9          	movff	plusw1,fsr2l
  1460  001468  0EFB               	movlw	-5
  1461  00146A  CFE3 FFDA          	movff	plusw1,fsr2h
  1462  00146E  50DF               	movf	indf2,w,c
  1463  001470  6E0C               	movwf	(btemp+11)^0,c
  1464                           
  1465                           ;stkvar	_segHeader @ sp[(-6)+4]
  1466  001472  0EFE               	movlw	-2
  1467  001474  C00C  FFE3         	movff	btemp+11,plusw1
  1468  001478                     
  1469                           ;mem.c: 173:   segLen = segHeader.bits.count - 1;
  1470                           ;stkvar	_segHeader @ sp[(-6)+4]
  1471  001478  50E1               	movf	fsr1l,w,c
  1472  00147A  0FFE               	addlw	-2
  1473  00147C  6ED9               	movwf	fsr2l,c
  1474  00147E  50E2               	movf	fsr1h,w,c
  1475  001480  6EDA               	movwf	fsr2h,c
  1476  001482  0EFF               	movlw	255
  1477  001484  22DA               	addwfc	fsr2h,f,c
  1478  001486  50DF               	movf	223,w,c
  1479  001488  0B7F               	andlw	127
  1480  00148A  6E0C               	movwf	(btemp+11)^0,c
  1481  00148C  0EFF               	movlw	255
  1482  00148E  260C               	addwf	(btemp+11)^0,f,c
  1483                           
  1484                           ;stkvar	_segLen @ sp[(-6)+5]
  1485  001490  0EFF               	movlw	-1
  1486  001492  C00C  FFE3         	movff	btemp+11,plusw1
  1487  001496                     
  1488                           ;mem.c: 176:   if (segHeader.byte == 0) return (0);
  1489                           ;stkvar	_segHeader @ sp[(-6)+4]
  1490  001496  0EFE               	movlw	-2
  1491  001498  50E3               	movf	plusw1,w,c
  1492  00149A  A4D8               	btfss	status,2,c
  1493  00149C  EF52  F00A         	goto	u1191
  1494  0014A0  EF54  F00A         	goto	u1190
  1495  0014A4                     u1191:
  1496  0014A4  EF56  F00A         	goto	l2220
  1497  0014A8                     u1190:
  1498  0014A8  EF21  F00A         	goto	l2204
  1499  0014AC                     l2220:
  1500                           
  1501                           ;mem.c: 179:   if (!(segHeader.bits.alloc))
  1502                           ;stkvar	_segHeader @ sp[(-6)+4]
  1503  0014AC  50E1               	movf	fsr1l,w,c
  1504  0014AE  0FFE               	addlw	-2
  1505  0014B0  6ED9               	movwf	fsr2l,c
  1506  0014B2  50E2               	movf	fsr1h,w,c
  1507  0014B4  6EDA               	movwf	fsr2h,c
  1508  0014B6  0EFF               	movlw	255
  1509  0014B8  22DA               	addwfc	fsr2h,f,c
  1510  0014BA  BEDF               	btfsc	indf2,7,c
  1511  0014BC  EF62  F00A         	goto	u1201
  1512  0014C0  EF64  F00A         	goto	u1200
  1513  0014C4                     u1201:
  1514  0014C4  EF84  F00A         	goto	l2226
  1515  0014C8                     u1200:
  1516  0014C8                     
  1517                           ;mem.c: 180:   {;mem.c: 182:    if (nBytes > segLen)
  1518                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1519                           ;stkvar	_segLen @ sp[(-6)+5]
  1520  0014C8  50E1               	movf	fsr1l,w,c
  1521  0014CA  0FFF               	addlw	-1
  1522  0014CC  6ED9               	movwf	fsr2l,c
  1523  0014CE  50E2               	movf	fsr1h,w,c
  1524  0014D0  6EDA               	movwf	fsr2h,c
  1525  0014D2  0EFF               	movlw	255
  1526  0014D4  22DA               	addwfc	fsr2h,f,c
  1527  0014D6  0EF9               	movlw	-7
  1528  0014D8  50E3               	movf	plusw1,w,c
  1529  0014DA  5CDE               	subwf	postinc2,w,c
  1530  0014DC  B0D8               	btfsc	status,0,c
  1531  0014DE  EF73  F00A         	goto	u1211
  1532  0014E2  EF75  F00A         	goto	u1210
  1533  0014E6                     u1211:
  1534  0014E6  EF9B  F00A         	goto	l2228
  1535  0014EA                     u1210:
  1536  0014EA                     
  1537                           ;mem.c: 183:    {;mem.c: 185:     if (!(_SRAMmerge(pHeap))) pHeap += segHeader.bits.coun
      +                          t;
  1538                           ;stkvar	_pHeap @ sp[(-6)+0]
  1539  0014EA  0EFA               	movlw	-6
  1540  0014EC  CFE3 FFE6          	movff	plusw1,postinc1
  1541  0014F0  CFE3 FFE6          	movff	plusw1,postinc1
  1542  0014F4  ECE1  F00B         	call	__SRAMmerge	;wreg free
  1543  0014F8  5001               	movf	btemp^0,w,c
  1544  0014FA  A4D8               	btfss	status,2,c
  1545  0014FC  EF82  F00A         	goto	u1221
  1546  001500  EF84  F00A         	goto	u1220
  1547  001504                     u1221:
  1548  001504  EF01  F00B         	goto	l479
  1549  001508                     u1220:
  1550  001508                     l2226:
  1551                           
  1552                           ;stkvar	_segHeader @ sp[(-6)+4]
  1553  001508  50E1               	movf	fsr1l,w,c
  1554  00150A  0FFE               	addlw	-2
  1555  00150C  6ED9               	movwf	fsr2l,c
  1556  00150E  50E2               	movf	fsr1h,w,c
  1557  001510  6EDA               	movwf	fsr2h,c
  1558  001512  0EFF               	movlw	255
  1559  001514  22DA               	addwfc	fsr2h,f,c
  1560  001516  50DF               	movf	223,w,c
  1561  001518  0B7F               	andlw	127
  1562  00151A  0D01               	mullw	1
  1563                           
  1564                           ;stkvar	_pHeap @ sp[(-6)+0]
  1565  00151C  50E1               	movf	fsr1l,w,c
  1566  00151E  0FFA               	addlw	-6
  1567  001520  6ED9               	movwf	fsr2l,c
  1568  001522  50E2               	movf	fsr1h,w,c
  1569  001524  6EDA               	movwf	fsr2h,c
  1570  001526  0EFF               	movlw	255
  1571  001528  22DA               	addwfc	fsr2h,f,c
  1572  00152A  50F3               	movf	243,w,c
  1573  00152C  26DE               	addwf	postinc2,f,c
  1574  00152E  50F4               	movf	244,w,c
  1575  001530  22DD               	addwfc	postdec2,f,c
  1576  001532  EF31  F00A         	goto	l2210
  1577  001536                     l2228:
  1578                           
  1579                           ;mem.c: 191:    if (nBytes == segLen)
  1580                           ;stkvar	_segLen @ sp[(-6)+5]
  1581                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1582  001536  50E1               	movf	fsr1l,w,c
  1583  001538  0FF9               	addlw	-7
  1584  00153A  6ED9               	movwf	fsr2l,c
  1585  00153C  50E2               	movf	fsr1h,w,c
  1586  00153E  6EDA               	movwf	fsr2h,c
  1587  001540  0EFF               	movlw	255
  1588  001542  22DA               	addwfc	fsr2h,f,c
  1589  001544  0EFF               	movlw	-1
  1590  001546  50E3               	movf	plusw1,w,c
  1591  001548  18DE               	xorwf	postinc2,w,c
  1592  00154A  A4D8               	btfss	status,2,c
  1593  00154C  EFAA  F00A         	goto	u1231
  1594  001550  EFAC  F00A         	goto	u1230
  1595  001554                     u1231:
  1596  001554  EFBE  F00A         	goto	l2238
  1597  001558                     u1230:
  1598  001558                     
  1599                           ;mem.c: 192:    {;mem.c: 194:     (*pHeap).bits.alloc = 1;
  1600                           ;stkvar	_pHeap @ sp[(-6)+0]
  1601  001558  0EFA               	movlw	-6
  1602  00155A  CFE3 FFD9          	movff	plusw1,fsr2l
  1603  00155E  0EFB               	movlw	-5
  1604  001560  CFE3 FFDA          	movff	plusw1,fsr2h
  1605  001564  8EDF               	bsf	indf2,7,c
  1606  001566                     
  1607                           ;mem.c: 197:     return ((unsigned char *)(pHeap + 1));
  1608                           ;stkvar	_pHeap @ sp[(-6)+0]
  1609  001566  0EFA               	movlw	-6
  1610  001568  50E3               	movf	plusw1,w,c
  1611  00156A  0F01               	addlw	1
  1612  00156C  6E01               	movwf	btemp^0,c
  1613  00156E  0EFB               	movlw	-5
  1614  001570  CFE3 F002          	movff	plusw1,btemp+1
  1615  001574  0E00               	movlw	0
  1616  001576  2202               	addwfc	(btemp+1)^0,f,c
  1617  001578  EF03  F00B         	goto	l470
  1618  00157C                     l2238:
  1619                           
  1620                           ;mem.c: 202:    {;mem.c: 204:     (*pHeap).byte = nBytes + 0x81;
  1621                           ;stkvar	_pHeap @ sp[(-6)+0]
  1622  00157C  0EFA               	movlw	-6
  1623  00157E  CFE3 FFD9          	movff	plusw1,fsr2l
  1624  001582  0EFB               	movlw	-5
  1625  001584  CFE3 FFDA          	movff	plusw1,fsr2h
  1626                           
  1627                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1628  001588  0EF9               	movlw	-7
  1629  00158A  50E3               	movf	plusw1,w,c
  1630  00158C  0F81               	addlw	129
  1631  00158E  6EDF               	movwf	indf2,c
  1632  001590                     
  1633                           ;mem.c: 207:     temp = pHeap + 1;
  1634                           ;stkvar	_pHeap @ sp[(-6)+0]
  1635  001590  0EFA               	movlw	-6
  1636  001592  50E3               	movf	plusw1,w,c
  1637  001594  0F01               	addlw	1
  1638  001596  6E0B               	movwf	(btemp+10)^0,c
  1639  001598  0EFB               	movlw	-5
  1640  00159A  CFE3 F00C          	movff	plusw1,btemp+11
  1641  00159E  0E00               	movlw	0
  1642  0015A0  220C               	addwfc	(btemp+11)^0,f,c
  1643                           
  1644                           ;stkvar	_temp @ sp[(-6)+2]
  1645  0015A2  0EFD               	movlw	-3
  1646  0015A4  C00C  FFE3         	movff	btemp+11,plusw1
  1647  0015A8  0EFC               	movlw	-4
  1648  0015AA  C00B  FFE3         	movff	btemp+10,plusw1
  1649  0015AE                     
  1650                           ;mem.c: 210:     pHeap += (nBytes + 1);
  1651                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1652  0015AE  0EF9               	movlw	-7
  1653  0015B0  50E3               	movf	plusw1,w,c
  1654  0015B2  6E0B               	movwf	(btemp+10)^0,c
  1655  0015B4  6A0C               	clrf	(btemp+11)^0,c
  1656  0015B6  0E01               	movlw	1
  1657  0015B8  260B               	addwf	(btemp+10)^0,f,c
  1658  0015BA  0E00               	movlw	0
  1659  0015BC  220C               	addwfc	(btemp+11)^0,f,c
  1660                           
  1661                           ;stkvar	_pHeap @ sp[(-6)+0]
  1662  0015BE  50E1               	movf	fsr1l,w,c
  1663  0015C0  0FFA               	addlw	-6
  1664  0015C2  6ED9               	movwf	fsr2l,c
  1665  0015C4  50E2               	movf	fsr1h,w,c
  1666  0015C6  6EDA               	movwf	fsr2h,c
  1667  0015C8  0EFF               	movlw	255
  1668  0015CA  22DA               	addwfc	fsr2h,f,c
  1669  0015CC  500B               	movf	(btemp+10)^0,w,c
  1670  0015CE  26DE               	addwf	postinc2,f,c
  1671  0015D0  500C               	movf	(btemp+11)^0,w,c
  1672  0015D2  22DD               	addwfc	postdec2,f,c
  1673  0015D4                     
  1674                           ;mem.c: 213:     (*pHeap).byte = segLen - nBytes;
  1675                           ;stkvar	_pHeap @ sp[(-6)+0]
  1676  0015D4  0EFA               	movlw	-6
  1677  0015D6  CFE3 FFD9          	movff	plusw1,fsr2l
  1678  0015DA  0EFB               	movlw	-5
  1679  0015DC  CFE3 FFDA          	movff	plusw1,fsr2h
  1680                           
  1681                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1682  0015E0  0EF9               	movlw	-7
  1683  0015E2  CFE3 F00C          	movff	plusw1,btemp+11
  1684                           
  1685                           ;stkvar	_segLen @ sp[(-6)+5]
  1686  0015E6  0EFF               	movlw	-1
  1687  0015E8  CFE3 F00B          	movff	plusw1,btemp+10
  1688  0015EC  500C               	movf	(btemp+11)^0,w,c
  1689  0015EE  5C0B               	subwf	(btemp+10)^0,w,c
  1690  0015F0  6EDF               	movwf	indf2,c
  1691  0015F2                     
  1692                           ;mem.c: 216:     return ((unsigned char *) temp);
  1693                           ;stkvar	_temp @ sp[(-6)+2]
  1694  0015F2  0EFC               	movlw	-4
  1695  0015F4  CFE3 F001          	movff	plusw1,btemp
  1696  0015F8  0EFD               	movlw	-3
  1697  0015FA  CFE3 F002          	movff	plusw1,btemp+1
  1698  0015FE  EF03  F00B         	goto	l470
  1699  001602                     l479:
  1700  001602  EF31  F00A         	goto	l2210
  1701  001606                     l470:
  1702                           
  1703                           ; _SRAMalloc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  1704  001606  0EF9               	movlw	249
  1705  001608  26E1               	addwf	fsr1l,f,c
  1706  00160A  0EFF               	movlw	255
  1707  00160C  22E2               	addwfc	fsr1h,f,c
  1708  00160E  0012               	return		;funcret
  1709  001610                     __end_of_SRAMalloc:
  1710                           	callstack 0
  1711                           
  1712 ;; *************** function __SRAMmerge *****************
  1713 ;; Defined at:
  1714 ;;		line 322 in file "mem.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  pSegA           2  [STACK] PTR struct _SALLOC
  1717 ;;		 -> _uDynamicHeap(512), 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  pSegB           2  [STACK] PTR struct _SALLOC
  1720 ;;		 -> _uDynamicHeap(512), 
  1721 ;;  uSegB           1  [STACK] struct _SALLOC
  1722 ;;  uSegA           1  [STACK] struct _SALLOC
  1723 ;;  uSum            1  [STACK] struct _SALLOC
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1  [STACK] unsigned char 
  1726 ;; Registers used:
  1727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1733 ;;      Params:         0       0       0       0       0       0       0       0       0
  1734 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1736 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1737 ;;Total ram usage:        0 bytes
  1738 ;; Hardware stack levels used: 1
  1739 ;; Hardware stack levels required when called: 11
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_SRAMalloc
  1744 ;; This function uses a reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text13
  1748  0017C2                     __ptext13:
  1749                           	callstack 0
  1750  0017C2                     __SRAMmerge:
  1751                           	callstack 0
  1752                           
  1753                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1754  0017C2  0E05               	movlw	5
  1755  0017C4  26E1               	addwf	fsr1l,f,c
  1756  0017C6  0E00               	movlw	0
  1757  0017C8  22E2               	addwfc	fsr1h,f,c
  1758  0017CA                     
  1759                           ;mem.c: 322:      unsigned char _SRAMmerge(SALLOC * pSegA);mem.c: 323: {;mem.c: 324:  SA
      +                          LLOC * pSegB;;mem.c: 325:       SALLOC uSegA, uSegB, uSum;;mem.c: 329:  pSegB = pSegA + 
      +                          (*pSegA).byte;
  1760                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1761  0017CA  0EF9               	movlw	-7
  1762  0017CC  CFE3 FFD9          	movff	plusw1,fsr2l
  1763  0017D0  0EFA               	movlw	-6
  1764  0017D2  CFE3 FFDA          	movff	plusw1,fsr2h
  1765  0017D6  50DF               	movf	indf2,w,c
  1766  0017D8  6E0B               	movwf	(btemp+10)^0,c
  1767  0017DA  6A0C               	clrf	(btemp+11)^0,c
  1768                           
  1769                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1770  0017DC  0EF9               	movlw	-7
  1771  0017DE  50E3               	movf	plusw1,w,c
  1772  0017E0  260B               	addwf	(btemp+10)^0,f,c
  1773  0017E2  0EFA               	movlw	-6
  1774  0017E4  50E3               	movf	plusw1,w,c
  1775  0017E6  220C               	addwfc	(btemp+11)^0,f,c
  1776                           
  1777                           ;stkvar	_pSegB @ sp[(-5)+0]
  1778  0017E8  0EFC               	movlw	-4
  1779  0017EA  C00C  FFE3         	movff	btemp+11,plusw1
  1780  0017EE  0EFB               	movlw	-5
  1781  0017F0  C00B  FFE3         	movff	btemp+10,plusw1
  1782  0017F4                     
  1783                           ;mem.c: 332:  uSegA = *pSegA;
  1784                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1785  0017F4  0EF9               	movlw	-7
  1786  0017F6  CFE3 FFD9          	movff	plusw1,fsr2l
  1787  0017FA  0EFA               	movlw	-6
  1788  0017FC  CFE3 FFDA          	movff	plusw1,fsr2h
  1789  001800  50DF               	movf	indf2,w,c
  1790  001802  6E0C               	movwf	(btemp+11)^0,c
  1791                           
  1792                           ;stkvar	_uSegA @ sp[(-5)+3]
  1793  001804  0EFE               	movlw	-2
  1794  001806  C00C  FFE3         	movff	btemp+11,plusw1
  1795  00180A                     
  1796                           ;mem.c: 333:  uSegB = *pSegB;
  1797                           ;stkvar	_pSegB @ sp[(-5)+0]
  1798  00180A  0EFB               	movlw	-5
  1799  00180C  CFE3 FFD9          	movff	plusw1,fsr2l
  1800  001810  0EFC               	movlw	-4
  1801  001812  CFE3 FFDA          	movff	plusw1,fsr2h
  1802  001816  50DF               	movf	indf2,w,c
  1803  001818  6E0C               	movwf	(btemp+11)^0,c
  1804                           
  1805                           ;stkvar	_uSegB @ sp[(-5)+2]
  1806  00181A  0EFD               	movlw	-3
  1807  00181C  C00C  FFE3         	movff	btemp+11,plusw1
  1808  001820                     
  1809                           ;mem.c: 336:  if (uSegB.byte == 0) return (0);
  1810                           ;stkvar	_uSegB @ sp[(-5)+2]
  1811  001820  0EFD               	movlw	-3
  1812  001822  50E3               	movf	plusw1,w,c
  1813  001824  A4D8               	btfss	status,2,c
  1814  001826  EF17  F00C         	goto	u1131
  1815  00182A  EF19  F00C         	goto	u1130
  1816  00182E                     u1131:
  1817  00182E  EF1D  F00C         	goto	l2160
  1818  001832                     u1130:
  1819  001832                     l2156:
  1820  001832  0E00               	movlw	0
  1821  001834  6E01               	movwf	btemp^0,c
  1822  001836  EFA6  F00C         	goto	l496
  1823  00183A                     l2160:
  1824                           
  1825                           ;mem.c: 339:  if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
  1826                           ;stkvar	_uSegA @ sp[(-5)+3]
  1827  00183A  50E1               	movf	fsr1l,w,c
  1828  00183C  0FFE               	addlw	-2
  1829  00183E  6ED9               	movwf	fsr2l,c
  1830  001840  50E2               	movf	fsr1h,w,c
  1831  001842  6EDA               	movwf	fsr2h,c
  1832  001844  0EFF               	movlw	255
  1833  001846  22DA               	addwfc	fsr2h,f,c
  1834  001848  BEDF               	btfsc	indf2,7,c
  1835  00184A  EF29  F00C         	goto	u1141
  1836  00184E  EF2B  F00C         	goto	u1140
  1837  001852                     u1141:
  1838  001852  EF19  F00C         	goto	l2156
  1839  001856                     u1140:
  1840  001856                     
  1841                           ;stkvar	_uSegB @ sp[(-5)+2]
  1842  001856  50E1               	movf	fsr1l,w,c
  1843  001858  0FFD               	addlw	-3
  1844  00185A  6ED9               	movwf	fsr2l,c
  1845  00185C  50E2               	movf	fsr1h,w,c
  1846  00185E  6EDA               	movwf	fsr2h,c
  1847  001860  0EFF               	movlw	255
  1848  001862  22DA               	addwfc	fsr2h,f,c
  1849  001864  AEDF               	btfss	indf2,7,c
  1850  001866  EF37  F00C         	goto	u1151
  1851  00186A  EF39  F00C         	goto	u1150
  1852  00186E                     u1151:
  1853  00186E  EF3B  F00C         	goto	l2168
  1854  001872                     u1150:
  1855  001872  EF19  F00C         	goto	l2156
  1856  001876                     l2168:
  1857                           
  1858                           ;mem.c: 342:  if (uSegA.bits.count == 0x7F) return (0);
  1859                           ;stkvar	_uSegA @ sp[(-5)+3]
  1860  001876  50E1               	movf	fsr1l,w,c
  1861  001878  0FFE               	addlw	-2
  1862  00187A  6ED9               	movwf	fsr2l,c
  1863  00187C  50E2               	movf	fsr1h,w,c
  1864  00187E  6EDA               	movwf	fsr2h,c
  1865  001880  0EFF               	movlw	255
  1866  001882  22DA               	addwfc	fsr2h,f,c
  1867  001884  50DF               	movf	223,w,c
  1868  001886  0B7F               	andlw	127
  1869  001888  0A7F               	xorlw	127
  1870  00188A  A4D8               	btfss	status,2,c
  1871  00188C  EF4A  F00C         	goto	u1161
  1872  001890  EF4C  F00C         	goto	u1160
  1873  001894                     u1161:
  1874  001894  EF4E  F00C         	goto	l2174
  1875  001898                     u1160:
  1876  001898  EF19  F00C         	goto	l2156
  1877  00189C                     l2174:
  1878                           
  1879                           ;mem.c: 345:  uSum.byte = uSegA.byte + uSegB.byte;
  1880                           ;stkvar	_uSegB @ sp[(-5)+2]
  1881  00189C  0EFD               	movlw	-3
  1882  00189E  CFE3 F00C          	movff	plusw1,btemp+11
  1883                           
  1884                           ;stkvar	_uSegA @ sp[(-5)+3]
  1885  0018A2  0EFE               	movlw	-2
  1886  0018A4  50E3               	movf	plusw1,w,c
  1887  0018A6  240C               	addwf	(btemp+11)^0,w,c
  1888  0018A8  6E0B               	movwf	(btemp+10)^0,c
  1889                           
  1890                           ;stkvar	_uSum @ sp[(-5)+4]
  1891  0018AA  0EFF               	movlw	-1
  1892  0018AC  C00B  FFE3         	movff	btemp+10,plusw1
  1893  0018B0                     
  1894                           ;mem.c: 351:  if ((uSum.byte) > 0x7F)
  1895                           ;stkvar	_uSum @ sp[(-5)+4]
  1896  0018B0  0EFF               	movlw	-1
  1897  0018B2  CFE3 F001          	movff	plusw1,btemp
  1898  0018B6  0E7F               	movlw	127
  1899  0018B8  6401               	cpfsgt	btemp^0,c
  1900  0018BA  EF61  F00C         	goto	u1171
  1901  0018BE  EF63  F00C         	goto	u1170
  1902  0018C2                     u1171:
  1903  0018C2  EF9B  F00C         	goto	l2192
  1904  0018C6                     u1170:
  1905  0018C6                     
  1906                           ;mem.c: 352:  {;mem.c: 353:   (*pSegA).byte = 0x7F;
  1907                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1908  0018C6  0EF9               	movlw	-7
  1909  0018C8  CFE3 FFD9          	movff	plusw1,fsr2l
  1910  0018CC  0EFA               	movlw	-6
  1911  0018CE  CFE3 FFDA          	movff	plusw1,fsr2h
  1912  0018D2  0E7F               	movlw	127
  1913  0018D4  6EDF               	movwf	indf2,c
  1914  0018D6                     
  1915                           ;mem.c: 354:   pSegA += 0x7F;
  1916                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1917  0018D6  0EF9               	movlw	-7
  1918  0018D8  50E3               	movf	plusw1,w,c
  1919  0018DA  0F7F               	addlw	127
  1920  0018DC  6E01               	movwf	btemp^0,c
  1921  0018DE  0EF9               	movlw	-7
  1922  0018E0  C001  FFE3         	movff	btemp,plusw1
  1923  0018E4  6A01               	clrf	btemp^0,c
  1924  0018E6  0EFA               	movlw	-6
  1925  0018E8  50E3               	movf	plusw1,w,c
  1926  0018EA  2001               	addwfc	btemp^0,w,c
  1927  0018EC  6E01               	movwf	btemp^0,c
  1928  0018EE  0EFA               	movlw	-6
  1929  0018F0  C001  FFE3         	movff	btemp,plusw1
  1930  0018F4                     
  1931                           ;mem.c: 355:   pSegB += uSegB.byte;
  1932                           ;stkvar	_uSegB @ sp[(-5)+2]
  1933  0018F4  0EFD               	movlw	-3
  1934  0018F6  50E3               	movf	plusw1,w,c
  1935  0018F8  0D01               	mullw	1
  1936                           
  1937                           ;stkvar	_pSegB @ sp[(-5)+0]
  1938  0018FA  50E1               	movf	fsr1l,w,c
  1939  0018FC  0FFB               	addlw	-5
  1940  0018FE  6ED9               	movwf	fsr2l,c
  1941  001900  50E2               	movf	fsr1h,w,c
  1942  001902  6EDA               	movwf	fsr2h,c
  1943  001904  0EFF               	movlw	255
  1944  001906  22DA               	addwfc	fsr2h,f,c
  1945  001908  50F3               	movf	243,w,c
  1946  00190A  26DE               	addwf	postinc2,f,c
  1947  00190C  50F4               	movf	244,w,c
  1948  00190E  22DD               	addwfc	postdec2,f,c
  1949  001910                     
  1950                           ;mem.c: 356:   (*pSegA).byte = pSegB - pSegA;
  1951                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1952  001910  0EF9               	movlw	-7
  1953  001912  CFE3 FFD9          	movff	plusw1,fsr2l
  1954  001916  0EFA               	movlw	-6
  1955  001918  CFE3 FFDA          	movff	plusw1,fsr2h
  1956                           
  1957                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1958  00191C  0EF9               	movlw	-7
  1959  00191E  CFE3 F00C          	movff	plusw1,btemp+11
  1960                           
  1961                           ;stkvar	_pSegB @ sp[(-5)+0]
  1962  001922  0EFB               	movlw	-5
  1963  001924  CFE3 F00B          	movff	plusw1,btemp+10
  1964  001928  500C               	movf	(btemp+11)^0,w,c
  1965  00192A  5C0B               	subwf	(btemp+10)^0,w,c
  1966  00192C  6EDF               	movwf	indf2,c
  1967  00192E                     
  1968                           ;mem.c: 358:   return (0x7F);
  1969  00192E  0E7F               	movlw	127
  1970  001930  6E01               	movwf	btemp^0,c
  1971  001932  EFA6  F00C         	goto	l496
  1972  001936                     l2192:
  1973                           
  1974                           ;mem.c: 363:  {;mem.c: 364:   return ((*pSegA).byte = uSum.byte);
  1975                           ;stkvar	_uSum @ sp[(-5)+4]
  1976                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1977  001936  0EF9               	movlw	-7
  1978  001938  CFE3 FFD9          	movff	plusw1,fsr2l
  1979  00193C  0EFA               	movlw	-6
  1980  00193E  CFE3 FFDA          	movff	plusw1,fsr2h
  1981  001942  0EFF               	movlw	-1
  1982  001944  CFE3 FFDF          	movff	plusw1,indf2
  1983  001948  50DF               	movf	indf2,w,c
  1984  00194A  6E01               	movwf	btemp^0,c
  1985  00194C                     l496:
  1986                           
  1987                           ; __SRAMmerge: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  1988  00194C  0EF9               	movlw	249
  1989  00194E  26E1               	addwf	fsr1l,f,c
  1990  001950  0EFF               	movlw	255
  1991  001952  22E2               	addwfc	fsr1h,f,c
  1992  001954  0012               	return		;funcret
  1993  001956                     __end_of__SRAMmerge:
  1994                           	callstack 0
  1995                           
  1996 ;; *************** function _config_adc *****************
  1997 ;; Defined at:
  1998 ;;		line 16 in file "io.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;  tad             1  [STACK] enum E3182
  2001 ;;  cclk            1  [STACK] enum E3192
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;		None
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1  [STACK] void 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2013 ;;      Params:         0       0       0       0       0       0       0       0       0
  2014 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2016 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2017 ;;Total ram usage:        0 bytes
  2018 ;; Hardware stack levels used: 1
  2019 ;; Hardware stack levels required when called: 11
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_config_app
  2024 ;; This function uses a reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text14
  2028  002820                     __ptext14:
  2029                           	callstack 0
  2030  002820                     _config_adc:
  2031                           	callstack 17
  2032  002820                     
  2033                           ;io.c: 16: void config_adc(tad_t tad, conversion_clock_t cclk);io.c: 17: {;io.c: 18:    
      +                           ADCON2bits.ACQT = tad;
  2034                           ;stkvar	_tad @ sp[(0)+-1]
  2035  002820  0EFF               	movlw	-1
  2036  002822  CFE3 F00C          	movff	plusw1,btemp+11
  2037  002826  460C               	rlncf	(btemp+11)^0,f,c
  2038  002828  460C               	rlncf	(btemp+11)^0,f,c
  2039  00282A  460C               	rlncf	(btemp+11)^0,f,c
  2040  00282C  50C0               	movf	192,w,c	;volatile
  2041  00282E  180C               	xorwf	(btemp+11)^0,w,c
  2042  002830  0BC7               	andlw	-57
  2043  002832  180C               	xorwf	(btemp+11)^0,w,c
  2044  002834  6EC0               	movwf	192,c	;volatile
  2045                           
  2046                           ;io.c: 19:     ADCON2bits.ADCS = cclk;
  2047                           ;stkvar	_cclk @ sp[(0)+-2]
  2048  002836  0EFE               	movlw	-2
  2049  002838  CFE3 F00C          	movff	plusw1,btemp+11
  2050  00283C  50C0               	movf	192,w,c	;volatile
  2051  00283E  180C               	xorwf	(btemp+11)^0,w,c
  2052  002840  0BF8               	andlw	-8
  2053  002842  180C               	xorwf	(btemp+11)^0,w,c
  2054  002844  6EC0               	movwf	192,c	;volatile
  2055  002846                     
  2056                           ;io.c: 20:     ADCON2bits.ADFM = 1;
  2057  002846  8EC0               	bsf	192,7,c	;volatile
  2058  002848                     
  2059                           ; _config_adc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  2060  002848  52E5               	movf	postdec1,f,c
  2061  00284A  52E5               	movf	postdec1,f,c
  2062  00284C  0012               	return		;funcret
  2063  00284E                     __end_of_config_adc:
  2064                           	callstack 0
  2065                           
  2066 ;; *************** function _adc_go *****************
  2067 ;; Defined at:
  2068 ;;		line 23 in file "io.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  go_done         2  [STACK] int 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;		None
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1  [STACK] void 
  2075 ;; Registers used:
  2076 ;;		wreg, fsr1l, fsr1h
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2082 ;;      Params:         0       0       0       0       0       0       0       0       0
  2083 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2084 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2085 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2086 ;;Total ram usage:        0 bytes
  2087 ;; Hardware stack levels used: 1
  2088 ;; Hardware stack levels required when called: 11
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_config_app
  2093 ;; This function uses a reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text15
  2097  00296E                     __ptext15:
  2098                           	callstack 0
  2099  00296E                     _adc_go:
  2100                           	callstack 17
  2101  00296E                     
  2102                           ;io.c: 23: void adc_go(int go_done);io.c: 24: {;io.c: 25:     ADCON0bits.ADON = go_done;
  2103                           ;stkvar	_go_done @ sp[(0)+-2]
  2104  00296E  0EFE               	movlw	-2
  2105  002970  B0E3               	btfsc	plusw1,0,c
  2106  002972  D002               	bra	u1265
  2107  002974  90C2               	bcf	194,0,c	;volatile
  2108  002976  D001               	bra	u1266
  2109  002978                     u1265:
  2110  002978  80C2               	bsf	194,0,c	;volatile
  2111  00297A                     u1266:
  2112  00297A                     
  2113                           ; _adc_go: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  2114  00297A  52E5               	movf	postdec1,f,c
  2115  00297C  52E5               	movf	postdec1,f,c
  2116  00297E  0012               	return		;funcret
  2117  002980                     __end_of_adc_go:
  2118                           	callstack 0
  2119                           
  2120 ;; *************** function _conf_timer_0 *****************
  2121 ;; Defined at:
  2122 ;;		line 22 in file "hardware.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1  [STACK] void 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2136 ;;      Params:         0       0       0       0       0       0       0       0       0
  2137 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2138 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2139 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2140 ;;Total ram usage:        0 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; Hardware stack levels required when called: 11
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_os_start
  2147 ;; This function uses a reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text16
  2151  0028CA                     __ptext16:
  2152                           	callstack 0
  2153  0028CA                     _conf_timer_0:
  2154                           	callstack 18
  2155  0028CA                     
  2156                           ;hardware.c: 25:     T0CONbits.T0CS = 0;
  2157  0028CA  9AD5               	bcf	213,5,c	;volatile
  2158                           
  2159                           ;hardware.c: 26:     T0CONbits.PSA = 0;
  2160  0028CC  96D5               	bcf	213,3,c	;volatile
  2161  0028CE                     
  2162                           ;hardware.c: 27:     T0CONbits.T0PS = 0b110;
  2163  0028CE  50D5               	movf	213,w,c	;volatile
  2164  0028D0  0BF8               	andlw	-8
  2165  0028D2  0906               	iorlw	6
  2166  0028D4  6ED5               	movwf	213,c	;volatile
  2167                           
  2168                           ;hardware.c: 28:     TMR0 = 128;
  2169  0028D6  0E00               	movlw	0
  2170  0028D8  6ED7               	movwf	215,c	;volatile
  2171  0028DA  0E80               	movlw	128
  2172  0028DC  6ED6               	movwf	214,c	;volatile
  2173  0028DE                     
  2174                           ;hardware.c: 29:     INTCONbits.TMR0IE = 1;
  2175  0028DE  8AF2               	bsf	242,5,c	;volatile
  2176  0028E0                     
  2177                           ;hardware.c: 30:     INTCONbits.TMR0IF = 0;
  2178  0028E0  94F2               	bcf	242,2,c	;volatile
  2179  0028E2                     
  2180                           ;hardware.c: 31:     T0CONbits.TMR0ON = 1;
  2181  0028E2  8ED5               	bsf	213,7,c	;volatile
  2182  0028E4                     
  2183                           ; _conf_timer_0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2184  0028E4  0012               	return		;funcret
  2185  0028E6                     __end_of_conf_timer_0:
  2186                           	callstack 0
  2187                           
  2188 ;; *************** function _conf_osc_internal_8MHz *****************
  2189 ;; Defined at:
  2190 ;;		line 7 in file "hardware.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;		None
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;		None
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1  [STACK] void 
  2197 ;; Registers used:
  2198 ;;		None
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2204 ;;      Params:         0       0       0       0       0       0       0       0       0
  2205 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2207 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2208 ;;Total ram usage:        0 bytes
  2209 ;; Hardware stack levels used: 1
  2210 ;; Hardware stack levels required when called: 11
  2211 ;; This function calls:
  2212 ;;		Nothing
  2213 ;; This function is called by:
  2214 ;;		_os_start
  2215 ;; This function uses a reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text17
  2219  0029A0                     __ptext17:
  2220                           	callstack 0
  2221  0029A0                     _conf_osc_internal_8MHz:
  2222                           	callstack 18
  2223  0029A0                     
  2224                           ;hardware.c: 10:     OSCCONbits.IRCF2 = 1;
  2225  0029A0  8CD3               	bsf	211,6,c	;volatile
  2226                           
  2227                           ;hardware.c: 11:     OSCCONbits.IRCF1 = 1;
  2228  0029A2  8AD3               	bsf	211,5,c	;volatile
  2229                           
  2230                           ;hardware.c: 12:     OSCCONbits.IRCF0 = 1;
  2231  0029A4  88D3               	bsf	211,4,c	;volatile
  2232                           
  2233                           ;hardware.c: 15:     OSCCONbits.SCS1 = 1;
  2234  0029A6  82D3               	bsf	211,1,c	;volatile
  2235                           
  2236                           ;hardware.c: 16:     OSCCONbits.SCS0 = 0;
  2237  0029A8  90D3               	bcf	211,0,c	;volatile
  2238  0029AA                     
  2239                           ; _conf_osc_internal_8MHz: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
  2240  0029AA  0012               	return		;funcret
  2241  0029AC                     __end_of_conf_osc_internal_8MHz:
  2242                           	callstack 0
  2243                           
  2244 ;; *************** function _conf_interrupts *****************
  2245 ;; Defined at:
  2246 ;;		line 34 in file "hardware.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1  [STACK] void 
  2253 ;; Registers used:
  2254 ;;		None
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2260 ;;      Params:         0       0       0       0       0       0       0       0       0
  2261 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2263 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2264 ;;Total ram usage:        0 bytes
  2265 ;; Hardware stack levels used: 1
  2266 ;; Hardware stack levels required when called: 11
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_os_start
  2271 ;; This function uses a reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text18
  2275  0029AC                     __ptext18:
  2276                           	callstack 0
  2277  0029AC                     _conf_interrupts:
  2278                           	callstack 18
  2279  0029AC                     
  2280                           ;hardware.c: 36:     INTCONbits.PEIE = 1;
  2281  0029AC  8CF2               	bsf	242,6,c	;volatile
  2282  0029AE                     
  2283                           ; _conf_interrupts: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  2284  0029AE  0012               	return		;funcret
  2285  0029B0                     __end_of_conf_interrupts:
  2286                           	callstack 0
  2287                           
  2288 ;; *************** function _SRAMInitHeap *****************
  2289 ;; Defined at:
  2290 ;;		line 276 in file "mem.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  count           2  [STACK] unsigned int 
  2295 ;;  pHeap           2  [STACK] PTR unsigned char 
  2296 ;;		 -> _uDynamicHeap(512), 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1  [STACK] void 
  2299 ;; Registers used:
  2300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2306 ;;      Params:         0       0       0       0       0       0       0       0       0
  2307 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2308 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2309 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2310 ;;Total ram usage:        0 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; Hardware stack levels required when called: 11
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_os_start
  2317 ;; This function uses a reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text19
  2321  002052                     __ptext19:
  2322                           	callstack 0
  2323  002052                     _SRAMInitHeap:
  2324                           	callstack 0
  2325                           
  2326                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2327  002052  52E6               	movf	postinc1,f,c
  2328  002054  52E6               	movf	postinc1,f,c
  2329  002056  52E6               	movf	postinc1,f,c
  2330  002058  52E6               	movf	postinc1,f,c
  2331  00205A                     
  2332                           ;mem.c: 278:  unsigned char * pHeap;;mem.c: 279:       unsigned int count;;mem.c: 281:  
      +                          pHeap = _uDynamicHeap;
  2333                           ;stkvar	_pHeap @ sp[(-4)+2]
  2334  00205A  0E02               	movlw	high __uDynamicHeap
  2335  00205C  6E01               	movwf	btemp^0,c
  2336  00205E  0EFF               	movlw	-1
  2337  002060  C001  FFE3         	movff	btemp,plusw1
  2338  002064  0E96               	movlw	low __uDynamicHeap
  2339  002066  6E01               	movwf	btemp^0,c
  2340  002068  0EFE               	movlw	-2
  2341  00206A  C001  FFE3         	movff	btemp,plusw1
  2342  00206E                     
  2343                           ;mem.c: 282:  count = 0x200 -1;
  2344  00206E  0EFF               	movlw	255
  2345  002070  6E0B               	movwf	(btemp+10)^0,c
  2346  002072  0E01               	movlw	1
  2347  002074  6E0C               	movwf	(btemp+11)^0,c
  2348                           
  2349                           ;stkvar	_count @ sp[(-4)+0]
  2350  002076  0EFC               	movlw	-4
  2351  002078  C00B  FFE3         	movff	btemp+10,plusw1
  2352  00207C  0EFD               	movlw	-3
  2353  00207E  C00C  FFE3         	movff	btemp+11,plusw1
  2354  002082                     l1564:
  2355                           
  2356                           ;mem.c: 285:  {;mem.c: 286:   if (count > 0x7F)
  2357                           ;stkvar	_count @ sp[(-4)+0]
  2358  002082  0EFD               	movlw	-3
  2359  002084  50E3               	movf	plusw1,w,c
  2360  002086  E10C               	bnz	u350
  2361  002088  0EFC               	movlw	-4
  2362  00208A  CFE3 F001          	movff	plusw1,btemp
  2363  00208E  0E80               	movlw	128
  2364  002090  5E01               	subwf	btemp^0,f,c
  2365  002092  A0D8               	btfss	status,0,c
  2366  002094  EF4E  F010         	goto	u351
  2367  002098  EF50  F010         	goto	u350
  2368  00209C                     u351:
  2369  00209C  EF74  F010         	goto	l1572
  2370  0020A0                     u350:
  2371  0020A0                     
  2372                           ;mem.c: 287:   {;mem.c: 288:    *pHeap = 0x7F;
  2373                           ;stkvar	_pHeap @ sp[(-4)+2]
  2374  0020A0  0EFE               	movlw	-2
  2375  0020A2  CFE3 FFD9          	movff	plusw1,fsr2l
  2376  0020A6  0EFF               	movlw	-1
  2377  0020A8  CFE3 FFDA          	movff	plusw1,fsr2h
  2378  0020AC  0E7F               	movlw	127
  2379  0020AE  6EDF               	movwf	indf2,c
  2380  0020B0                     
  2381                           ;mem.c: 289:    pHeap += 0x7F;
  2382                           ;stkvar	_pHeap @ sp[(-4)+2]
  2383  0020B0  0EFE               	movlw	-2
  2384  0020B2  50E3               	movf	plusw1,w,c
  2385  0020B4  0F7F               	addlw	127
  2386  0020B6  6E01               	movwf	btemp^0,c
  2387  0020B8  0EFE               	movlw	-2
  2388  0020BA  C001  FFE3         	movff	btemp,plusw1
  2389  0020BE  6A01               	clrf	btemp^0,c
  2390  0020C0  0EFF               	movlw	-1
  2391  0020C2  50E3               	movf	plusw1,w,c
  2392  0020C4  2001               	addwfc	btemp^0,w,c
  2393  0020C6  6E01               	movwf	btemp^0,c
  2394  0020C8  0EFF               	movlw	-1
  2395  0020CA  C001  FFE3         	movff	btemp,plusw1
  2396  0020CE                     
  2397                           ;mem.c: 290:    count = count - 0x7F;
  2398                           ;stkvar	_count @ sp[(-4)+0]
  2399  0020CE  50E1               	movf	fsr1l,w,c
  2400  0020D0  0FFC               	addlw	-4
  2401  0020D2  6ED9               	movwf	fsr2l,c
  2402  0020D4  50E2               	movf	fsr1h,w,c
  2403  0020D6  6EDA               	movwf	fsr2h,c
  2404  0020D8  0EFF               	movlw	255
  2405  0020DA  22DA               	addwfc	fsr2h,f,c
  2406  0020DC  0E81               	movlw	129
  2407  0020DE  26DE               	addwf	postinc2,f,c
  2408  0020E0  0EFF               	movlw	255
  2409  0020E2  22DD               	addwfc	postdec2,f,c
  2410                           
  2411                           ;mem.c: 291:   }
  2412  0020E4  EF41  F010         	goto	l1564
  2413  0020E8                     l1572:
  2414                           
  2415                           ;mem.c: 293:   {;mem.c: 294:    *pHeap = count;
  2416                           ;stkvar	_count @ sp[(-4)+0]
  2417                           ;stkvar	_pHeap @ sp[(-4)+2]
  2418  0020E8  0EFE               	movlw	-2
  2419  0020EA  CFE3 FFD9          	movff	plusw1,fsr2l
  2420  0020EE  0EFF               	movlw	-1
  2421  0020F0  CFE3 FFDA          	movff	plusw1,fsr2h
  2422  0020F4  0EFC               	movlw	-4
  2423  0020F6  CFE3 FFDF          	movff	plusw1,indf2
  2424  0020FA                     
  2425                           ;mem.c: 295:    *(pHeap + count) = 0;
  2426                           ;stkvar	_count @ sp[(-4)+0]
  2427  0020FA  0EFC               	movlw	-4
  2428  0020FC  CFE3 F00B          	movff	plusw1,btemp+10
  2429  002100  0EFD               	movlw	-3
  2430  002102  CFE3 F00C          	movff	plusw1,btemp+11
  2431                           
  2432                           ;stkvar	_pHeap @ sp[(-4)+2]
  2433  002106  0EFE               	movlw	-2
  2434  002108  CFE3 F009          	movff	plusw1,btemp+8
  2435  00210C  0EFF               	movlw	-1
  2436  00210E  CFE3 F00A          	movff	plusw1,btemp+9
  2437  002112  500B               	movf	(btemp+10)^0,w,c
  2438  002114  2409               	addwf	(btemp+8)^0,w,c
  2439  002116  6ED9               	movwf	fsr2l,c
  2440  002118  500C               	movf	(btemp+11)^0,w,c
  2441  00211A  200A               	addwfc	(btemp+9)^0,w,c
  2442  00211C  6EDA               	movwf	fsr2h,c
  2443  00211E  0E00               	movlw	0
  2444  002120  6EDF               	movwf	indf2,c
  2445  002122                     
  2446                           ; _SRAMInitHeap: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2447  002122  52E5               	movf	postdec1,f,c
  2448  002124  52E5               	movf	postdec1,f,c
  2449  002126  52E5               	movf	postdec1,f,c
  2450  002128  52E5               	movf	postdec1,f,c
  2451  00212A  0012               	return		;funcret
  2452  00212C                     __end_of_SRAMInitHeap:
  2453                           	callstack 0
  2454                           
  2455 ;; *************** function _os_config *****************
  2456 ;; Defined at:
  2457 ;;		line 12 in file "kernel.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;		None
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;		None
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1  [STACK] void 
  2464 ;; Registers used:
  2465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2471 ;;      Params:         0       0       0       0       0       0       0       0       0
  2472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2474 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2475 ;;Total ram usage:        0 bytes
  2476 ;; Hardware stack levels used: 1
  2477 ;; Hardware stack levels required when called: 12
  2478 ;; This function calls:
  2479 ;;		_os_create_task
  2480 ;; This function is called by:
  2481 ;;		_main
  2482 ;; This function uses a reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text20
  2486  0028A2                     __ptext20:
  2487                           	callstack 0
  2488  0028A2                     _os_config:
  2489                           	callstack 18
  2490  0028A2                     
  2491                           ;kernel.c: 14:     readyQueue.readyQueueSize = 0;
  2492  0028A2  0E00               	movlw	0
  2493  0028A4  CFE8 F293          	movff	wreg,_readyQueue+530
  2494                           
  2495                           ;kernel.c: 15:     readyQueue.taskRunning = 0;
  2496  0028A8  0E00               	movlw	0
  2497  0028AA  CFE8 F294          	movff	wreg,_readyQueue+531
  2498  0028AE  0E00               	movlw	0
  2499  0028B0  CFE8 F295          	movff	wreg,_readyQueue+532
  2500  0028B4                     
  2501                           ;kernel.c: 18:     os_create_task(0, os_idle_task, 1);
  2502  0028B4  0E01               	movlw	1
  2503  0028B6  6EE6               	movwf	postinc1,c
  2504  0028B8  0E4E               	movlw	low _os_idle_task
  2505  0028BA  6EE6               	movwf	postinc1,c
  2506  0028BC  0E28               	movlw	high _os_idle_task
  2507  0028BE  6EE6               	movwf	postinc1,c
  2508  0028C0  0E00               	movlw	0
  2509  0028C2  6EE6               	movwf	postinc1,c
  2510  0028C4  EC96  F010         	call	_os_create_task	;# 
  2511  0028C8                     
  2512                           ; _os_config: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  2513  0028C8  0012               	return		;funcret
  2514  0028CA                     __end_of_os_config:
  2515                           	callstack 0
  2516                           
  2517 ;; *************** function _os_create_task *****************
  2518 ;; Defined at:
  2519 ;;		line 9 in file "syscall.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;  id              1  [STACK] unsigned char 
  2522 ;;  task_f          2  [STACK] PTR FTN()void 
  2523 ;;		 -> os_idle_task(1), task_battery(1), task_sensors(1), task_motors(1), 
  2524 ;;		 -> task_central(1), 
  2525 ;;  prior           1  [STACK] unsigned char 
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;  new_task      106  [STACK] struct tcb
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1  [STACK] void 
  2530 ;; Registers used:
  2531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2537 ;;      Params:         0       0       0       0       0       0       0       0       0
  2538 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2540 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2541 ;;Total ram usage:        0 bytes
  2542 ;; Hardware stack levels used: 1
  2543 ;; Hardware stack levels required when called: 11
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_main
  2548 ;;		_os_config
  2549 ;; This function uses a reentrant model
  2550 ;;
  2551                           
  2552                           	psect	text21
  2553  00212C                     __ptext21:
  2554                           	callstack 0
  2555  00212C                     _os_create_task:
  2556                           	callstack 0
  2557                           
  2558                           ; autosize = 106, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 v
      +                          argsize = 0, retsize = 0 argfudge = 0
  2559  00212C  0E6A               	movlw	106
  2560  00212E  26E1               	addwf	fsr1l,f,c
  2561  002130  0E00               	movlw	0
  2562  002132  22E2               	addwfc	fsr1h,f,c
  2563  002134                     
  2564                           ;syscall.c: 9: void os_create_task(uint8_t id, f_ptr task_f, uint8_t prior);syscall.c: 1
      +                          0: {;syscall.c: 11:     tcb_t new_task;;syscall.c: 13:     new_task.task_id = id;
  2565                           ;stkvar	_id @ sp[(-106)+-1]
  2566                           ;stkvar	_new_task @ sp[(-106)+0]
  2567  002134  0E95               	movlw	-107
  2568  002136  CFE3 F001          	movff	plusw1,btemp
  2569  00213A  0E96               	movlw	-106
  2570  00213C  C001  FFE3         	movff	btemp,plusw1
  2571  002140                     
  2572                           ;syscall.c: 14:     new_task.task_func = task_f;
  2573                           ;stkvar	_task_f @ sp[(-106)+-3]
  2574  002140  50E1               	movf	fsr1l,w,c
  2575  002142  0F93               	addlw	-109
  2576  002144  6ED9               	movwf	fsr2l,c
  2577  002146  50E2               	movf	fsr1h,w,c
  2578  002148  6EDA               	movwf	fsr2h,c
  2579  00214A  0EFF               	movlw	255
  2580  00214C  22DA               	addwfc	fsr2h,f,c
  2581                           
  2582                           ;stkvar	_new_task @ sp[(-106)+0]
  2583  00214E  0E97               	movlw	151
  2584  002150  24E1               	addwf	fsr1l,w,c
  2585  002152  6EE9               	movwf	fsr0l,c
  2586  002154  0EFF               	movlw	255
  2587  002156  20E2               	addwfc	fsr1h,w,c
  2588  002158  6EEA               	movwf	fsr0h,c
  2589  00215A  CFDE FFEE          	movff	postinc2,postinc0
  2590  00215E  CFDD FFED          	movff	postdec2,postdec0
  2591  002162                     
  2592                           ;syscall.c: 15:     new_task.task_priority = prior;
  2593                           ;stkvar	_prior @ sp[(-106)+-4]
  2594                           ;stkvar	_new_task @ sp[(-106)+0]
  2595  002162  0E9A               	movlw	154
  2596  002164  24E1               	addwf	fsr1l,w,c
  2597  002166  6ED9               	movwf	fsr2l,c
  2598  002168  0EFF               	movlw	255
  2599  00216A  20E2               	addwfc	fsr1h,w,c
  2600  00216C  6EDA               	movwf	fsr2h,c
  2601  00216E  0E92               	movlw	-110
  2602  002170  CFE3 FFDF          	movff	plusw1,indf2
  2603  002174                     
  2604                           ;syscall.c: 16:     new_task.task_state = READY;
  2605                           ;stkvar	_new_task @ sp[(-106)+0]
  2606  002174  0E99               	movlw	153
  2607  002176  24E1               	addwf	fsr1l,w,c
  2608  002178  6ED9               	movwf	fsr2l,c
  2609  00217A  0EFF               	movlw	255
  2610  00217C  20E2               	addwfc	fsr1h,w,c
  2611  00217E  6EDA               	movwf	fsr2h,c
  2612  002180  0E00               	movlw	0
  2613  002182  6EDF               	movwf	indf2,c
  2614  002184                     
  2615                           ;syscall.c: 18:     new_task.BSR_reg = 0;
  2616                           ;stkvar	_new_task @ sp[(-106)+0]
  2617  002184  0E9C               	movlw	156
  2618  002186  24E1               	addwf	fsr1l,w,c
  2619  002188  6ED9               	movwf	fsr2l,c
  2620  00218A  0EFF               	movlw	255
  2621  00218C  20E2               	addwfc	fsr1h,w,c
  2622  00218E  6EDA               	movwf	fsr2h,c
  2623  002190  0E00               	movlw	0
  2624  002192  6EDF               	movwf	indf2,c
  2625  002194                     
  2626                           ;syscall.c: 19:     new_task.STATUS_reg = 0;
  2627                           ;stkvar	_new_task @ sp[(-106)+0]
  2628  002194  0E9E               	movlw	158
  2629  002196  24E1               	addwf	fsr1l,w,c
  2630  002198  6ED9               	movwf	fsr2l,c
  2631  00219A  0EFF               	movlw	255
  2632  00219C  20E2               	addwfc	fsr1h,w,c
  2633  00219E  6EDA               	movwf	fsr2h,c
  2634  0021A0  0E00               	movlw	0
  2635  0021A2  6EDF               	movwf	indf2,c
  2636  0021A4                     
  2637                           ;syscall.c: 20:     new_task.WORK_reg = 0;
  2638                           ;stkvar	_new_task @ sp[(-106)+0]
  2639  0021A4  0E9D               	movlw	157
  2640  0021A6  24E1               	addwf	fsr1l,w,c
  2641  0021A8  6ED9               	movwf	fsr2l,c
  2642  0021AA  0EFF               	movlw	255
  2643  0021AC  20E2               	addwfc	fsr1h,w,c
  2644  0021AE  6EDA               	movwf	fsr2h,c
  2645  0021B0  0E00               	movlw	0
  2646  0021B2  6EDF               	movwf	indf2,c
  2647  0021B4                     
  2648                           ;syscall.c: 21:     new_task.task_sp = 0;
  2649                           ;stkvar	_new_task @ sp[(-106)+0]
  2650  0021B4  0EFF               	movlw	255
  2651  0021B6  24E1               	addwf	fsr1l,w,c
  2652  0021B8  6ED9               	movwf	fsr2l,c
  2653  0021BA  0EFF               	movlw	255
  2654  0021BC  20E2               	addwfc	fsr1h,w,c
  2655  0021BE  6EDA               	movwf	fsr2h,c
  2656  0021C0  0E00               	movlw	0
  2657  0021C2  6EDF               	movwf	indf2,c
  2658  0021C4                     
  2659                           ;syscall.c: 24:     readyQueue.readyQueue[readyQueue.readyQueueSize++] = new_task;
  2660                           ;stkvar	_new_task @ sp[(-106)+0]
  2661  0021C4  0E96               	movlw	150
  2662  0021C6  24E1               	addwf	fsr1l,w,c
  2663  0021C8  6ED9               	movwf	fsr2l,c
  2664  0021CA  0EFF               	movlw	255
  2665  0021CC  20E2               	addwfc	fsr1h,w,c
  2666  0021CE  6EDA               	movwf	fsr2h,c
  2667  0021D0  EE02  F093         	lfsr	0,_readyQueue+530
  2668  0021D4  50EF               	movf	indf0,w,c
  2669  0021D6  0D6A               	mullw	106
  2670  0021D8  0E81               	movlw	low _readyQueue
  2671  0021DA  24F3               	addwf	243,w,c
  2672  0021DC  6EE9               	movwf	fsr0l,c
  2673  0021DE  0E00               	movlw	high _readyQueue
  2674  0021E0  20F4               	addwfc	prodh,w,c
  2675  0021E2  6EEA               	movwf	fsr0h,c
  2676  0021E4  0E69               	movlw	105
  2677  0021E6                     u341:
  2678  0021E6  CFDB FFEB          	movff	plusw2,plusw0
  2679  0021EA  06E8               	decf	wreg,f,c
  2680  0021EC  E2FC               	bc	u341
  2681  0021EE  C293  FFE8         	movff	_readyQueue+530,wreg
  2682  0021F2  0F01               	addlw	1
  2683  0021F4  CFE8 F293          	movff	wreg,_readyQueue+530
  2684  0021F8                     
  2685                           ; _os_create_task: autosize = 106, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           4, argsize = 4, vargsize = 0
  2686  0021F8  0E92               	movlw	146
  2687  0021FA  26E1               	addwf	fsr1l,f,c
  2688  0021FC  0EFF               	movlw	255
  2689  0021FE  22E2               	addwfc	fsr1h,f,c
  2690  002200  0012               	return		;funcret
  2691  002202                     __end_of_os_create_task:
  2692                           	callstack 0
  2693                           
  2694 ;; *************** function _os_idle_task *****************
  2695 ;; Defined at:
  2696 ;;		line 45 in file "kernel.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;		None
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1  [STACK] void 
  2703 ;; Registers used:
  2704 ;;		wreg, status,2, status,0, btemp+11
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2710 ;;      Params:         0       0       0       0       0       0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2713 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2714 ;;Total ram usage:        0 bytes
  2715 ;; Hardware stack levels used: 1
  2716 ;; Hardware stack levels required when called: 4
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		_os_config
  2721 ;;		_priority_scheduler
  2722 ;; This function uses a reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text22
  2726  00284E                     __ptext22:
  2727                           	callstack 0
  2728  00284E                     _os_idle_task:
  2729                           	callstack 21
  2730  00284E                     
  2731                           ;kernel.c: 48:     TRISBbits.RB7 = 0;
  2732  00284E  9E93               	bcf	147,7,c	;volatile
  2733  002850                     l1948:
  2734                           
  2735                           ;kernel.c: 50:         LATBbits.LATB7 = ~PORTBbits.RB7;
  2736  002850  BE81               	btfsc	129,7,c	;volatile
  2737  002852  EF2D  F014         	goto	u88_21
  2738  002856  EF30  F014         	goto	u88_20
  2739  00285A                     u88_21:
  2740  00285A  0E01               	movlw	1
  2741  00285C  EF31  F014         	goto	u88_26
  2742  002860                     u88_20:
  2743  002860  0E00               	movlw	0
  2744  002862                     u88_26:
  2745  002862  0AFF               	xorlw	255
  2746  002864  6E0C               	movwf	(btemp+11)^0,c
  2747  002866  320C               	rrcf	(btemp+11)^0,f,c
  2748  002868  320C               	rrcf	(btemp+11)^0,f,c
  2749  00286A  508A               	movf	138,w,c	;volatile
  2750  00286C  180C               	xorwf	(btemp+11)^0,w,c
  2751  00286E  0B7F               	andlw	-129
  2752  002870  180C               	xorwf	(btemp+11)^0,w,c
  2753  002872  6E8A               	movwf	138,c	;volatile
  2754  002874  EF28  F014         	goto	l1948
  2755                           
  2756                           ; _os_idle_task: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2757  002878  0012               	return		;funcret
  2758  00287A                     __end_of_os_idle_task:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _task_motors *****************
  2762 ;; Defined at:
  2763 ;;		line 76 in file "user_app.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  local           4  [STACK] struct .
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1  [STACK] void 
  2770 ;; Registers used:
  2771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2777 ;;      Params:         0       0       0       0       0       0       0       0       0
  2778 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2780 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2781 ;;Total ram usage:        0 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; Hardware stack levels required when called: 8
  2784 ;; This function calls:
  2785 ;;		_mutex_lock
  2786 ;;		_mutex_unlock
  2787 ;;		_os_delay
  2788 ;;		_pwm_set_duty
  2789 ;; This function is called by:
  2790 ;;		_main
  2791 ;; This function uses a reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text23
  2795  001BA4                     __ptext23:
  2796                           	callstack 0
  2797  001BA4                     _task_motors:
  2798                           	callstack 0
  2799                           
  2800                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2801  001BA4  52E6               	movf	postinc1,f,c
  2802  001BA6  52E6               	movf	postinc1,f,c
  2803  001BA8  52E6               	movf	postinc1,f,c
  2804  001BAA  52E6               	movf	postinc1,f,c
  2805  001BAC                     l135:
  2806  001BAC                     
  2807                           ;user_app.c: 80:         mutex_lock(&g_speeds_mutex);
  2808  001BAC  0E30               	movlw	low _g_speeds_mutex
  2809  001BAE  6EE6               	movwf	postinc1,c
  2810  001BB0  0E00               	movlw	high _g_speeds_mutex
  2811  001BB2  6EE6               	movwf	postinc1,c
  2812  001BB4  EC3A  F002         	call	_mutex_lock	;wreg free
  2813  001BB8                     
  2814                           ;user_app.c: 81:         motor_speeds_t local = g_speeds;
  2815  001BB8  C029  F009         	movff	_g_speeds,btemp+8
  2816  001BBC  C02A  F00A         	movff	_g_speeds+1,btemp+9
  2817  001BC0  C02B  F00B         	movff	_g_speeds+2,btemp+10
  2818  001BC4  C02C  F00C         	movff	_g_speeds+3,btemp+11
  2819                           
  2820                           ;stkvar	_local @ sp[(-4)+0]
  2821  001BC8  0EFC               	movlw	-4
  2822  001BCA  C009  FFE3         	movff	btemp+8,plusw1
  2823  001BCE  0EFD               	movlw	-3
  2824  001BD0  C00A  FFE3         	movff	btemp+9,plusw1
  2825  001BD4  0EFE               	movlw	-2
  2826  001BD6  C00B  FFE3         	movff	btemp+10,plusw1
  2827  001BDA  0EFF               	movlw	-1
  2828  001BDC  C00C  FFE3         	movff	btemp+11,plusw1
  2829  001BE0                     
  2830                           ;user_app.c: 82:         mutex_unlock(&g_speeds_mutex);
  2831  001BE0  0E30               	movlw	low _g_speeds_mutex
  2832  001BE2  6EE6               	movwf	postinc1,c
  2833  001BE4  0E00               	movlw	high _g_speeds_mutex
  2834  001BE6  6EE6               	movwf	postinc1,c
  2835  001BE8  EC08  F00B         	call	_mutex_unlock	;wreg free
  2836  001BEC                     
  2837                           ;user_app.c: 84:         if (!g_flight_enabled) {
  2838  001BEC  5052               	movf	_g_flight_enabled^0,w,c	;volatile
  2839  001BEE  A4D8               	btfss	status,2,c
  2840  001BF0  EFFC  F00D         	goto	u179_21
  2841  001BF4  EFFE  F00D         	goto	u179_20
  2842  001BF8                     u179_21:
  2843  001BF8  EF1B  F00E         	goto	l2752
  2844  001BFC                     u179_20:
  2845  001BFC                     
  2846                           ;user_app.c: 85:             local.m1 = local.m2 = local.m3 = local.m4 = 0;
  2847                           ;stkvar	_local @ sp[(-4)+0]
  2848  001BFC  0EFF               	movlw	255
  2849  001BFE  24E1               	addwf	fsr1l,w,c
  2850  001C00  6ED9               	movwf	fsr2l,c
  2851  001C02  0EFF               	movlw	255
  2852  001C04  20E2               	addwfc	fsr1h,w,c
  2853  001C06  6EDA               	movwf	fsr2h,c
  2854  001C08  0E00               	movlw	0
  2855  001C0A  6EDF               	movwf	indf2,c
  2856                           
  2857                           ;stkvar	_local @ sp[(-4)+0]
  2858  001C0C  0EFE               	movlw	254
  2859  001C0E  24E1               	addwf	fsr1l,w,c
  2860  001C10  6EE9               	movwf	fsr0l,c
  2861  001C12  0EFF               	movlw	255
  2862  001C14  20E2               	addwfc	fsr1h,w,c
  2863  001C16  6EEA               	movwf	fsr0h,c
  2864  001C18  CFDF FFEF          	movff	indf2,indf0
  2865                           
  2866                           ;stkvar	_local @ sp[(-4)+0]
  2867  001C1C  0EFD               	movlw	253
  2868  001C1E  24E1               	addwf	fsr1l,w,c
  2869  001C20  6ED9               	movwf	fsr2l,c
  2870  001C22  0EFF               	movlw	255
  2871  001C24  20E2               	addwfc	fsr1h,w,c
  2872  001C26  6EDA               	movwf	fsr2h,c
  2873  001C28  CFEF FFDF          	movff	indf0,indf2
  2874  001C2C  50DF               	movf	indf2,w,c
  2875  001C2E  6E0C               	movwf	(btemp+11)^0,c
  2876                           
  2877                           ;stkvar	_local @ sp[(-4)+0]
  2878  001C30  0EFC               	movlw	-4
  2879  001C32  C00C  FFE3         	movff	btemp+11,plusw1
  2880  001C36                     l2752:
  2881                           
  2882                           ;user_app.c: 89:         pwm_set_duty(PWM_CH1, local.m1);
  2883                           ;stkvar	_local @ sp[(-4)+0]
  2884  001C36  0EFC               	movlw	-4
  2885  001C38  50E3               	movf	plusw1,w,c
  2886  001C3A  6EE6               	movwf	postinc1,c
  2887  001C3C  0E00               	movlw	0
  2888  001C3E  6EE6               	movwf	postinc1,c
  2889  001C40  EC88  F013         	call	_pwm_set_duty	;wreg free
  2890  001C44                     
  2891                           ;user_app.c: 90:         pwm_set_duty(PWM_CH2, local.m2);
  2892                           ;stkvar	_local @ sp[(-4)+0]
  2893  001C44  0EFD               	movlw	253
  2894  001C46  24E1               	addwf	fsr1l,w,c
  2895  001C48  6ED9               	movwf	fsr2l,c
  2896  001C4A  0EFF               	movlw	255
  2897  001C4C  20E2               	addwfc	fsr1h,w,c
  2898  001C4E  6EDA               	movwf	fsr2h,c
  2899  001C50  50DF               	movf	indf2,w,c
  2900  001C52  6EE6               	movwf	postinc1,c
  2901  001C54  0E01               	movlw	1
  2902  001C56  6EE6               	movwf	postinc1,c
  2903  001C58  EC88  F013         	call	_pwm_set_duty	;wreg free
  2904  001C5C                     
  2905                           ;user_app.c: 91:         pwm_set_duty(PWM_CH3, local.m3);
  2906                           ;stkvar	_local @ sp[(-4)+0]
  2907  001C5C  0EFE               	movlw	254
  2908  001C5E  24E1               	addwf	fsr1l,w,c
  2909  001C60  6ED9               	movwf	fsr2l,c
  2910  001C62  0EFF               	movlw	255
  2911  001C64  20E2               	addwfc	fsr1h,w,c
  2912  001C66  6EDA               	movwf	fsr2h,c
  2913  001C68  50DF               	movf	indf2,w,c
  2914  001C6A  6EE6               	movwf	postinc1,c
  2915  001C6C  0E02               	movlw	2
  2916  001C6E  6EE6               	movwf	postinc1,c
  2917  001C70  EC88  F013         	call	_pwm_set_duty	;wreg free
  2918  001C74                     
  2919                           ;user_app.c: 92:         pwm_set_duty(PWM_CH4, local.m4);
  2920                           ;stkvar	_local @ sp[(-4)+0]
  2921  001C74  0EFF               	movlw	255
  2922  001C76  24E1               	addwf	fsr1l,w,c
  2923  001C78  6ED9               	movwf	fsr2l,c
  2924  001C7A  0EFF               	movlw	255
  2925  001C7C  20E2               	addwfc	fsr1h,w,c
  2926  001C7E  6EDA               	movwf	fsr2h,c
  2927  001C80  50DF               	movf	indf2,w,c
  2928  001C82  6EE6               	movwf	postinc1,c
  2929  001C84  0E03               	movlw	3
  2930  001C86  6EE6               	movwf	postinc1,c
  2931  001C88  EC88  F013         	call	_pwm_set_duty	;wreg free
  2932  001C8C                     
  2933                           ;user_app.c: 94:         os_delay(5);
  2934  001C8C  0E05               	movlw	5
  2935  001C8E  6EE6               	movwf	postinc1,c
  2936  001C90  ECE0  F007         	call	_os_delay	;wreg free
  2937  001C94  EFD6  F00D         	goto	l135
  2938                           
  2939                           ; _task_motors: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2940  001C98  52E5               	movf	postdec1,f,c
  2941  001C9A  52E5               	movf	postdec1,f,c
  2942  001C9C  52E5               	movf	postdec1,f,c
  2943  001C9E  52E5               	movf	postdec1,f,c
  2944  001CA0  0012               	return		;funcret
  2945  001CA2                     __end_of_task_motors:
  2946                           	callstack 0
  2947                           
  2948 ;; *************** function _pwm_set_duty *****************
  2949 ;; Defined at:
  2950 ;;		line 58 in file "io.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  ch              1  [STACK] enum E3212
  2953 ;;  duty            1  [STACK] unsigned char 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1  [STACK] void 
  2958 ;; Registers used:
  2959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2965 ;;      Params:         0       0       0       0       0       0       0       0       0
  2966 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2968 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2969 ;;Total ram usage:        0 bytes
  2970 ;; Hardware stack levels used: 1
  2971 ;; Hardware stack levels required when called: 4
  2972 ;; This function calls:
  2973 ;;		Nothing
  2974 ;; This function is called by:
  2975 ;;		_task_motors
  2976 ;; This function uses a reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text24
  2980  002710                     __ptext24:
  2981                           	callstack 0
  2982  002710                     _pwm_set_duty:
  2983                           	callstack 20
  2984  002710                     
  2985                           ;io.c: 58: void pwm_set_duty(pwm_channel_t ch, uint8_t duty);io.c: 59: {;io.c: 60:     i
      +                          f (ch > PWM_CH4) return;
  2986                           ;stkvar	_ch @ sp[(0)+-1]
  2987  002710  0EFF               	movlw	-1
  2988  002712  CFE3 F001          	movff	plusw1,btemp
  2989  002716  0E03               	movlw	3
  2990  002718  6401               	cpfsgt	btemp^0,c
  2991  00271A  EF91  F013         	goto	u62_21
  2992  00271E  EF93  F013         	goto	u62_20
  2993  002722                     u62_21:
  2994  002722  EF95  F013         	goto	l1820
  2995  002726                     u62_20:
  2996  002726  EFAF  F013         	goto	l555
  2997  00272A                     l1820:
  2998                           
  2999                           ;io.c: 61:     if (duty > _pwm_period) duty = _pwm_period;
  3000                           ;stkvar	_duty @ sp[(0)+-2]
  3001  00272A  0EFE               	movlw	-2
  3002  00272C  50E3               	movf	plusw1,w,c
  3003  00272E  5C51               	subwf	__pwm_period^0,w,c	;volatile
  3004  002730  B0D8               	btfsc	status,0,c
  3005  002732  EF9D  F013         	goto	u63_21
  3006  002736  EF9F  F013         	goto	u63_20
  3007  00273A                     u63_21:
  3008  00273A  EFA2  F013         	goto	l1824
  3009  00273E                     u63_20:
  3010  00273E                     
  3011                           ;stkvar	_duty @ sp[(0)+-2]
  3012  00273E  0EFE               	movlw	-2
  3013  002740  C051  FFE3         	movff	__pwm_period,plusw1	;volatile
  3014  002744                     l1824:
  3015                           
  3016                           ;io.c: 62:     _pwm_duty[(uint8_t)ch] = duty;
  3017                           ;stkvar	_duty @ sp[(0)+-2]
  3018                           ;stkvar	_ch @ sp[(0)+-1]
  3019  002744  0EFF               	movlw	-1
  3020  002746  50E3               	movf	plusw1,w,c
  3021  002748  6E0B               	movwf	(btemp+10)^0,c
  3022  00274A  6A0C               	clrf	(btemp+11)^0,c
  3023  00274C  0E21               	movlw	low __pwm_duty
  3024  00274E  240B               	addwf	(btemp+10)^0,w,c
  3025  002750  6ED9               	movwf	fsr2l,c
  3026  002752  0E00               	movlw	high __pwm_duty
  3027  002754  200C               	addwfc	(btemp+11)^0,w,c
  3028  002756  6EDA               	movwf	fsr2h,c
  3029  002758  0EFE               	movlw	-2
  3030  00275A  CFE3 FFDF          	movff	plusw1,indf2
  3031  00275E                     l555:
  3032                           
  3033                           ; _pwm_set_duty: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  3034  00275E  52E5               	movf	postdec1,f,c
  3035  002760  52E5               	movf	postdec1,f,c
  3036  002762  0012               	return		;funcret
  3037  002764                     __end_of_pwm_set_duty:
  3038                           	callstack 0
  3039                           
  3040 ;; *************** function _os_delay *****************
  3041 ;; Defined at:
  3042 ;;		line 27 in file "syscall.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  time            1  [STACK] unsigned char 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1  [STACK] void 
  3049 ;; Registers used:
  3050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3056 ;;      Params:         0       0       0       0       0       0       0       0       0
  3057 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3059 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3060 ;;Total ram usage:        0 bytes
  3061 ;; Hardware stack levels used: 1
  3062 ;; Hardware stack levels required when called: 7
  3063 ;; This function calls:
  3064 ;;		_scheduler
  3065 ;; This function is called by:
  3066 ;;		_task_motors
  3067 ;;		_task_sensors
  3068 ;;		_task_battery
  3069 ;; This function uses a reentrant model
  3070 ;;
  3071                           
  3072                           	psect	text25
  3073  000FC0                     __ptext25:
  3074                           	callstack 0
  3075  000FC0                     _os_delay:
  3076                           	callstack 17
  3077  000FC0                     
  3078                           ;syscall.c: 27: void os_delay(uint8_t time);syscall.c: 28: {;syscall.c: 29:     (INTCONb
      +                          its.GIE = 0);
  3079  000FC0  9EF2               	bcf	242,7,c	;volatile
  3080  000FC2                     
  3081                           ;syscall.c: 31:     readyQueue.taskRunning->task_time_to_waiting = time;
  3082                           ;stkvar	_time @ sp[(0)+-1]
  3083  000FC2  EE22  F094         	lfsr	2,_readyQueue+531
  3084  000FC6  EE00 F005          	lfsr	0,5
  3085  000FCA  50DE               	movf	postinc2,w,c
  3086  000FCC  26E9               	addwf	fsr0l,f,c
  3087  000FCE  50DD               	movf	postdec2,w,c
  3088  000FD0  22EA               	addwfc	fsr0h,f,c
  3089  000FD2  0EFF               	movlw	-1
  3090  000FD4  CFE3 FFEF          	movff	plusw1,indf0
  3091  000FD8  EE22  F094         	lfsr	2,_readyQueue+531
  3092  000FDC  EE00 F003          	lfsr	0,3
  3093  000FE0  50DE               	movf	postinc2,w,c
  3094  000FE2  26E9               	addwf	fsr0l,f,c
  3095  000FE4  50DD               	movf	postdec2,w,c
  3096  000FE6  22EA               	addwfc	fsr0h,f,c
  3097  000FE8  04EE               	decf	postinc0,w,c
  3098  000FEA  A4D8               	btfss	status,2,c
  3099  000FEC  EFFA  F007         	goto	u167_21
  3100  000FF0  EFFC  F007         	goto	u167_20
  3101  000FF4                     u167_21:
  3102  000FF4  EF62  F008         	goto	l2654
  3103  000FF8                     u167_20:
  3104  000FF8  EE22  F094         	lfsr	2,_readyQueue+531
  3105  000FFC  EE00 F006          	lfsr	0,6
  3106  001000  50DE               	movf	postinc2,w,c
  3107  001002  26E9               	addwf	fsr0l,f,c
  3108  001004  50DD               	movf	postdec2,w,c
  3109  001006  22EA               	addwfc	fsr0h,f,c
  3110  001008  CFE0 FFEF          	movff	bsr,indf0	;volatile
  3111  00100C  EE22  F094         	lfsr	2,_readyQueue+531
  3112  001010  EE00 F008          	lfsr	0,8
  3113  001014  50DE               	movf	postinc2,w,c
  3114  001016  26E9               	addwf	fsr0l,f,c
  3115  001018  50DD               	movf	postdec2,w,c
  3116  00101A  22EA               	addwfc	fsr0h,f,c
  3117  00101C  CFD8 FFEF          	movff	status,indf0	;volatile
  3118  001020  EE22  F094         	lfsr	2,_readyQueue+531
  3119  001024  EE00 F007          	lfsr	0,7
  3120  001028  50DE               	movf	postinc2,w,c
  3121  00102A  26E9               	addwf	fsr0l,f,c
  3122  00102C  50DD               	movf	postdec2,w,c
  3123  00102E  22EA               	addwfc	fsr0h,f,c
  3124  001030  CFE8 FFEF          	movff	wreg,indf0	;volatile
  3125  001034  EE22  F094         	lfsr	2,_readyQueue+531
  3126  001038  EE00 F069          	lfsr	0,105
  3127  00103C  50DE               	movf	postinc2,w,c
  3128  00103E  26E9               	addwf	fsr0l,f,c
  3129  001040  50DD               	movf	postdec2,w,c
  3130  001042  22EA               	addwfc	fsr0h,f,c
  3131  001044  0E00               	movlw	0
  3132  001046  6EEF               	movwf	indf0,c
  3133  001048  EF50  F008         	goto	l2650
  3134  00104C                     l2646:
  3135  00104C  EE22  F094         	lfsr	2,_readyQueue+531
  3136  001050  EE00 F069          	lfsr	0,105
  3137  001054  50DE               	movf	postinc2,w,c
  3138  001056  26E9               	addwf	fsr0l,f,c
  3139  001058  50DD               	movf	postdec2,w,c
  3140  00105A  22EA               	addwfc	fsr0h,f,c
  3141  00105C  50EF               	movf	indf0,w,c
  3142  00105E  0D03               	mullw	3
  3143  001060  EE22  F094         	lfsr	2,_readyQueue+531
  3144  001064  CFDE F00B          	movff	postinc2,btemp+10
  3145  001068  CFDD F00C          	movff	postdec2,btemp+11
  3146  00106C  50F3               	movf	243,w,c
  3147  00106E  260B               	addwf	(btemp+10)^0,f,c
  3148  001070  50F4               	movf	244,w,c
  3149  001072  220C               	addwfc	(btemp+11)^0,f,c
  3150  001074  0E09               	movlw	9
  3151  001076  240B               	addwf	(btemp+10)^0,w,c
  3152  001078  6ED9               	movwf	fsr2l,c
  3153  00107A  0E00               	movlw	0
  3154  00107C  200C               	addwfc	(btemp+11)^0,w,c
  3155  00107E  6EDA               	movwf	fsr2h,c
  3156  001080  CFFD FFDE          	movff	tosl,postinc2	;volatile
  3157  001084  CFFE FFDE          	movff	tosh,postinc2	;volatile
  3158  001088  CFFF FFDE          	movff	tosu,postinc2	;volatile
  3159  00108C  EE22  F094         	lfsr	2,_readyQueue+531
  3160  001090  EE00 F069          	lfsr	0,105
  3161  001094  50DE               	movf	postinc2,w,c
  3162  001096  26E9               	addwf	fsr0l,f,c
  3163  001098  50DD               	movf	postdec2,w,c
  3164  00109A  22EA               	addwfc	fsr0h,f,c
  3165  00109C  2AEF               	incf	indf0,f,c
  3166  00109E  0006               	pop		;# 
  3167  0010A0                     l2650:
  3168  0010A0  50FC               	movf	252,w,c	;volatile
  3169  0010A2  A4D8               	btfss	status,2,c
  3170  0010A4  EF56  F008         	goto	u168_21
  3171  0010A8  EF58  F008         	goto	u168_20
  3172  0010AC                     u168_21:
  3173  0010AC  EF26  F008         	goto	l2646
  3174  0010B0                     u168_20:
  3175  0010B0  EE22  F094         	lfsr	2,_readyQueue+531
  3176  0010B4  EE00 F003          	lfsr	0,3
  3177  0010B8  50DE               	movf	postinc2,w,c
  3178  0010BA  26E9               	addwf	fsr0l,f,c
  3179  0010BC  50DD               	movf	postdec2,w,c
  3180  0010BE  22EA               	addwfc	fsr0h,f,c
  3181  0010C0  0E02               	movlw	2
  3182  0010C2  6EEF               	movwf	indf0,c
  3183  0010C4                     l2654:
  3184                           
  3185                           ;syscall.c: 34:     scheduler();
  3186  0010C4  ECC9  F014         	call	_scheduler	;wreg free
  3187  0010C8  EE22  F094         	lfsr	2,_readyQueue+531
  3188  0010CC  EE00 F003          	lfsr	0,3
  3189  0010D0  50DE               	movf	postinc2,w,c
  3190  0010D2  26E9               	addwf	fsr0l,f,c
  3191  0010D4  50DD               	movf	postdec2,w,c
  3192  0010D6  22EA               	addwfc	fsr0h,f,c
  3193  0010D8  50EF               	movf	indf0,w,c
  3194  0010DA  A4D8               	btfss	status,2,c
  3195  0010DC  EF72  F008         	goto	u169_21
  3196  0010E0  EF74  F008         	goto	u169_20
  3197  0010E4                     u169_21:
  3198  0010E4  EFFC  F008         	goto	l2678
  3199  0010E8                     u169_20:
  3200  0010E8  EE22  F094         	lfsr	2,_readyQueue+531
  3201  0010EC  EE00 F006          	lfsr	0,6
  3202  0010F0  50DE               	movf	postinc2,w,c
  3203  0010F2  26E9               	addwf	fsr0l,f,c
  3204  0010F4  50DD               	movf	postdec2,w,c
  3205  0010F6  22EA               	addwfc	fsr0h,f,c
  3206  0010F8  50EF               	movf	indf0,w,c
  3207  0010FA  6EE0               	movwf	224,c	;volatile
  3208  0010FC  EE22  F094         	lfsr	2,_readyQueue+531
  3209  001100  EE00 F008          	lfsr	0,8
  3210  001104  50DE               	movf	postinc2,w,c
  3211  001106  26E9               	addwf	fsr0l,f,c
  3212  001108  50DD               	movf	postdec2,w,c
  3213  00110A  22EA               	addwfc	fsr0h,f,c
  3214  00110C  50EF               	movf	indf0,w,c
  3215  00110E  6ED8               	movwf	216,c	;volatile
  3216  001110  EE22  F094         	lfsr	2,_readyQueue+531
  3217  001114  EE00 F007          	lfsr	0,7
  3218  001118  50DE               	movf	postinc2,w,c
  3219  00111A  26E9               	addwf	fsr0l,f,c
  3220  00111C  50DD               	movf	postdec2,w,c
  3221  00111E  22EA               	addwfc	fsr0h,f,c
  3222  001120  50EF               	movf	indf0,w,c
  3223  001122  6E0C               	movwf	(btemp+11)^0,c
  3224  001124  500C               	movf	(btemp+11)^0,w,c
  3225  001126  6AFC               	clrf	252,c	;volatile
  3226  001128  EE22  F094         	lfsr	2,_readyQueue+531
  3227  00112C  EE00 F069          	lfsr	0,105
  3228  001130  50DE               	movf	postinc2,w,c
  3229  001132  26E9               	addwf	fsr0l,f,c
  3230  001134  50DD               	movf	postdec2,w,c
  3231  001136  22EA               	addwfc	fsr0h,f,c
  3232  001138  50EF               	movf	indf0,w,c
  3233  00113A  A4D8               	btfss	status,2,c
  3234  00113C  EFA2  F008         	goto	u170_21
  3235  001140  EFA4  F008         	goto	u170_20
  3236  001144                     u170_21:
  3237  001144  EFB8  F008         	goto	l230
  3238  001148                     u170_20:
  3239  001148  0005               	push		;# 
  3240  00114A  EE22  F094         	lfsr	2,_readyQueue+531
  3241  00114E  EE00 F001          	lfsr	0,1
  3242  001152  50DE               	movf	postinc2,w,c
  3243  001154  26E9               	addwf	fsr0l,f,c
  3244  001156  50DD               	movf	postdec2,w,c
  3245  001158  22EA               	addwfc	fsr0h,f,c
  3246  00115A  CFEE F00B          	movff	postinc0,btemp+10
  3247  00115E  CFED F00C          	movff	postdec0,btemp+11
  3248  001162  C00B  FFFD         	movff	btemp+10,tosl	;volatile
  3249  001166  C00C  FFFE         	movff	btemp+11,tosh	;volatile
  3250  00116A  6AFF               	clrf	255,c	;volatile
  3251  00116C  EFF2  F008         	goto	l2676
  3252  001170                     l230:
  3253  001170  0005               	push		;# 
  3254  001172  EE22  F094         	lfsr	2,_readyQueue+531
  3255  001176  EE00 F069          	lfsr	0,105
  3256  00117A  50DE               	movf	postinc2,w,c
  3257  00117C  26E9               	addwf	fsr0l,f,c
  3258  00117E  50DD               	movf	postdec2,w,c
  3259  001180  22EA               	addwfc	fsr0h,f,c
  3260  001182  06EF               	decf	indf0,f,c
  3261  001184  EE22  F094         	lfsr	2,_readyQueue+531
  3262  001188  EE00 F069          	lfsr	0,105
  3263  00118C  50DE               	movf	postinc2,w,c
  3264  00118E  26E9               	addwf	fsr0l,f,c
  3265  001190  50DD               	movf	postdec2,w,c
  3266  001192  22EA               	addwfc	fsr0h,f,c
  3267  001194  50EF               	movf	indf0,w,c
  3268  001196  0D03               	mullw	3
  3269  001198  EE22  F094         	lfsr	2,_readyQueue+531
  3270  00119C  CFDE F00B          	movff	postinc2,btemp+10
  3271  0011A0  CFDD F00C          	movff	postdec2,btemp+11
  3272  0011A4  50F3               	movf	243,w,c
  3273  0011A6  260B               	addwf	(btemp+10)^0,f,c
  3274  0011A8  50F4               	movf	244,w,c
  3275  0011AA  220C               	addwfc	(btemp+11)^0,f,c
  3276  0011AC  0E09               	movlw	9
  3277  0011AE  240B               	addwf	(btemp+10)^0,w,c
  3278  0011B0  6ED9               	movwf	fsr2l,c
  3279  0011B2  0E00               	movlw	0
  3280  0011B4  200C               	addwfc	(btemp+11)^0,w,c
  3281  0011B6  6EDA               	movwf	fsr2h,c
  3282  0011B8  CFDE FFFD          	movff	postinc2,tosl	;volatile
  3283  0011BC  CFDE FFFE          	movff	postinc2,tosh	;volatile
  3284  0011C0  CFDD FFFF          	movff	postdec2,tosu	;volatile
  3285  0011C4  EE22  F094         	lfsr	2,_readyQueue+531
  3286  0011C8  EE00 F069          	lfsr	0,105
  3287  0011CC  50DE               	movf	postinc2,w,c
  3288  0011CE  26E9               	addwf	fsr0l,f,c
  3289  0011D0  50DD               	movf	postdec2,w,c
  3290  0011D2  22EA               	addwfc	fsr0h,f,c
  3291  0011D4  50EF               	movf	indf0,w,c
  3292  0011D6  A4D8               	btfss	status,2,c
  3293  0011D8  EFF0  F008         	goto	u171_21
  3294  0011DC  EFF2  F008         	goto	u171_20
  3295  0011E0                     u171_21:
  3296  0011E0  EFB8  F008         	goto	l230
  3297  0011E4                     u171_20:
  3298  0011E4                     l2676:
  3299  0011E4  EE22  F094         	lfsr	2,_readyQueue+531
  3300  0011E8  EE00 F003          	lfsr	0,3
  3301  0011EC  50DE               	movf	postinc2,w,c
  3302  0011EE  26E9               	addwf	fsr0l,f,c
  3303  0011F0  50DD               	movf	postdec2,w,c
  3304  0011F2  22EA               	addwfc	fsr0h,f,c
  3305  0011F4  0E01               	movlw	1
  3306  0011F6  6EEF               	movwf	indf0,c
  3307  0011F8                     l2678:
  3308                           
  3309                           ;syscall.c: 37:     (INTCONbits.GIE = 1);
  3310  0011F8  8EF2               	bsf	242,7,c	;volatile
  3311  0011FA                     
  3312                           ; _os_delay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, args
      +                          ize = 1, vargsize = 0
  3313  0011FA  52E5               	movf	postdec1,f,c
  3314  0011FC  0012               	return		;funcret
  3315  0011FE                     __end_of_os_delay:
  3316                           	callstack 0
  3317                           
  3318 ;; *************** function _mutex_unlock *****************
  3319 ;; Defined at:
  3320 ;;		line 93 in file "sync.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  m               2  [STACK] PTR struct mutex
  3323 ;;		 -> g_speeds_mutex(15), 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  next            2  [STACK] PTR struct tcb
  3326 ;;		 -> NULL(0), readyQueue(533), 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  1  [STACK] void 
  3329 ;; Registers used:
  3330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3336 ;;      Params:         0       0       0       0       0       0       0       0       0
  3337 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3339 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3340 ;;Total ram usage:        0 bytes
  3341 ;; Hardware stack levels used: 1
  3342 ;; Hardware stack levels required when called: 5
  3343 ;; This function calls:
  3344 ;;		___awmod
  3345 ;; This function is called by:
  3346 ;;		_task_motors
  3347 ;;		_task_central
  3348 ;; This function uses a reentrant model
  3349 ;;
  3350                           
  3351                           	psect	text26
  3352  001610                     __ptext26:
  3353                           	callstack 0
  3354  001610                     _mutex_unlock:
  3355                           	callstack 0
  3356                           
  3357                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3358  001610  52E6               	movf	postinc1,f,c
  3359  001612  52E6               	movf	postinc1,f,c
  3360  001614                     
  3361                           ;sync.c: 93: void mutex_unlock(mutex_t *m);sync.c: 94: {;sync.c: 95:     (INTCONbits.GIE
      +                           = 0);
  3362  001614  9EF2               	bcf	242,7,c	;volatile
  3363  001616                     
  3364                           ;sync.c: 97:     if (m->owner != readyQueue.taskRunning) {
  3365  001616  EE22  F094         	lfsr	2,_readyQueue+531
  3366                           
  3367                           ;stkvar	_m @ sp[(-2)+-2]
  3368  00161A  0EFC               	movlw	-4
  3369  00161C  CFE3 F00B          	movff	plusw1,btemp+10
  3370  001620  0EFD               	movlw	-3
  3371  001622  CFE3 F00C          	movff	plusw1,btemp+11
  3372  001626  0E01               	movlw	1
  3373  001628  240B               	addwf	(btemp+10)^0,w,c
  3374  00162A  6EE9               	movwf	fsr0l,c
  3375  00162C  0E00               	movlw	0
  3376  00162E  200C               	addwfc	(btemp+11)^0,w,c
  3377  001630  6EEA               	movwf	fsr0h,c
  3378  001632  50DE               	movf	postinc2,w,c
  3379  001634  18EE               	xorwf	postinc0,w,c
  3380  001636  E109               	bnz	u165_20
  3381  001638  50DE               	movf	postinc2,w,c
  3382  00163A  18EE               	xorwf	postinc0,w,c
  3383  00163C  B4D8               	btfsc	status,2,c
  3384  00163E  EF23  F00B         	goto	u165_21
  3385  001642  EF25  F00B         	goto	u165_20
  3386  001646                     u165_21:
  3387  001646  EF28  F00B         	goto	l2622
  3388  00164A                     u165_20:
  3389  00164A                     
  3390                           ;sync.c: 98:         (INTCONbits.GIE = 1);
  3391  00164A  8EF2               	bsf	242,7,c	;volatile
  3392                           
  3393                           ;sync.c: 99:         return;
  3394  00164C  EFDC  F00B         	goto	l423
  3395  001650                     l2622:
  3396                           
  3397                           ;sync.c: 103:     if (m->q_in != m->q_out) {
  3398                           ;stkvar	_m @ sp[(-2)+-2]
  3399  001650  0EFC               	movlw	-4
  3400  001652  CFE3 F00B          	movff	plusw1,btemp+10
  3401  001656  0EFD               	movlw	-3
  3402  001658  CFE3 F00C          	movff	plusw1,btemp+11
  3403  00165C  0E0E               	movlw	14
  3404  00165E  240B               	addwf	(btemp+10)^0,w,c
  3405  001660  6ED9               	movwf	fsr2l,c
  3406  001662  0E00               	movlw	0
  3407  001664  200C               	addwfc	(btemp+11)^0,w,c
  3408  001666  6EDA               	movwf	fsr2h,c
  3409                           
  3410                           ;stkvar	_m @ sp[(-2)+-2]
  3411  001668  0EFC               	movlw	-4
  3412  00166A  CFE3 F00B          	movff	plusw1,btemp+10
  3413  00166E  0EFD               	movlw	-3
  3414  001670  CFE3 F00C          	movff	plusw1,btemp+11
  3415  001674  0E0D               	movlw	13
  3416  001676  240B               	addwf	(btemp+10)^0,w,c
  3417  001678  6EE9               	movwf	fsr0l,c
  3418  00167A  0E00               	movlw	0
  3419  00167C  200C               	addwfc	(btemp+11)^0,w,c
  3420  00167E  6EEA               	movwf	fsr0h,c
  3421  001680  50DE               	movf	postinc2,w,c
  3422  001682  18EE               	xorwf	postinc0,w,c
  3423  001684  B4D8               	btfsc	status,2,c
  3424  001686  EF47  F00B         	goto	u166_21
  3425  00168A  EF49  F00B         	goto	u166_20
  3426  00168E                     u166_21:
  3427  00168E  EFC3  F00B         	goto	l2632
  3428  001692                     u166_20:
  3429  001692                     
  3430                           ;sync.c: 104:         tcb_t *next = m->wait_queue[m->q_out];
  3431                           ;stkvar	_m @ sp[(-2)+-2]
  3432  001692  0EFC               	movlw	-4
  3433  001694  CFE3 F00B          	movff	plusw1,btemp+10
  3434  001698  0EFD               	movlw	-3
  3435  00169A  CFE3 F00C          	movff	plusw1,btemp+11
  3436  00169E  0E0E               	movlw	14
  3437  0016A0  240B               	addwf	(btemp+10)^0,w,c
  3438  0016A2  6ED9               	movwf	fsr2l,c
  3439  0016A4  0E00               	movlw	0
  3440  0016A6  200C               	addwfc	(btemp+11)^0,w,c
  3441  0016A8  6EDA               	movwf	fsr2h,c
  3442  0016AA  50DF               	movf	indf2,w,c
  3443  0016AC  0D02               	mullw	2
  3444  0016AE  CFF3 F00B          	movff	prodl,btemp+10
  3445  0016B2  CFF4 F00C          	movff	prodh,btemp+11
  3446                           
  3447                           ;stkvar	_m @ sp[(-2)+-2]
  3448  0016B6  0EFC               	movlw	-4
  3449  0016B8  50E3               	movf	plusw1,w,c
  3450  0016BA  260B               	addwf	(btemp+10)^0,f,c
  3451  0016BC  0EFD               	movlw	-3
  3452  0016BE  50E3               	movf	plusw1,w,c
  3453  0016C0  220C               	addwfc	(btemp+11)^0,f,c
  3454  0016C2  0E03               	movlw	3
  3455  0016C4  240B               	addwf	(btemp+10)^0,w,c
  3456  0016C6  6ED9               	movwf	fsr2l,c
  3457  0016C8  0E00               	movlw	0
  3458  0016CA  200C               	addwfc	(btemp+11)^0,w,c
  3459  0016CC  6EDA               	movwf	fsr2h,c
  3460  0016CE  CFDE F00B          	movff	postinc2,btemp+10
  3461  0016D2  CFDD F00C          	movff	postdec2,btemp+11
  3462                           
  3463                           ;stkvar	_next @ sp[(-2)+0]
  3464  0016D6  0EFF               	movlw	-1
  3465  0016D8  C00C  FFE3         	movff	btemp+11,plusw1
  3466  0016DC  0EFE               	movlw	-2
  3467  0016DE  C00B  FFE3         	movff	btemp+10,plusw1
  3468  0016E2                     
  3469                           ;sync.c: 105:         m->q_out = (m->q_out + 1) % 5;
  3470                           ;stkvar	_m @ sp[(-2)+-2]
  3471  0016E2  0EFC               	movlw	-4
  3472  0016E4  CFE3 F00B          	movff	plusw1,btemp+10
  3473  0016E8  0EFD               	movlw	-3
  3474  0016EA  CFE3 F00C          	movff	plusw1,btemp+11
  3475  0016EE  0E0E               	movlw	14
  3476  0016F0  240B               	addwf	(btemp+10)^0,w,c
  3477  0016F2  6ED9               	movwf	fsr2l,c
  3478  0016F4  0E00               	movlw	0
  3479  0016F6  200C               	addwfc	(btemp+11)^0,w,c
  3480  0016F8  6EDA               	movwf	fsr2h,c
  3481  0016FA  0E05               	movlw	5
  3482  0016FC  6EE6               	movwf	postinc1,c
  3483  0016FE  0E00               	movlw	0
  3484  001700  6EE6               	movwf	postinc1,c
  3485                           
  3486                           ;stkvar	_m @ sp[(-4)+-2]
  3487  001702  0EFA               	movlw	-6
  3488  001704  CFE3 F00B          	movff	plusw1,btemp+10
  3489  001708  0EFB               	movlw	-5
  3490  00170A  CFE3 F00C          	movff	plusw1,btemp+11
  3491  00170E  0E0E               	movlw	14
  3492  001710  240B               	addwf	(btemp+10)^0,w,c
  3493  001712  6EE9               	movwf	fsr0l,c
  3494  001714  0E00               	movlw	0
  3495  001716  200C               	addwfc	(btemp+11)^0,w,c
  3496  001718  6EEA               	movwf	fsr0h,c
  3497  00171A  50EF               	movf	indf0,w,c
  3498  00171C  6E0B               	movwf	(btemp+10)^0,c
  3499  00171E  6A0C               	clrf	(btemp+11)^0,c
  3500  001720  0E01               	movlw	1
  3501  001722  260B               	addwf	(btemp+10)^0,f,c
  3502  001724  0E00               	movlw	0
  3503  001726  220C               	addwfc	(btemp+11)^0,f,c
  3504  001728  C00B  FFE6         	movff	btemp+10,postinc1
  3505  00172C  C00C  FFE6         	movff	btemp+11,postinc1
  3506  001730  ECAB  F00C         	call	___awmod	;wreg free
  3507  001734  5001               	movf	btemp^0,w,c
  3508  001736  6EDF               	movwf	indf2,c
  3509  001738                     
  3510                           ;sync.c: 106:         next->task_state = READY;
  3511                           ;stkvar	_next @ sp[(-2)+0]
  3512  001738  0EFE               	movlw	-2
  3513  00173A  CFE3 F00B          	movff	plusw1,btemp+10
  3514  00173E  0EFF               	movlw	-1
  3515  001740  CFE3 F00C          	movff	plusw1,btemp+11
  3516  001744  0E03               	movlw	3
  3517  001746  240B               	addwf	(btemp+10)^0,w,c
  3518  001748  6ED9               	movwf	fsr2l,c
  3519  00174A  0E00               	movlw	0
  3520  00174C  200C               	addwfc	(btemp+11)^0,w,c
  3521  00174E  6EDA               	movwf	fsr2h,c
  3522  001750  0E00               	movlw	0
  3523  001752  6EDF               	movwf	indf2,c
  3524  001754                     
  3525                           ;sync.c: 107:         m->owner = next;
  3526                           ;stkvar	_next @ sp[(-2)+0]
  3527  001754  50E1               	movf	fsr1l,w,c
  3528  001756  0FFE               	addlw	-2
  3529  001758  6ED9               	movwf	fsr2l,c
  3530  00175A  50E2               	movf	fsr1h,w,c
  3531  00175C  6EDA               	movwf	fsr2h,c
  3532  00175E  0EFF               	movlw	255
  3533  001760  22DA               	addwfc	fsr2h,f,c
  3534                           
  3535                           ;stkvar	_m @ sp[(-2)+-2]
  3536  001762  0EFC               	movlw	-4
  3537  001764  CFE3 F00B          	movff	plusw1,btemp+10
  3538  001768  0EFD               	movlw	-3
  3539  00176A  CFE3 F00C          	movff	plusw1,btemp+11
  3540  00176E  0E01               	movlw	1
  3541  001770  240B               	addwf	(btemp+10)^0,w,c
  3542  001772  6EE9               	movwf	fsr0l,c
  3543  001774  0E00               	movlw	0
  3544  001776  200C               	addwfc	(btemp+11)^0,w,c
  3545  001778  6EEA               	movwf	fsr0h,c
  3546  00177A  CFDE FFEE          	movff	postinc2,postinc0
  3547  00177E  CFDD FFED          	movff	postdec2,postdec0
  3548                           
  3549                           ;sync.c: 109:     } else {
  3550  001782  EFDB  F00B         	goto	l2636
  3551  001786                     l2632:
  3552                           
  3553                           ;sync.c: 111:         m->locked = 0;
  3554                           ;stkvar	_m @ sp[(-2)+-2]
  3555  001786  0EFC               	movlw	-4
  3556  001788  CFE3 FFD9          	movff	plusw1,fsr2l
  3557  00178C  0EFD               	movlw	-3
  3558  00178E  CFE3 FFDA          	movff	plusw1,fsr2h
  3559  001792  0E00               	movlw	0
  3560  001794  6EDF               	movwf	indf2,c
  3561  001796                     
  3562                           ;sync.c: 112:         m->owner = 0;
  3563                           ;stkvar	_m @ sp[(-2)+-2]
  3564  001796  0EFC               	movlw	-4
  3565  001798  CFE3 F00B          	movff	plusw1,btemp+10
  3566  00179C  0EFD               	movlw	-3
  3567  00179E  CFE3 F00C          	movff	plusw1,btemp+11
  3568  0017A2  0E01               	movlw	1
  3569  0017A4  240B               	addwf	(btemp+10)^0,w,c
  3570  0017A6  6ED9               	movwf	fsr2l,c
  3571  0017A8  0E00               	movlw	0
  3572  0017AA  200C               	addwfc	(btemp+11)^0,w,c
  3573  0017AC  6EDA               	movwf	fsr2h,c
  3574  0017AE  0E00               	movlw	0
  3575  0017B0  6EDE               	movwf	postinc2,c
  3576  0017B2  0E00               	movlw	0
  3577  0017B4  6EDD               	movwf	postdec2,c
  3578  0017B6                     l2636:
  3579                           
  3580                           ;sync.c: 114:     (INTCONbits.GIE = 1);
  3581  0017B6  8EF2               	bsf	242,7,c	;volatile
  3582  0017B8                     l423:
  3583                           
  3584                           ; _mutex_unlock: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  3585  0017B8  52E5               	movf	postdec1,f,c
  3586  0017BA  52E5               	movf	postdec1,f,c
  3587  0017BC  52E5               	movf	postdec1,f,c
  3588  0017BE  52E5               	movf	postdec1,f,c
  3589  0017C0  0012               	return		;funcret
  3590  0017C2                     __end_of_mutex_unlock:
  3591                           	callstack 0
  3592                           
  3593 ;; *************** function _mutex_lock *****************
  3594 ;; Defined at:
  3595 ;;		line 73 in file "sync.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  m               2  [STACK] PTR struct mutex
  3598 ;;		 -> g_speeds_mutex(15), 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1  [STACK] void 
  3603 ;; Registers used:
  3604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3610 ;;      Params:         0       0       0       0       0       0       0       0       0
  3611 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3612 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3613 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3614 ;;Total ram usage:        0 bytes
  3615 ;; Hardware stack levels used: 1
  3616 ;; Hardware stack levels required when called: 7
  3617 ;; This function calls:
  3618 ;;		___awmod
  3619 ;;		_scheduler
  3620 ;; This function is called by:
  3621 ;;		_task_motors
  3622 ;;		_task_central
  3623 ;; This function uses a reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text27
  3627  000474                     __ptext27:
  3628                           	callstack 0
  3629  000474                     _mutex_lock:
  3630                           	callstack 17
  3631  000474                     
  3632                           ;sync.c: 73: void mutex_lock(mutex_t *m);sync.c: 74: {;sync.c: 75:     (INTCONbits.GIE =
      +                           0);
  3633  000474  9EF2               	bcf	242,7,c	;volatile
  3634  000476                     
  3635                           ;sync.c: 76:     if (m->locked == 0) {
  3636                           ;stkvar	_m @ sp[(0)+-2]
  3637  000476  0EFE               	movlw	-2
  3638  000478  CFE3 FFD9          	movff	plusw1,fsr2l
  3639  00047C  0EFF               	movlw	-1
  3640  00047E  CFE3 FFDA          	movff	plusw1,fsr2h
  3641  000482  50DF               	movf	indf2,w,c
  3642  000484  A4D8               	btfss	status,2,c
  3643  000486  EF47  F002         	goto	u159_21
  3644  00048A  EF49  F002         	goto	u159_20
  3645  00048E                     u159_21:
  3646  00048E  EF66  F002         	goto	l2574
  3647  000492                     u159_20:
  3648  000492                     
  3649                           ;sync.c: 78:         m->locked = 1;
  3650                           ;stkvar	_m @ sp[(0)+-2]
  3651  000492  0EFE               	movlw	-2
  3652  000494  CFE3 FFD9          	movff	plusw1,fsr2l
  3653  000498  0EFF               	movlw	-1
  3654  00049A  CFE3 FFDA          	movff	plusw1,fsr2h
  3655  00049E  0E01               	movlw	1
  3656  0004A0  6EDF               	movwf	indf2,c
  3657  0004A2                     
  3658                           ;sync.c: 79:         m->owner = readyQueue.taskRunning;
  3659  0004A2  EE22  F094         	lfsr	2,_readyQueue+531
  3660                           
  3661                           ;stkvar	_m @ sp[(0)+-2]
  3662  0004A6  0EFE               	movlw	-2
  3663  0004A8  CFE3 F00B          	movff	plusw1,btemp+10
  3664  0004AC  0EFF               	movlw	-1
  3665  0004AE  CFE3 F00C          	movff	plusw1,btemp+11
  3666  0004B2  0E01               	movlw	1
  3667  0004B4  240B               	addwf	(btemp+10)^0,w,c
  3668  0004B6  6EE9               	movwf	fsr0l,c
  3669  0004B8  0E00               	movlw	0
  3670  0004BA  200C               	addwfc	(btemp+11)^0,w,c
  3671  0004BC  6EEA               	movwf	fsr0h,c
  3672  0004BE  CFDE FFEE          	movff	postinc2,postinc0
  3673  0004C2  CFDD FFED          	movff	postdec2,postdec0
  3674  0004C6                     
  3675                           ;sync.c: 80:         (INTCONbits.GIE = 1);
  3676  0004C6  8EF2               	bsf	242,7,c	;volatile
  3677  0004C8  EFC6  F003         	goto	l406
  3678  0004CC                     l2574:
  3679                           
  3680                           ;sync.c: 85:     m->wait_queue[m->q_in] = readyQueue.taskRunning;
  3681  0004CC  EE22  F094         	lfsr	2,_readyQueue+531
  3682                           
  3683                           ;stkvar	_m @ sp[(0)+-2]
  3684  0004D0  0EFE               	movlw	-2
  3685  0004D2  CFE3 F00B          	movff	plusw1,btemp+10
  3686  0004D6  0EFF               	movlw	-1
  3687  0004D8  CFE3 F00C          	movff	plusw1,btemp+11
  3688  0004DC  0E0D               	movlw	13
  3689  0004DE  240B               	addwf	(btemp+10)^0,w,c
  3690  0004E0  6EE9               	movwf	fsr0l,c
  3691  0004E2  0E00               	movlw	0
  3692  0004E4  200C               	addwfc	(btemp+11)^0,w,c
  3693  0004E6  6EEA               	movwf	fsr0h,c
  3694  0004E8  50EF               	movf	indf0,w,c
  3695  0004EA  0D02               	mullw	2
  3696  0004EC  CFF3 F00B          	movff	prodl,btemp+10
  3697  0004F0  CFF4 F00C          	movff	prodh,btemp+11
  3698                           
  3699                           ;stkvar	_m @ sp[(0)+-2]
  3700  0004F4  0EFE               	movlw	-2
  3701  0004F6  50E3               	movf	plusw1,w,c
  3702  0004F8  260B               	addwf	(btemp+10)^0,f,c
  3703  0004FA  0EFF               	movlw	-1
  3704  0004FC  50E3               	movf	plusw1,w,c
  3705  0004FE  220C               	addwfc	(btemp+11)^0,f,c
  3706  000500  0E03               	movlw	3
  3707  000502  240B               	addwf	(btemp+10)^0,w,c
  3708  000504  6EE9               	movwf	fsr0l,c
  3709  000506  0E00               	movlw	0
  3710  000508  200C               	addwfc	(btemp+11)^0,w,c
  3711  00050A  6EEA               	movwf	fsr0h,c
  3712  00050C  CFDE FFEE          	movff	postinc2,postinc0
  3713  000510  CFDD FFED          	movff	postdec2,postdec0
  3714  000514                     
  3715                           ;sync.c: 86:     m->q_in = (m->q_in + 1) % 5;
  3716                           ;stkvar	_m @ sp[(0)+-2]
  3717  000514  0EFE               	movlw	-2
  3718  000516  CFE3 F00B          	movff	plusw1,btemp+10
  3719  00051A  0EFF               	movlw	-1
  3720  00051C  CFE3 F00C          	movff	plusw1,btemp+11
  3721  000520  0E0D               	movlw	13
  3722  000522  240B               	addwf	(btemp+10)^0,w,c
  3723  000524  6ED9               	movwf	fsr2l,c
  3724  000526  0E00               	movlw	0
  3725  000528  200C               	addwfc	(btemp+11)^0,w,c
  3726  00052A  6EDA               	movwf	fsr2h,c
  3727  00052C  0E05               	movlw	5
  3728  00052E  6EE6               	movwf	postinc1,c
  3729  000530  0E00               	movlw	0
  3730  000532  6EE6               	movwf	postinc1,c
  3731                           
  3732                           ;stkvar	_m @ sp[(-2)+-2]
  3733  000534  0EFC               	movlw	-4
  3734  000536  CFE3 F00B          	movff	plusw1,btemp+10
  3735  00053A  0EFD               	movlw	-3
  3736  00053C  CFE3 F00C          	movff	plusw1,btemp+11
  3737  000540  0E0D               	movlw	13
  3738  000542  240B               	addwf	(btemp+10)^0,w,c
  3739  000544  6EE9               	movwf	fsr0l,c
  3740  000546  0E00               	movlw	0
  3741  000548  200C               	addwfc	(btemp+11)^0,w,c
  3742  00054A  6EEA               	movwf	fsr0h,c
  3743  00054C  50EF               	movf	indf0,w,c
  3744  00054E  6E0B               	movwf	(btemp+10)^0,c
  3745  000550  6A0C               	clrf	(btemp+11)^0,c
  3746  000552  0E01               	movlw	1
  3747  000554  260B               	addwf	(btemp+10)^0,f,c
  3748  000556  0E00               	movlw	0
  3749  000558  220C               	addwfc	(btemp+11)^0,f,c
  3750  00055A  C00B  FFE6         	movff	btemp+10,postinc1
  3751  00055E  C00C  FFE6         	movff	btemp+11,postinc1
  3752  000562  ECAB  F00C         	call	___awmod	;wreg free
  3753  000566  5001               	movf	btemp^0,w,c
  3754  000568  6EDF               	movwf	indf2,c
  3755  00056A  EE22  F094         	lfsr	2,_readyQueue+531
  3756  00056E  EE00 F003          	lfsr	0,3
  3757  000572  50DE               	movf	postinc2,w,c
  3758  000574  26E9               	addwf	fsr0l,f,c
  3759  000576  50DD               	movf	postdec2,w,c
  3760  000578  22EA               	addwfc	fsr0h,f,c
  3761  00057A  04EE               	decf	postinc0,w,c
  3762  00057C  A4D8               	btfss	status,2,c
  3763  00057E  EFC3  F002         	goto	u160_21
  3764  000582  EFC5  F002         	goto	u160_20
  3765  000586                     u160_21:
  3766  000586  EF2B  F003         	goto	l2590
  3767  00058A                     u160_20:
  3768  00058A  EE22  F094         	lfsr	2,_readyQueue+531
  3769  00058E  EE00 F006          	lfsr	0,6
  3770  000592  50DE               	movf	postinc2,w,c
  3771  000594  26E9               	addwf	fsr0l,f,c
  3772  000596  50DD               	movf	postdec2,w,c
  3773  000598  22EA               	addwfc	fsr0h,f,c
  3774  00059A  CFE0 FFEF          	movff	bsr,indf0	;volatile
  3775  00059E  EE22  F094         	lfsr	2,_readyQueue+531
  3776  0005A2  EE00 F008          	lfsr	0,8
  3777  0005A6  50DE               	movf	postinc2,w,c
  3778  0005A8  26E9               	addwf	fsr0l,f,c
  3779  0005AA  50DD               	movf	postdec2,w,c
  3780  0005AC  22EA               	addwfc	fsr0h,f,c
  3781  0005AE  CFD8 FFEF          	movff	status,indf0	;volatile
  3782  0005B2  EE22  F094         	lfsr	2,_readyQueue+531
  3783  0005B6  EE00 F007          	lfsr	0,7
  3784  0005BA  50DE               	movf	postinc2,w,c
  3785  0005BC  26E9               	addwf	fsr0l,f,c
  3786  0005BE  50DD               	movf	postdec2,w,c
  3787  0005C0  22EA               	addwfc	fsr0h,f,c
  3788  0005C2  CFE8 FFEF          	movff	wreg,indf0	;volatile
  3789  0005C6  EE22  F094         	lfsr	2,_readyQueue+531
  3790  0005CA  EE00 F069          	lfsr	0,105
  3791  0005CE  50DE               	movf	postinc2,w,c
  3792  0005D0  26E9               	addwf	fsr0l,f,c
  3793  0005D2  50DD               	movf	postdec2,w,c
  3794  0005D4  22EA               	addwfc	fsr0h,f,c
  3795  0005D6  0E00               	movlw	0
  3796  0005D8  6EEF               	movwf	indf0,c
  3797  0005DA  EF19  F003         	goto	l2586
  3798  0005DE                     l2582:
  3799  0005DE  EE22  F094         	lfsr	2,_readyQueue+531
  3800  0005E2  EE00 F069          	lfsr	0,105
  3801  0005E6  50DE               	movf	postinc2,w,c
  3802  0005E8  26E9               	addwf	fsr0l,f,c
  3803  0005EA  50DD               	movf	postdec2,w,c
  3804  0005EC  22EA               	addwfc	fsr0h,f,c
  3805  0005EE  50EF               	movf	indf0,w,c
  3806  0005F0  0D03               	mullw	3
  3807  0005F2  EE22  F094         	lfsr	2,_readyQueue+531
  3808  0005F6  CFDE F00B          	movff	postinc2,btemp+10
  3809  0005FA  CFDD F00C          	movff	postdec2,btemp+11
  3810  0005FE  50F3               	movf	243,w,c
  3811  000600  260B               	addwf	(btemp+10)^0,f,c
  3812  000602  50F4               	movf	244,w,c
  3813  000604  220C               	addwfc	(btemp+11)^0,f,c
  3814  000606  0E09               	movlw	9
  3815  000608  240B               	addwf	(btemp+10)^0,w,c
  3816  00060A  6ED9               	movwf	fsr2l,c
  3817  00060C  0E00               	movlw	0
  3818  00060E  200C               	addwfc	(btemp+11)^0,w,c
  3819  000610  6EDA               	movwf	fsr2h,c
  3820  000612  CFFD FFDE          	movff	tosl,postinc2	;volatile
  3821  000616  CFFE FFDE          	movff	tosh,postinc2	;volatile
  3822  00061A  CFFF FFDE          	movff	tosu,postinc2	;volatile
  3823  00061E  EE22  F094         	lfsr	2,_readyQueue+531
  3824  000622  EE00 F069          	lfsr	0,105
  3825  000626  50DE               	movf	postinc2,w,c
  3826  000628  26E9               	addwf	fsr0l,f,c
  3827  00062A  50DD               	movf	postdec2,w,c
  3828  00062C  22EA               	addwfc	fsr0h,f,c
  3829  00062E  2AEF               	incf	indf0,f,c
  3830  000630  0006               	pop		;# 
  3831  000632                     l2586:
  3832  000632  50FC               	movf	252,w,c	;volatile
  3833  000634  A4D8               	btfss	status,2,c
  3834  000636  EF1F  F003         	goto	u161_21
  3835  00063A  EF21  F003         	goto	u161_20
  3836  00063E                     u161_21:
  3837  00063E  EFEF  F002         	goto	l2582
  3838  000642                     u161_20:
  3839  000642  EE22  F094         	lfsr	2,_readyQueue+531
  3840  000646  EE00 F003          	lfsr	0,3
  3841  00064A  50DE               	movf	postinc2,w,c
  3842  00064C  26E9               	addwf	fsr0l,f,c
  3843  00064E  50DD               	movf	postdec2,w,c
  3844  000650  22EA               	addwfc	fsr0h,f,c
  3845  000652  0E03               	movlw	3
  3846  000654  6EEF               	movwf	indf0,c
  3847  000656                     l2590:
  3848                           
  3849                           ;sync.c: 88:     scheduler();
  3850  000656  ECC9  F014         	call	_scheduler	;wreg free
  3851  00065A  EE22  F094         	lfsr	2,_readyQueue+531
  3852  00065E  EE00 F003          	lfsr	0,3
  3853  000662  50DE               	movf	postinc2,w,c
  3854  000664  26E9               	addwf	fsr0l,f,c
  3855  000666  50DD               	movf	postdec2,w,c
  3856  000668  22EA               	addwfc	fsr0h,f,c
  3857  00066A  50EF               	movf	indf0,w,c
  3858  00066C  A4D8               	btfss	status,2,c
  3859  00066E  EF3B  F003         	goto	u162_21
  3860  000672  EF3D  F003         	goto	u162_20
  3861  000676                     u162_21:
  3862  000676  EFC5  F003         	goto	l2614
  3863  00067A                     u162_20:
  3864  00067A  EE22  F094         	lfsr	2,_readyQueue+531
  3865  00067E  EE00 F006          	lfsr	0,6
  3866  000682  50DE               	movf	postinc2,w,c
  3867  000684  26E9               	addwf	fsr0l,f,c
  3868  000686  50DD               	movf	postdec2,w,c
  3869  000688  22EA               	addwfc	fsr0h,f,c
  3870  00068A  50EF               	movf	indf0,w,c
  3871  00068C  6EE0               	movwf	224,c	;volatile
  3872  00068E  EE22  F094         	lfsr	2,_readyQueue+531
  3873  000692  EE00 F008          	lfsr	0,8
  3874  000696  50DE               	movf	postinc2,w,c
  3875  000698  26E9               	addwf	fsr0l,f,c
  3876  00069A  50DD               	movf	postdec2,w,c
  3877  00069C  22EA               	addwfc	fsr0h,f,c
  3878  00069E  50EF               	movf	indf0,w,c
  3879  0006A0  6ED8               	movwf	216,c	;volatile
  3880  0006A2  EE22  F094         	lfsr	2,_readyQueue+531
  3881  0006A6  EE00 F007          	lfsr	0,7
  3882  0006AA  50DE               	movf	postinc2,w,c
  3883  0006AC  26E9               	addwf	fsr0l,f,c
  3884  0006AE  50DD               	movf	postdec2,w,c
  3885  0006B0  22EA               	addwfc	fsr0h,f,c
  3886  0006B2  50EF               	movf	indf0,w,c
  3887  0006B4  6E0C               	movwf	(btemp+11)^0,c
  3888  0006B6  500C               	movf	(btemp+11)^0,w,c
  3889  0006B8  6AFC               	clrf	252,c	;volatile
  3890  0006BA  EE22  F094         	lfsr	2,_readyQueue+531
  3891  0006BE  EE00 F069          	lfsr	0,105
  3892  0006C2  50DE               	movf	postinc2,w,c
  3893  0006C4  26E9               	addwf	fsr0l,f,c
  3894  0006C6  50DD               	movf	postdec2,w,c
  3895  0006C8  22EA               	addwfc	fsr0h,f,c
  3896  0006CA  50EF               	movf	indf0,w,c
  3897  0006CC  A4D8               	btfss	status,2,c
  3898  0006CE  EF6B  F003         	goto	u163_21
  3899  0006D2  EF6D  F003         	goto	u163_20
  3900  0006D6                     u163_21:
  3901  0006D6  EF81  F003         	goto	l417
  3902  0006DA                     u163_20:
  3903  0006DA  0005               	push		;# 
  3904  0006DC  EE22  F094         	lfsr	2,_readyQueue+531
  3905  0006E0  EE00 F001          	lfsr	0,1
  3906  0006E4  50DE               	movf	postinc2,w,c
  3907  0006E6  26E9               	addwf	fsr0l,f,c
  3908  0006E8  50DD               	movf	postdec2,w,c
  3909  0006EA  22EA               	addwfc	fsr0h,f,c
  3910  0006EC  CFEE F00B          	movff	postinc0,btemp+10
  3911  0006F0  CFED F00C          	movff	postdec0,btemp+11
  3912  0006F4  C00B  FFFD         	movff	btemp+10,tosl	;volatile
  3913  0006F8  C00C  FFFE         	movff	btemp+11,tosh	;volatile
  3914  0006FC  6AFF               	clrf	255,c	;volatile
  3915  0006FE  EFBB  F003         	goto	l2612
  3916  000702                     l417:
  3917  000702  0005               	push		;# 
  3918  000704  EE22  F094         	lfsr	2,_readyQueue+531
  3919  000708  EE00 F069          	lfsr	0,105
  3920  00070C  50DE               	movf	postinc2,w,c
  3921  00070E  26E9               	addwf	fsr0l,f,c
  3922  000710  50DD               	movf	postdec2,w,c
  3923  000712  22EA               	addwfc	fsr0h,f,c
  3924  000714  06EF               	decf	indf0,f,c
  3925  000716  EE22  F094         	lfsr	2,_readyQueue+531
  3926  00071A  EE00 F069          	lfsr	0,105
  3927  00071E  50DE               	movf	postinc2,w,c
  3928  000720  26E9               	addwf	fsr0l,f,c
  3929  000722  50DD               	movf	postdec2,w,c
  3930  000724  22EA               	addwfc	fsr0h,f,c
  3931  000726  50EF               	movf	indf0,w,c
  3932  000728  0D03               	mullw	3
  3933  00072A  EE22  F094         	lfsr	2,_readyQueue+531
  3934  00072E  CFDE F00B          	movff	postinc2,btemp+10
  3935  000732  CFDD F00C          	movff	postdec2,btemp+11
  3936  000736  50F3               	movf	243,w,c
  3937  000738  260B               	addwf	(btemp+10)^0,f,c
  3938  00073A  50F4               	movf	244,w,c
  3939  00073C  220C               	addwfc	(btemp+11)^0,f,c
  3940  00073E  0E09               	movlw	9
  3941  000740  240B               	addwf	(btemp+10)^0,w,c
  3942  000742  6ED9               	movwf	fsr2l,c
  3943  000744  0E00               	movlw	0
  3944  000746  200C               	addwfc	(btemp+11)^0,w,c
  3945  000748  6EDA               	movwf	fsr2h,c
  3946  00074A  CFDE FFFD          	movff	postinc2,tosl	;volatile
  3947  00074E  CFDE FFFE          	movff	postinc2,tosh	;volatile
  3948  000752  CFDD FFFF          	movff	postdec2,tosu	;volatile
  3949  000756  EE22  F094         	lfsr	2,_readyQueue+531
  3950  00075A  EE00 F069          	lfsr	0,105
  3951  00075E  50DE               	movf	postinc2,w,c
  3952  000760  26E9               	addwf	fsr0l,f,c
  3953  000762  50DD               	movf	postdec2,w,c
  3954  000764  22EA               	addwfc	fsr0h,f,c
  3955  000766  50EF               	movf	indf0,w,c
  3956  000768  A4D8               	btfss	status,2,c
  3957  00076A  EFB9  F003         	goto	u164_21
  3958  00076E  EFBB  F003         	goto	u164_20
  3959  000772                     u164_21:
  3960  000772  EF81  F003         	goto	l417
  3961  000776                     u164_20:
  3962  000776                     l2612:
  3963  000776  EE22  F094         	lfsr	2,_readyQueue+531
  3964  00077A  EE00 F003          	lfsr	0,3
  3965  00077E  50DE               	movf	postinc2,w,c
  3966  000780  26E9               	addwf	fsr0l,f,c
  3967  000782  50DD               	movf	postdec2,w,c
  3968  000784  22EA               	addwfc	fsr0h,f,c
  3969  000786  0E01               	movlw	1
  3970  000788  6EEF               	movwf	indf0,c
  3971  00078A                     l2614:
  3972                           
  3973                           ;sync.c: 90:     (INTCONbits.GIE = 1);
  3974  00078A  8EF2               	bsf	242,7,c	;volatile
  3975  00078C                     l406:
  3976                           
  3977                           ; _mutex_lock: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  3978  00078C  52E5               	movf	postdec1,f,c
  3979  00078E  52E5               	movf	postdec1,f,c
  3980  000790  0012               	return		;funcret
  3981  000792                     __end_of_mutex_lock:
  3982                           	callstack 0
  3983                           
  3984 ;; *************** function _scheduler *****************
  3985 ;; Defined at:
  3986 ;;		line 76 in file "scheduler.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;		None
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;		None
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1  [STACK] void 
  3993 ;; Registers used:
  3994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4000 ;;      Params:         0       0       0       0       0       0       0       0       0
  4001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4003 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4004 ;;Total ram usage:        0 bytes
  4005 ;; Hardware stack levels used: 1
  4006 ;; Hardware stack levels required when called: 6
  4007 ;; This function calls:
  4008 ;;		_priority_scheduler
  4009 ;; This function is called by:
  4010 ;;		_os_delay
  4011 ;;		_os_yield
  4012 ;;		_ISR_TIMER_0
  4013 ;;		_sem_wait
  4014 ;;		_mutex_lock
  4015 ;; This function uses a reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text28
  4019  002992                     __ptext28:
  4020                           	callstack 0
  4021  002992                     _scheduler:
  4022                           	callstack 11
  4023  002992                     
  4024                           ;scheduler.c: 81:     readyQueue.taskRunning = priority_scheduler();
  4025  002992  ECAF  F006         	call	_priority_scheduler	;wreg free
  4026  002996  C001  F294         	movff	btemp,_readyQueue+531
  4027  00299A  C002  F295         	movff	btemp+1,_readyQueue+532
  4028  00299E                     
  4029                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4030  00299E  0012               	return		;funcret
  4031  0029A0                     __end_of_scheduler:
  4032                           	callstack 0
  4033                           
  4034 ;; *************** function _priority_scheduler *****************
  4035 ;; Defined at:
  4036 ;;		line 30 in file "scheduler.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;		None
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  idx             1  [STACK] unsigned char 
  4041 ;;  i               1  [STACK] unsigned char 
  4042 ;;  best_priorit    1  [STACK] unsigned char 
  4043 ;;  idle_selecte    1  [STACK] unsigned char 
  4044 ;;  any_ready_no    1  [STACK] unsigned char 
  4045 ;;  start           1  [STACK] unsigned char 
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  2  [STACK] PTR struct tcb
  4048 ;; Registers used:
  4049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4055 ;;      Params:         0       0       0       0       0       0       0       0       0
  4056 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4058 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4059 ;;Total ram usage:        0 bytes
  4060 ;; Hardware stack levels used: 1
  4061 ;; Hardware stack levels required when called: 5
  4062 ;; This function calls:
  4063 ;;		___awmod
  4064 ;;		_os_task_pos
  4065 ;; This function is called by:
  4066 ;;		_scheduler
  4067 ;; This function uses a reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text29
  4071  000D5E                     __ptext29:
  4072                           	callstack 0
  4073  000D5E                     _priority_scheduler:
  4074                           	callstack 0
  4075                           
  4076                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4077  000D5E  0E06               	movlw	6
  4078  000D60  26E1               	addwf	fsr1l,f,c
  4079  000D62  0E00               	movlw	0
  4080  000D64  22E2               	addwfc	fsr1h,f,c
  4081  000D66                     
  4082                           ;scheduler.c: 35:     if (readyQueue.readyQueueSize == 0 || readyQueue.taskRunning == 0)
      +                           {
  4083  000D66  EE22  F093         	lfsr	2,_readyQueue+530
  4084  000D6A  50DF               	movf	indf2,w,c
  4085  000D6C  B4D8               	btfsc	status,2,c
  4086  000D6E  EFBB  F006         	goto	u147_21
  4087  000D72  EFBD  F006         	goto	u147_20
  4088  000D76                     u147_21:
  4089  000D76  EFC8  F006         	goto	l2464
  4090  000D7A                     u147_20:
  4091  000D7A  EE22  F094         	lfsr	2,_readyQueue+531
  4092  000D7E  50DE               	movf	postinc2,w,c
  4093  000D80  10DE               	iorwf	postinc2,w,c
  4094  000D82  A4D8               	btfss	status,2,c
  4095  000D84  EFC6  F006         	goto	u148_21
  4096  000D88  EFC8  F006         	goto	u148_20
  4097  000D8C                     u148_21:
  4098  000D8C  EFCE  F006         	goto	l2468
  4099  000D90                     u148_20:
  4100  000D90                     l2464:
  4101                           
  4102                           ;scheduler.c: 36:         return &readyQueue.readyQueue[0];
  4103  000D90  0E81               	movlw	low _readyQueue
  4104  000D92  6E01               	movwf	btemp^0,c
  4105  000D94  0E00               	movlw	high _readyQueue
  4106  000D96  6E02               	movwf	(btemp+1)^0,c
  4107  000D98  EFDB  F007         	goto	l284
  4108  000D9C                     l2468:
  4109                           
  4110                           ;scheduler.c: 39:     uint8_t start = os_task_pos(readyQueue.taskRunning->task_func);
  4111  000D9C  EE22  F094         	lfsr	2,_readyQueue+531
  4112  000DA0  EE00 F001          	lfsr	0,1
  4113  000DA4  50DE               	movf	postinc2,w,c
  4114  000DA6  26E9               	addwf	fsr0l,f,c
  4115  000DA8  50DD               	movf	postdec2,w,c
  4116  000DAA  22EA               	addwfc	fsr0h,f,c
  4117  000DAC  CFEE F00B          	movff	postinc0,btemp+10
  4118  000DB0  CFED F00C          	movff	postdec0,btemp+11
  4119  000DB4  C00B  FFE6         	movff	btemp+10,postinc1
  4120  000DB8  C00C  FFE6         	movff	btemp+11,postinc1
  4121  000DBC  EC57  F012         	call	_os_task_pos	;wreg free
  4122                           
  4123                           ;stkvar	_start @ sp[(-6)+5]
  4124  000DC0  0EFF               	movlw	-1
  4125  000DC2  C001  FFE3         	movff	btemp,plusw1
  4126  000DC6                     
  4127                           ;scheduler.c: 40:     uint8_t best_priority = 0;
  4128                           ;stkvar	_best_priority @ sp[(-6)+2]
  4129  000DC6  0EFC               	movlw	-4
  4130  000DC8  6AE3               	clrf	plusw1,c
  4131  000DCA                     
  4132                           ;scheduler.c: 41:     uint8_t i;;scheduler.c: 44:     uint8_t any_ready_non_idle = 0;
  4133                           ;stkvar	_any_ready_non_idle @ sp[(-6)+4]
  4134  000DCA  0EFE               	movlw	-2
  4135  000DCC  6AE3               	clrf	plusw1,c
  4136  000DCE                     
  4137                           ;scheduler.c: 45:     for (i = 0; i < readyQueue.readyQueueSize; i++) {
  4138                           ;stkvar	_i @ sp[(-6)+1]
  4139  000DCE  0EFB               	movlw	-5
  4140  000DD0  6AE3               	clrf	plusw1,c
  4141  000DD2  EF39  F007         	goto	l2488
  4142  000DD6                     l2476:
  4143                           
  4144                           ;scheduler.c: 46:         if (readyQueue.readyQueue[i].task_state == READY && readyQueue
      +                          .readyQueue[i].task_func != os_idle_task) {
  4145                           ;stkvar	_i @ sp[(-6)+1]
  4146  000DD6  0EFB               	movlw	-5
  4147  000DD8  50E3               	movf	plusw1,w,c
  4148  000DDA  0D6A               	mullw	106
  4149  000DDC  0E84               	movlw	low (_readyQueue+3)
  4150  000DDE  24F3               	addwf	243,w,c
  4151  000DE0  6ED9               	movwf	fsr2l,c
  4152  000DE2  0E00               	movlw	high (_readyQueue+3)
  4153  000DE4  20F4               	addwfc	prodh,w,c
  4154  000DE6  6EDA               	movwf	fsr2h,c
  4155  000DE8  50DF               	movf	indf2,w,c
  4156  000DEA  A4D8               	btfss	status,2,c
  4157  000DEC  EFFA  F006         	goto	u149_21
  4158  000DF0  EFFC  F006         	goto	u149_20
  4159  000DF4                     u149_21:
  4160  000DF4  EF37  F007         	goto	l2486
  4161  000DF8                     u149_20:
  4162  000DF8                     
  4163                           ;stkvar	_i @ sp[(-6)+1]
  4164  000DF8  0EFB               	movlw	-5
  4165  000DFA  50E3               	movf	plusw1,w,c
  4166  000DFC  0D6A               	mullw	106
  4167  000DFE  0E82               	movlw	low (_readyQueue+1)
  4168  000E00  24F3               	addwf	243,w,c
  4169  000E02  6ED9               	movwf	fsr2l,c
  4170  000E04  0E00               	movlw	high (_readyQueue+1)
  4171  000E06  20F4               	addwfc	prodh,w,c
  4172  000E08  6EDA               	movwf	fsr2h,c
  4173  000E0A  0E4E               	movlw	low _os_idle_task
  4174  000E0C  18DE               	xorwf	postinc2,w,c
  4175  000E0E  E109               	bnz	u150_20
  4176  000E10  0E28               	movlw	high _os_idle_task
  4177  000E12  18DE               	xorwf	postinc2,w,c
  4178  000E14  B4D8               	btfsc	status,2,c
  4179  000E16  EF0F  F007         	goto	u150_21
  4180  000E1A  EF11  F007         	goto	u150_20
  4181  000E1E                     u150_21:
  4182  000E1E  EF37  F007         	goto	l2486
  4183  000E22                     u150_20:
  4184  000E22                     
  4185                           ;scheduler.c: 47:             any_ready_non_idle = 1;
  4186                           ;stkvar	_any_ready_non_idle @ sp[(-6)+4]
  4187  000E22  0EFE               	movlw	-2
  4188  000E24  6AE3               	clrf	plusw1,c
  4189  000E26  2AE3               	incf	plusw1,f,c
  4190  000E28                     
  4191                           ;scheduler.c: 48:             if (readyQueue.readyQueue[i].task_priority > best_priority
      +                          ) {
  4192                           ;stkvar	_i @ sp[(-6)+1]
  4193  000E28  0EFB               	movlw	-5
  4194  000E2A  50E3               	movf	plusw1,w,c
  4195  000E2C  0D6A               	mullw	106
  4196  000E2E  0E85               	movlw	low (_readyQueue+4)
  4197  000E30  24F3               	addwf	243,w,c
  4198  000E32  6ED9               	movwf	fsr2l,c
  4199  000E34  0E00               	movlw	high (_readyQueue+4)
  4200  000E36  20F4               	addwfc	prodh,w,c
  4201  000E38  6EDA               	movwf	fsr2h,c
  4202                           
  4203                           ;stkvar	_best_priority @ sp[(-6)+2]
  4204  000E3A  0EFC               	movlw	-4
  4205  000E3C  CFE3 F001          	movff	plusw1,btemp
  4206  000E40  50DE               	movf	postinc2,w,c
  4207  000E42  5C01               	subwf	btemp^0,w,c
  4208  000E44  B0D8               	btfsc	status,0,c
  4209  000E46  EF27  F007         	goto	u151_21
  4210  000E4A  EF29  F007         	goto	u151_20
  4211  000E4E                     u151_21:
  4212  000E4E  EF37  F007         	goto	l2486
  4213  000E52                     u151_20:
  4214  000E52                     
  4215                           ;scheduler.c: 49:                 best_priority = readyQueue.readyQueue[i].task_priority
      +                          ;
  4216                           ;stkvar	_i @ sp[(-6)+1]
  4217  000E52  0EFB               	movlw	-5
  4218  000E54  50E3               	movf	plusw1,w,c
  4219  000E56  0D6A               	mullw	106
  4220  000E58  0E85               	movlw	low (_readyQueue+4)
  4221  000E5A  24F3               	addwf	243,w,c
  4222  000E5C  6ED9               	movwf	fsr2l,c
  4223  000E5E  0E00               	movlw	high (_readyQueue+4)
  4224  000E60  20F4               	addwfc	prodh,w,c
  4225  000E62  6EDA               	movwf	fsr2h,c
  4226  000E64  50DF               	movf	indf2,w,c
  4227  000E66  6E0C               	movwf	(btemp+11)^0,c
  4228                           
  4229                           ;stkvar	_best_priority @ sp[(-6)+2]
  4230  000E68  0EFC               	movlw	-4
  4231  000E6A  C00C  FFE3         	movff	btemp+11,plusw1
  4232  000E6E                     l2486:
  4233                           
  4234                           ;scheduler.c: 52:     }
  4235                           ;stkvar	_i @ sp[(-6)+1]
  4236  000E6E  0EFB               	movlw	-5
  4237  000E70  2AE3               	incf	plusw1,f,c
  4238  000E72                     l2488:
  4239  000E72  EE22  F093         	lfsr	2,_readyQueue+530
  4240                           
  4241                           ;stkvar	_i @ sp[(-6)+1]
  4242  000E76  0EFB               	movlw	-5
  4243  000E78  CFE3 F001          	movff	plusw1,btemp
  4244  000E7C  50DE               	movf	postinc2,w,c
  4245  000E7E  5C01               	subwf	btemp^0,w,c
  4246  000E80  A0D8               	btfss	status,0,c
  4247  000E82  EF45  F007         	goto	u152_21
  4248  000E86  EF47  F007         	goto	u152_20
  4249  000E8A                     u152_21:
  4250  000E8A  EFEB  F006         	goto	l2476
  4251  000E8E                     u152_20:
  4252  000E8E                     
  4253                           ;scheduler.c: 54:     if (!any_ready_non_idle) {
  4254                           ;stkvar	_any_ready_non_idle @ sp[(-6)+4]
  4255  000E8E  0EFE               	movlw	-2
  4256  000E90  50E3               	movf	plusw1,w,c
  4257  000E92  A4D8               	btfss	status,2,c
  4258  000E94  EF4E  F007         	goto	u153_21
  4259  000E98  EF50  F007         	goto	u153_20
  4260  000E9C                     u153_21:
  4261  000E9C  EF52  F007         	goto	l2496
  4262  000EA0                     u153_20:
  4263  000EA0  EFC8  F006         	goto	l2464
  4264  000EA4                     l2496:
  4265                           
  4266                           ;scheduler.c: 60:     uint8_t idx = start;
  4267                           ;stkvar	_start @ sp[(-6)+5]
  4268                           ;stkvar	_idx @ sp[(-6)+0]
  4269  000EA4  0EFF               	movlw	-1
  4270  000EA6  CFE3 F001          	movff	plusw1,btemp
  4271  000EAA  0EFA               	movlw	-6
  4272  000EAC  C001  FFE3         	movff	btemp,plusw1
  4273  000EB0                     
  4274                           ;scheduler.c: 61:     uint8_t idle_selected = 0;
  4275                           ;stkvar	_idle_selected @ sp[(-6)+3]
  4276  000EB0  0EFD               	movlw	-3
  4277  000EB2  6AE3               	clrf	plusw1,c
  4278  000EB4                     l2500:
  4279                           
  4280                           ;scheduler.c: 63:         idx = (idx + 1) % readyQueue.readyQueueSize;
  4281  000EB4  EE22  F093         	lfsr	2,_readyQueue+530
  4282  000EB8  50DF               	movf	indf2,w,c
  4283  000EBA  6EE6               	movwf	postinc1,c
  4284  000EBC  0E00               	movlw	0
  4285  000EBE  6EE6               	movwf	postinc1,c
  4286                           
  4287                           ;stkvar	_idx @ sp[(-8)+0]
  4288  000EC0  0EF8               	movlw	-8
  4289  000EC2  50E3               	movf	plusw1,w,c
  4290  000EC4  6E0B               	movwf	(btemp+10)^0,c
  4291  000EC6  6A0C               	clrf	(btemp+11)^0,c
  4292  000EC8  0E01               	movlw	1
  4293  000ECA  260B               	addwf	(btemp+10)^0,f,c
  4294  000ECC  0E00               	movlw	0
  4295  000ECE  220C               	addwfc	(btemp+11)^0,f,c
  4296  000ED0  C00B  FFE6         	movff	btemp+10,postinc1
  4297  000ED4  C00C  FFE6         	movff	btemp+11,postinc1
  4298  000ED8  ECAB  F00C         	call	___awmod	;wreg free
  4299                           
  4300                           ;stkvar	_idx @ sp[(-6)+0]
  4301  000EDC  0EFA               	movlw	-6
  4302  000EDE  C001  FFE3         	movff	btemp,plusw1
  4303  000EE2                     
  4304                           ;scheduler.c: 64:         if (readyQueue.readyQueue[idx].task_state == READY &&
  4305                           ;stkvar	_idx @ sp[(-6)+0]
  4306  000EE2  0EFA               	movlw	-6
  4307  000EE4  50E3               	movf	plusw1,w,c
  4308  000EE6  0D6A               	mullw	106
  4309  000EE8  0E84               	movlw	low (_readyQueue+3)
  4310  000EEA  24F3               	addwf	243,w,c
  4311  000EEC  6ED9               	movwf	fsr2l,c
  4312  000EEE  0E00               	movlw	high (_readyQueue+3)
  4313  000EF0  20F4               	addwfc	prodh,w,c
  4314  000EF2  6EDA               	movwf	fsr2h,c
  4315  000EF4  50DF               	movf	indf2,w,c
  4316  000EF6  A4D8               	btfss	status,2,c
  4317  000EF8  EF80  F007         	goto	u154_21
  4318  000EFC  EF82  F007         	goto	u154_20
  4319  000F00                     u154_21:
  4320  000F00  EFB7  F007         	goto	l2512
  4321  000F04                     u154_20:
  4322  000F04                     
  4323                           ;stkvar	_best_priority @ sp[(-6)+2]
  4324                           ;stkvar	_idx @ sp[(-6)+0]
  4325  000F04  0EFA               	movlw	-6
  4326  000F06  50E3               	movf	plusw1,w,c
  4327  000F08  0D6A               	mullw	106
  4328  000F0A  0E85               	movlw	low (_readyQueue+4)
  4329  000F0C  24F3               	addwf	243,w,c
  4330  000F0E  6ED9               	movwf	fsr2l,c
  4331  000F10  0E00               	movlw	high (_readyQueue+4)
  4332  000F12  20F4               	addwfc	prodh,w,c
  4333  000F14  6EDA               	movwf	fsr2h,c
  4334  000F16  0EFC               	movlw	-4
  4335  000F18  50E3               	movf	plusw1,w,c
  4336  000F1A  18DE               	xorwf	postinc2,w,c
  4337  000F1C  A4D8               	btfss	status,2,c
  4338  000F1E  EF93  F007         	goto	u155_21
  4339  000F22  EF95  F007         	goto	u155_20
  4340  000F26                     u155_21:
  4341  000F26  EFB7  F007         	goto	l2512
  4342  000F2A                     u155_20:
  4343  000F2A                     
  4344                           ;stkvar	_idx @ sp[(-6)+0]
  4345  000F2A  0EFA               	movlw	-6
  4346  000F2C  50E3               	movf	plusw1,w,c
  4347  000F2E  0D6A               	mullw	106
  4348  000F30  0E82               	movlw	low (_readyQueue+1)
  4349  000F32  24F3               	addwf	243,w,c
  4350  000F34  6ED9               	movwf	fsr2l,c
  4351  000F36  0E00               	movlw	high (_readyQueue+1)
  4352  000F38  20F4               	addwfc	prodh,w,c
  4353  000F3A  6EDA               	movwf	fsr2h,c
  4354  000F3C  0E4E               	movlw	low _os_idle_task
  4355  000F3E  18DE               	xorwf	postinc2,w,c
  4356  000F40  E109               	bnz	u156_20
  4357  000F42  0E28               	movlw	high _os_idle_task
  4358  000F44  18DE               	xorwf	postinc2,w,c
  4359  000F46  B4D8               	btfsc	status,2,c
  4360  000F48  EFA8  F007         	goto	u156_21
  4361  000F4C  EFAA  F007         	goto	u156_20
  4362  000F50                     u156_21:
  4363  000F50  EFB7  F007         	goto	l2512
  4364  000F54                     u156_20:
  4365  000F54                     
  4366                           ;scheduler.c: 66:             readyQueue.readyQueue[idx].task_func != os_idle_task) {;sc
      +                          heduler.c: 67:             return &readyQueue.readyQueue[idx];
  4367                           ;stkvar	_idx @ sp[(-6)+0]
  4368  000F54  0EFA               	movlw	-6
  4369  000F56  50E3               	movf	plusw1,w,c
  4370  000F58  0D6A               	mullw	106
  4371  000F5A  0E81               	movlw	low _readyQueue
  4372  000F5C  6E01               	movwf	btemp^0,c
  4373  000F5E  0E00               	movlw	high _readyQueue
  4374  000F60  6E02               	movwf	(btemp+1)^0,c
  4375  000F62  50F3               	movf	243,w,c
  4376  000F64  2601               	addwf	btemp^0,f,c
  4377  000F66  50F4               	movf	244,w,c
  4378  000F68  2202               	addwfc	(btemp+1)^0,f,c
  4379  000F6A  EFDB  F007         	goto	l284
  4380  000F6E                     l2512:
  4381                           
  4382                           ;scheduler.c: 69:         if (readyQueue.readyQueue[idx].task_func == os_idle_task) {
  4383                           ;stkvar	_idx @ sp[(-6)+0]
  4384  000F6E  0EFA               	movlw	-6
  4385  000F70  50E3               	movf	plusw1,w,c
  4386  000F72  0D6A               	mullw	106
  4387  000F74  0E82               	movlw	low (_readyQueue+1)
  4388  000F76  24F3               	addwf	243,w,c
  4389  000F78  6ED9               	movwf	fsr2l,c
  4390  000F7A  0E00               	movlw	high (_readyQueue+1)
  4391  000F7C  20F4               	addwfc	prodh,w,c
  4392  000F7E  6EDA               	movwf	fsr2h,c
  4393  000F80  0E4E               	movlw	low _os_idle_task
  4394  000F82  18DE               	xorwf	postinc2,w,c
  4395  000F84  E107               	bnz	u157_21
  4396  000F86  0E28               	movlw	high _os_idle_task
  4397  000F88  18DE               	xorwf	postinc2,w,c
  4398  000F8A  A4D8               	btfss	status,2,c
  4399  000F8C  EFCA  F007         	goto	u157_21
  4400  000F90  EFCC  F007         	goto	u157_20
  4401  000F94                     u157_21:
  4402  000F94  EF5A  F007         	goto	l2500
  4403  000F98                     u157_20:
  4404  000F98                     
  4405                           ;scheduler.c: 70:             idle_selected++;
  4406                           ;stkvar	_idle_selected @ sp[(-6)+3]
  4407  000F98  0EFD               	movlw	-3
  4408  000F9A  2AE3               	incf	plusw1,f,c
  4409  000F9C                     
  4410                           ;scheduler.c: 71:             if (idle_selected > 1) return &readyQueue.readyQueue[0];
  4411                           ;stkvar	_idle_selected @ sp[(-6)+3]
  4412  000F9C  0EFD               	movlw	-3
  4413  000F9E  CFE3 F001          	movff	plusw1,btemp
  4414  000FA2  0E01               	movlw	1
  4415  000FA4  6401               	cpfsgt	btemp^0,c
  4416  000FA6  EFD7  F007         	goto	u158_21
  4417  000FAA  EFD9  F007         	goto	u158_20
  4418  000FAE                     u158_21:
  4419  000FAE  EF5A  F007         	goto	l2500
  4420  000FB2                     u158_20:
  4421  000FB2  EFC8  F006         	goto	l2464
  4422  000FB6                     l284:
  4423                           
  4424                           ; _priority_scheduler: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
  4425  000FB6  0EFA               	movlw	250
  4426  000FB8  26E1               	addwf	fsr1l,f,c
  4427  000FBA  0EFF               	movlw	255
  4428  000FBC  22E2               	addwfc	fsr1h,f,c
  4429  000FBE  0012               	return		;funcret
  4430  000FC0                     __end_of_priority_scheduler:
  4431                           	callstack 0
  4432                           
  4433 ;; *************** function _os_task_pos *****************
  4434 ;; Defined at:
  4435 ;;		line 54 in file "kernel.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  task            2  [STACK] PTR FTN()void 
  4438 ;;		 -> os_idle_task(1), task_battery(1), task_sensors(1), task_motors(1), 
  4439 ;;		 -> task_central(1), 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  i               1  [STACK] unsigned char 
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1  [STACK] unsigned char 
  4444 ;; Registers used:
  4445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4451 ;;      Params:         0       0       0       0       0       0       0       0       0
  4452 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4453 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4454 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4455 ;;Total ram usage:        0 bytes
  4456 ;; Hardware stack levels used: 1
  4457 ;; Hardware stack levels required when called: 4
  4458 ;; This function calls:
  4459 ;;		Nothing
  4460 ;; This function is called by:
  4461 ;;		_priority_scheduler
  4462 ;; This function uses a reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text30
  4466  0024AE                     __ptext30:
  4467                           	callstack 0
  4468  0024AE                     _os_task_pos:
  4469                           	callstack 0
  4470                           
  4471                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4472  0024AE  52E6               	movf	postinc1,f,c
  4473  0024B0                     
  4474                           ;kernel.c: 54: uint8_t os_task_pos(f_ptr task);kernel.c: 55: {;kernel.c: 56:     for (ui
      +                          nt8_t i = 0; i < readyQueue.readyQueueSize; i++) {
  4475                           ;stkvar	_i @ sp[(-1)+0]
  4476  0024B0  0EFF               	movlw	-1
  4477  0024B2  6AE3               	clrf	plusw1,c
  4478  0024B4  EF7A  F012         	goto	l2262
  4479  0024B8                     l2254:
  4480                           
  4481                           ;kernel.c: 57:         if (readyQueue.readyQueue[i].task_func == task) return i;
  4482                           ;stkvar	_task @ sp[(-1)+-2]
  4483                           ;stkvar	_i @ sp[(-1)+0]
  4484  0024B8  0EFF               	movlw	-1
  4485  0024BA  50E3               	movf	plusw1,w,c
  4486  0024BC  0D6A               	mullw	106
  4487  0024BE  0E82               	movlw	low (_readyQueue+1)
  4488  0024C0  24F3               	addwf	243,w,c
  4489  0024C2  6ED9               	movwf	fsr2l,c
  4490  0024C4  0E00               	movlw	high (_readyQueue+1)
  4491  0024C6  20F4               	addwfc	prodh,w,c
  4492  0024C8  6EDA               	movwf	fsr2h,c
  4493  0024CA  0EFD               	movlw	-3
  4494  0024CC  50E3               	movf	plusw1,w,c
  4495  0024CE  18DE               	xorwf	postinc2,w,c
  4496  0024D0  E108               	bnz	u124_21
  4497  0024D2  0EFE               	movlw	-2
  4498  0024D4  50E3               	movf	plusw1,w,c
  4499  0024D6  18DE               	xorwf	postinc2,w,c
  4500  0024D8  A4D8               	btfss	status,2,c
  4501  0024DA  EF71  F012         	goto	u124_21
  4502  0024DE  EF73  F012         	goto	u124_20
  4503  0024E2                     u124_21:
  4504  0024E2  EF78  F012         	goto	l2260
  4505  0024E6                     u124_20:
  4506  0024E6                     
  4507                           ;stkvar	_i @ sp[(-1)+0]
  4508  0024E6  0EFF               	movlw	-1
  4509  0024E8  CFE3 F001          	movff	plusw1,btemp
  4510  0024EC  EF8A  F012         	goto	l64
  4511  0024F0                     l2260:
  4512                           
  4513                           ;kernel.c: 58:     }
  4514                           ;stkvar	_i @ sp[(-1)+0]
  4515  0024F0  0EFF               	movlw	-1
  4516  0024F2  2AE3               	incf	plusw1,f,c
  4517  0024F4                     l2262:
  4518  0024F4  EE22  F093         	lfsr	2,_readyQueue+530
  4519                           
  4520                           ;stkvar	_i @ sp[(-1)+0]
  4521  0024F8  0EFF               	movlw	-1
  4522  0024FA  CFE3 F001          	movff	plusw1,btemp
  4523  0024FE  50DE               	movf	postinc2,w,c
  4524  002500  5C01               	subwf	btemp^0,w,c
  4525  002502  A0D8               	btfss	status,0,c
  4526  002504  EF86  F012         	goto	u125_21
  4527  002508  EF88  F012         	goto	u125_20
  4528  00250C                     u125_21:
  4529  00250C  EF5C  F012         	goto	l2254
  4530  002510                     u125_20:
  4531  002510                     
  4532                           ;kernel.c: 60:     return 0;
  4533  002510  0E00               	movlw	0
  4534  002512  6E01               	movwf	btemp^0,c
  4535  002514                     l64:
  4536                           
  4537                           ; _os_task_pos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  4538  002514  52E5               	movf	postdec1,f,c
  4539  002516  52E5               	movf	postdec1,f,c
  4540  002518  52E5               	movf	postdec1,f,c
  4541  00251A  0012               	return		;funcret
  4542  00251C                     __end_of_os_task_pos:
  4543                           	callstack 0
  4544                           
  4545 ;; *************** function ___awmod *****************
  4546 ;; Defined at:
  4547 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;  dividend        2  [STACK] int 
  4550 ;;  divisor         2  [STACK] int 
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  sign            1  [STACK] unsigned char 
  4553 ;;  counter         1  [STACK] unsigned char 
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  2  [STACK] int 
  4556 ;; Registers used:
  4557 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4563 ;;      Params:         0       0       0       0       0       0       0       0       0
  4564 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4565 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4566 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4567 ;;Total ram usage:        0 bytes
  4568 ;; Hardware stack levels used: 1
  4569 ;; Hardware stack levels required when called: 4
  4570 ;; This function calls:
  4571 ;;		Nothing
  4572 ;; This function is called by:
  4573 ;;		_priority_scheduler
  4574 ;;		_sem_wait
  4575 ;;		_sem_post
  4576 ;;		_mutex_lock
  4577 ;;		_mutex_unlock
  4578 ;;		_read_pipe
  4579 ;;		_write_pipe
  4580 ;; This function uses a reentrant model
  4581 ;;
  4582                           
  4583                           	psect	text31
  4584  001956                     __ptext31:
  4585                           	callstack 0
  4586  001956                     ___awmod:
  4587                           	callstack 0
  4588                           
  4589                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4590  001956  52E6               	movf	postinc1,f,c
  4591  001958  52E6               	movf	postinc1,f,c
  4592  00195A                     
  4593                           ;stkvar	_sign @ sp[(-2)+0]
  4594  00195A  0EFE               	movlw	-2
  4595  00195C  6AE3               	clrf	plusw1,c
  4596  00195E                     
  4597                           ;stkvar	_dividend @ sp[(-2)+-2]
  4598  00195E  0EFD               	movlw	-3
  4599  001960  BEE3               	btfsc	plusw1,7,c
  4600  001962  EFB7  F00C         	goto	u139_20
  4601  001966  EFB5  F00C         	goto	u139_21
  4602  00196A                     u139_21:
  4603  00196A  EFC0  F00C         	goto	l2402
  4604  00196E                     u139_20:
  4605  00196E                     
  4606                           ;stkvar	_dividend @ sp[(-2)+-2]
  4607                           ;stkvar	_dividend @ sp[(-2)+-2]
  4608  00196E  0EFC               	movlw	-4
  4609  001970  6CE3               	negf	plusw1,c
  4610  001972  0EFD               	movlw	-3
  4611  001974  1EE3               	comf	plusw1,f,c
  4612  001976  B0D8               	btfsc	status,0,c
  4613  001978  2AE3               	incf	plusw1,f,c
  4614  00197A                     
  4615                           ;stkvar	_sign @ sp[(-2)+0]
  4616  00197A  0EFE               	movlw	-2
  4617  00197C  6AE3               	clrf	plusw1,c
  4618  00197E  2AE3               	incf	plusw1,f,c
  4619  001980                     l2402:
  4620                           
  4621                           ;stkvar	_divisor @ sp[(-2)+-4]
  4622  001980  0EFB               	movlw	-5
  4623  001982  BEE3               	btfsc	plusw1,7,c
  4624  001984  EFC8  F00C         	goto	u140_20
  4625  001988  EFC6  F00C         	goto	u140_21
  4626  00198C                     u140_21:
  4627  00198C  EFCE  F00C         	goto	l2406
  4628  001990                     u140_20:
  4629  001990                     
  4630                           ;stkvar	_divisor @ sp[(-2)+-4]
  4631                           ;stkvar	_divisor @ sp[(-2)+-4]
  4632  001990  0EFA               	movlw	-6
  4633  001992  6CE3               	negf	plusw1,c
  4634  001994  0EFB               	movlw	-5
  4635  001996  1EE3               	comf	plusw1,f,c
  4636  001998  B0D8               	btfsc	status,0,c
  4637  00199A  2AE3               	incf	plusw1,f,c
  4638  00199C                     l2406:
  4639                           
  4640                           ;stkvar	_divisor @ sp[(-2)+-4]
  4641  00199C  0EFA               	movlw	-6
  4642  00199E  CFE3 F001          	movff	plusw1,btemp
  4643  0019A2  0EFB               	movlw	-5
  4644  0019A4  50E3               	movf	plusw1,w,c
  4645  0019A6  1001               	iorwf	btemp^0,w,c
  4646  0019A8  B4D8               	btfsc	status,2,c
  4647  0019AA  EFD9  F00C         	goto	u141_21
  4648  0019AE  EFDB  F00C         	goto	u141_20
  4649  0019B2                     u141_21:
  4650  0019B2  EF36  F00D         	goto	l2424
  4651  0019B6                     u141_20:
  4652  0019B6                     
  4653                           ;stkvar	_counter @ sp[(-2)+1]
  4654  0019B6  0EFF               	movlw	-1
  4655  0019B8  6AE3               	clrf	plusw1,c
  4656  0019BA  2AE3               	incf	plusw1,f,c
  4657  0019BC  EFF1  F00C         	goto	l2414
  4658  0019C0                     l2410:
  4659                           
  4660                           ;stkvar	_divisor @ sp[(-2)+-4]
  4661  0019C0  0EFA               	movlw	-6
  4662  0019C2  50E3               	movf	plusw1,w,c
  4663  0019C4  90D8               	bcf	status,0,c
  4664  0019C6  34E8               	rlcf	wreg,w,c
  4665  0019C8  6E01               	movwf	btemp^0,c
  4666  0019CA  0EFA               	movlw	-6
  4667  0019CC  C001  FFE3         	movff	btemp,plusw1
  4668  0019D0  0EFB               	movlw	-5
  4669  0019D2  50E3               	movf	plusw1,w,c
  4670  0019D4  34E8               	rlcf	wreg,w,c
  4671  0019D6  6E01               	movwf	btemp^0,c
  4672  0019D8  0EFB               	movlw	-5
  4673  0019DA  C001  FFE3         	movff	btemp,plusw1
  4674  0019DE                     
  4675                           ;stkvar	_counter @ sp[(-2)+1]
  4676  0019DE  0EFF               	movlw	-1
  4677  0019E0  2AE3               	incf	plusw1,f,c
  4678  0019E2                     l2414:
  4679                           
  4680                           ;stkvar	_divisor @ sp[(-2)+-4]
  4681  0019E2  0EFB               	movlw	-5
  4682  0019E4  AEE3               	btfss	plusw1,7,c
  4683  0019E6  EFF7  F00C         	goto	u142_21
  4684  0019EA  EFF9  F00C         	goto	u142_20
  4685  0019EE                     u142_21:
  4686  0019EE  EFE0  F00C         	goto	l2410
  4687  0019F2                     u142_20:
  4688  0019F2                     l2416:
  4689                           
  4690                           ;stkvar	_divisor @ sp[(-2)+-4]
  4691  0019F2  0EFA               	movlw	-6
  4692  0019F4  CFE3 F00B          	movff	plusw1,btemp+10
  4693  0019F8  0EFB               	movlw	-5
  4694  0019FA  CFE3 F00C          	movff	plusw1,btemp+11
  4695                           
  4696                           ;stkvar	_dividend @ sp[(-2)+-2]
  4697  0019FE  0EFC               	movlw	-4
  4698  001A00  CFE3 F009          	movff	plusw1,btemp+8
  4699  001A04  0EFD               	movlw	-3
  4700  001A06  CFE3 F00A          	movff	plusw1,btemp+9
  4701  001A0A  500B               	movf	(btemp+10)^0,w,c
  4702  001A0C  5C09               	subwf	(btemp+8)^0,w,c
  4703  001A0E  500C               	movf	(btemp+11)^0,w,c
  4704  001A10  580A               	subwfb	(btemp+9)^0,w,c
  4705  001A12  A0D8               	btfss	status,0,c
  4706  001A14  EF0E  F00D         	goto	u143_21
  4707  001A18  EF10  F00D         	goto	u143_20
  4708  001A1C                     u143_21:
  4709  001A1C  EF22  F00D         	goto	l2420
  4710  001A20                     u143_20:
  4711  001A20                     
  4712                           ;stkvar	_divisor @ sp[(-2)+-4]
  4713                           ;stkvar	_dividend @ sp[(-2)+-2]
  4714  001A20  0EFC               	movlw	-4
  4715  001A22  50E3               	movf	plusw1,w,c
  4716  001A24  6E01               	movwf	btemp^0,c
  4717  001A26  0EFA               	movlw	-6
  4718  001A28  50E3               	movf	plusw1,w,c
  4719  001A2A  5E01               	subwf	btemp^0,f,c
  4720  001A2C  0EFC               	movlw	-4
  4721  001A2E  C001  FFE3         	movff	btemp,plusw1
  4722  001A32  0EFD               	movlw	-3
  4723  001A34  50E3               	movf	plusw1,w,c
  4724  001A36  6E01               	movwf	btemp^0,c
  4725  001A38  0EFB               	movlw	-5
  4726  001A3A  50E3               	movf	plusw1,w,c
  4727  001A3C  5A01               	subwfb	btemp^0,f,c
  4728  001A3E  0EFD               	movlw	-3
  4729  001A40  C001  FFE3         	movff	btemp,plusw1
  4730  001A44                     l2420:
  4731                           
  4732                           ;stkvar	_divisor @ sp[(-2)+-4]
  4733  001A44  90D8               	bcf	status,0,c
  4734  001A46  0EFB               	movlw	-5
  4735  001A48  32E3               	rrcf	plusw1,f,c
  4736  001A4A  0EFA               	movlw	-6
  4737  001A4C  32E3               	rrcf	plusw1,f,c
  4738  001A4E                     
  4739                           ;stkvar	_counter @ sp[(-2)+1]
  4740  001A4E  0EFF               	movlw	-1
  4741  001A50  50E3               	movf	plusw1,w,c
  4742  001A52  6E01               	movwf	btemp^0,c
  4743  001A54  0E01               	movlw	1
  4744  001A56  5E01               	subwf	btemp^0,f,c
  4745  001A58  0EFF               	movlw	-1
  4746  001A5A  C001  FFE3         	movff	btemp,plusw1
  4747  001A5E  A4D8               	btfss	status,2,c
  4748  001A60  EF34  F00D         	goto	u144_21
  4749  001A64  EF36  F00D         	goto	u144_20
  4750  001A68                     u144_21:
  4751  001A68  EFF9  F00C         	goto	l2416
  4752  001A6C                     u144_20:
  4753  001A6C                     l2424:
  4754                           
  4755                           ;stkvar	_sign @ sp[(-2)+0]
  4756  001A6C  0EFE               	movlw	-2
  4757  001A6E  50E3               	movf	plusw1,w,c
  4758  001A70  B4D8               	btfsc	status,2,c
  4759  001A72  EF3D  F00D         	goto	u145_21
  4760  001A76  EF3F  F00D         	goto	u145_20
  4761  001A7A                     u145_21:
  4762  001A7A  EF45  F00D         	goto	l2428
  4763  001A7E                     u145_20:
  4764  001A7E                     
  4765                           ;stkvar	_dividend @ sp[(-2)+-2]
  4766                           ;stkvar	_dividend @ sp[(-2)+-2]
  4767  001A7E  0EFC               	movlw	-4
  4768  001A80  6CE3               	negf	plusw1,c
  4769  001A82  0EFD               	movlw	-3
  4770  001A84  1EE3               	comf	plusw1,f,c
  4771  001A86  B0D8               	btfsc	status,0,c
  4772  001A88  2AE3               	incf	plusw1,f,c
  4773  001A8A                     l2428:
  4774                           
  4775                           ;stkvar	_dividend @ sp[(-2)+-2]
  4776  001A8A  0EFC               	movlw	-4
  4777  001A8C  CFE3 F001          	movff	plusw1,btemp
  4778  001A90  0EFD               	movlw	-3
  4779  001A92  CFE3 F002          	movff	plusw1,btemp+1
  4780  001A96                     
  4781                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  4782  001A96  0EFA               	movlw	250
  4783  001A98  26E1               	addwf	fsr1l,f,c
  4784  001A9A  0EFF               	movlw	255
  4785  001A9C  22E2               	addwfc	fsr1h,f,c
  4786  001A9E  0012               	return		;funcret
  4787  001AA0                     __end_of___awmod:
  4788                           	callstack 0
  4789                           
  4790 ;; *************** function _task_sensors *****************
  4791 ;; Defined at:
  4792 ;;		line 99 in file "user_app.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;  msg             5  [STACK] struct .
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1  [STACK] void 
  4799 ;; Registers used:
  4800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4806 ;;      Params:         0       0       0       0       0       0       0       0       0
  4807 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4808 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4809 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4810 ;;Total ram usage:        0 bytes
  4811 ;; Hardware stack levels used: 1
  4812 ;; Hardware stack levels required when called: 10
  4813 ;; This function calls:
  4814 ;;		_os_delay
  4815 ;;		_pipe_write_block
  4816 ;;		_read_adc_channel
  4817 ;; This function is called by:
  4818 ;;		_main
  4819 ;; This function uses a reentrant model
  4820 ;;
  4821                           
  4822                           	psect	text32
  4823  002350                     __ptext32:
  4824                           	callstack 0
  4825  002350                     _task_sensors:
  4826                           	callstack 0
  4827                           
  4828                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4829  002350  0E05               	movlw	5
  4830  002352  26E1               	addwf	fsr1l,f,c
  4831  002354  0E00               	movlw	0
  4832  002356  22E2               	addwfc	fsr1h,f,c
  4833  002358                     
  4834                           ;user_app.c: 101:     sensor_msg_t msg;;user_app.c: 102:     msg.type = MSG_SENSORS;
  4835                           ;stkvar	_msg @ sp[(-5)+0]
  4836  002358  0EFB               	movlw	-5
  4837  00235A  6AE3               	clrf	plusw1,c
  4838  00235C  2AE3               	incf	plusw1,f,c
  4839  00235E                     l2764:
  4840                           
  4841                           ;user_app.c: 105:         msg.gyro = read_adc_channel(CHANNEL_0);
  4842  00235E  0E00               	movlw	0
  4843  002360  6EE6               	movwf	postinc1,c
  4844  002362  ECC0  F014         	call	_read_adc_channel	;wreg free
  4845                           
  4846                           ;stkvar	_msg @ sp[(-5)+0]
  4847  002366  0EFC               	movlw	252
  4848  002368  24E1               	addwf	fsr1l,w,c
  4849  00236A  6ED9               	movwf	fsr2l,c
  4850  00236C  0EFF               	movlw	255
  4851  00236E  20E2               	addwfc	fsr1h,w,c
  4852  002370  6EDA               	movwf	fsr2h,c
  4853  002372  C001  FFDE         	movff	btemp,postinc2
  4854  002376  C002  FFDD         	movff	btemp+1,postdec2
  4855  00237A                     
  4856                           ;user_app.c: 106:         msg.accel = read_adc_channel(CHANNEL_1);
  4857  00237A  0E01               	movlw	1
  4858  00237C  6EE6               	movwf	postinc1,c
  4859  00237E  ECC0  F014         	call	_read_adc_channel	;wreg free
  4860                           
  4861                           ;stkvar	_msg @ sp[(-5)+0]
  4862  002382  0EFE               	movlw	254
  4863  002384  24E1               	addwf	fsr1l,w,c
  4864  002386  6ED9               	movwf	fsr2l,c
  4865  002388  0EFF               	movlw	255
  4866  00238A  20E2               	addwfc	fsr1h,w,c
  4867  00238C  6EDA               	movwf	fsr2h,c
  4868  00238E  C001  FFDE         	movff	btemp,postinc2
  4869  002392  C002  FFDD         	movff	btemp+1,postdec2
  4870  002396                     
  4871                           ;user_app.c: 108:         pipe_write_block(&g_pipe, (const char*)&msg, sizeof(msg));
  4872  002396  0E05               	movlw	5
  4873  002398  6EE6               	movwf	postinc1,c
  4874                           
  4875                           ;stkvar	_msg @ sp[(-6)+0]
  4876  00239A  0EFA               	movlw	250
  4877  00239C  24E1               	addwf	fsr1l,w,c
  4878  00239E  6E01               	movwf	btemp^0,c
  4879  0023A0  0EFF               	movlw	255
  4880  0023A2  20E2               	addwfc	fsr1h,w,c
  4881  0023A4  6E02               	movwf	(btemp+1)^0,c
  4882  0023A6  C001  FFE6         	movff	btemp,postinc1
  4883  0023AA  C002  FFE6         	movff	btemp+1,postinc1
  4884  0023AE  0E60               	movlw	low _g_pipe
  4885  0023B0  6EE6               	movwf	postinc1,c
  4886  0023B2  0E00               	movlw	high _g_pipe
  4887  0023B4  6EE6               	movwf	postinc1,c
  4888  0023B6  ECC3  F012         	call	_pipe_write_block	;wreg free
  4889  0023BA                     
  4890                           ;user_app.c: 109:         os_delay(10);
  4891  0023BA  0E0A               	movlw	10
  4892  0023BC  6EE6               	movwf	postinc1,c
  4893  0023BE  ECE0  F007         	call	_os_delay	;wreg free
  4894  0023C2  EFAF  F011         	goto	l2764
  4895                           
  4896                           ; _task_sensors: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4897  0023C6  0EFB               	movlw	251
  4898  0023C8  26E1               	addwf	fsr1l,f,c
  4899  0023CA  0EFF               	movlw	255
  4900  0023CC  22E2               	addwfc	fsr1h,f,c
  4901  0023CE  0012               	return		;funcret
  4902  0023D0                     __end_of_task_sensors:
  4903                           	callstack 0
  4904                           
  4905 ;; *************** function _read_adc_channel *****************
  4906 ;; Defined at:
  4907 ;;		line 69 in file "user_app.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  ch              1  [STACK] enum E3441
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;		None
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  2  [STACK] unsigned short 
  4914 ;; Registers used:
  4915 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+11
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4921 ;;      Params:         0       0       0       0       0       0       0       0       0
  4922 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4924 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4925 ;;Total ram usage:        0 bytes
  4926 ;; Hardware stack levels used: 1
  4927 ;; Hardware stack levels required when called: 5
  4928 ;; This function calls:
  4929 ;;		_adc_read
  4930 ;;		_set_channel
  4931 ;; This function is called by:
  4932 ;;		_task_sensors
  4933 ;;		_task_battery
  4934 ;; This function uses a reentrant model
  4935 ;;
  4936                           
  4937                           	psect	text33
  4938  002980                     __ptext33:
  4939                           	callstack 0
  4940  002980                     _read_adc_channel:
  4941                           	callstack 19
  4942  002980                     
  4943                           ;user_app.c: 69: static uint16_t read_adc_channel(channel_t ch);user_app.c: 70: {;user_a
      +                          pp.c: 71:     set_channel(ch);
  4944                           ;stkvar	_ch @ sp[(0)+-1]
  4945  002980  0EFF               	movlw	-1
  4946  002982  50E3               	movf	plusw1,w,c
  4947  002984  6EE6               	movwf	postinc1,c
  4948  002986  EC8C  F014         	call	_set_channel	;wreg free
  4949  00298A                     
  4950                           ;user_app.c: 72:     return (uint16_t)adc_read();
  4951  00298A  EC73  F014         	call	_adc_read	;wreg free
  4952  00298E                     
  4953                           ; _read_adc_channel: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  4954  00298E  52E5               	movf	postdec1,f,c
  4955  002990  0012               	return		;funcret
  4956  002992                     __end_of_read_adc_channel:
  4957                           	callstack 0
  4958                           
  4959 ;; *************** function _adc_read *****************
  4960 ;; Defined at:
  4961 ;;		line 28 in file "io.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;		None
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;		None
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  2  [STACK] int 
  4968 ;; Registers used:
  4969 ;;		btemp, btemp+1
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4975 ;;      Params:         0       0       0       0       0       0       0       0       0
  4976 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4978 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4979 ;;Total ram usage:        0 bytes
  4980 ;; Hardware stack levels used: 1
  4981 ;; Hardware stack levels required when called: 4
  4982 ;; This function calls:
  4983 ;;		Nothing
  4984 ;; This function is called by:
  4985 ;;		_read_adc_channel
  4986 ;; This function uses a reentrant model
  4987 ;;
  4988                           
  4989                           	psect	text34
  4990  0028E6                     __ptext34:
  4991                           	callstack 0
  4992  0028E6                     _adc_read:
  4993                           	callstack 19
  4994  0028E6                     
  4995                           ;io.c: 30:     ADCON0bits.GO = 1;
  4996  0028E6  82C2               	bsf	194,1,c	;volatile
  4997  0028E8                     l535:
  4998  0028E8  B2C2               	btfsc	194,1,c	;volatile
  4999  0028EA  EF79  F014         	goto	u146_21
  5000  0028EE  EF7B  F014         	goto	u146_20
  5001  0028F2                     u146_21:
  5002  0028F2  EF74  F014         	goto	l535
  5003  0028F6                     u146_20:
  5004  0028F6                     
  5005                           ;io.c: 32:     return ADRES;
  5006  0028F6  CFC3 F001          	movff	4035,btemp	;volatile
  5007  0028FA  CFC4 F002          	movff	4036,btemp+1	;volatile
  5008  0028FE                     
  5009                           ; _adc_read: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  5010  0028FE  0012               	return		;funcret
  5011  002900                     __end_of_adc_read:
  5012                           	callstack 0
  5013                           
  5014 ;; *************** function _pipe_write_block *****************
  5015 ;; Defined at:
  5016 ;;		line 59 in file "pipe.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;  p               2  [STACK] PTR struct pipe
  5019 ;;		 -> g_pipe(33), 
  5020 ;;  data            2  [STACK] PTR const unsigned char 
  5021 ;;		 -> type(1), msg(5), 
  5022 ;;  len             1  [STACK] unsigned char 
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;  i               1  [STACK] unsigned char 
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  1  [STACK] void 
  5027 ;; Registers used:
  5028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5034 ;;      Params:         0       0       0       0       0       0       0       0       0
  5035 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5037 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5038 ;;Total ram usage:        0 bytes
  5039 ;; Hardware stack levels used: 1
  5040 ;; Hardware stack levels required when called: 9
  5041 ;; This function calls:
  5042 ;;		_write_pipe
  5043 ;; This function is called by:
  5044 ;;		_task_sensors
  5045 ;;		_task_battery
  5046 ;; This function uses a reentrant model
  5047 ;;
  5048                           
  5049                           	psect	text35
  5050  002586                     __ptext35:
  5051                           	callstack 0
  5052  002586                     _pipe_write_block:
  5053                           	callstack 0
  5054                           
  5055                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5056  002586  52E6               	movf	postinc1,f,c
  5057  002588                     
  5058                           ;pipe.c: 59: void pipe_write_block(pipe_t *p, const char *data, uint8_t len);pipe.c: 60:
      +                           {;pipe.c: 61:     for (uint8_t i = 0; i < len; i++) {
  5059                           ;stkvar	_i @ sp[(-1)+0]
  5060  002588  0EFF               	movlw	-1
  5061  00258A  6AE3               	clrf	plusw1,c
  5062  00258C  EFE2  F012         	goto	l2686
  5063  002590                     l2682:
  5064                           
  5065                           ;pipe.c: 62:         write_pipe(p, data[i]);
  5066                           ;stkvar	_i @ sp[(-1)+0]
  5067  002590  0EFF               	movlw	-1
  5068  002592  CFE3 F00C          	movff	plusw1,btemp+11
  5069                           
  5070                           ;stkvar	_data @ sp[(-1)+-4]
  5071  002596  0EFB               	movlw	-5
  5072  002598  CFE3 F009          	movff	plusw1,btemp+8
  5073  00259C  0EFC               	movlw	-4
  5074  00259E  CFE3 F00A          	movff	plusw1,btemp+9
  5075  0025A2  500C               	movf	(btemp+11)^0,w,c
  5076  0025A4  2409               	addwf	(btemp+8)^0,w,c
  5077  0025A6  6ED9               	movwf	fsr2l,c
  5078  0025A8  0E00               	movlw	0
  5079  0025AA  200A               	addwfc	(btemp+9)^0,w,c
  5080  0025AC  6EDA               	movwf	fsr2h,c
  5081  0025AE  50DF               	movf	indf2,w,c
  5082  0025B0  6EE6               	movwf	postinc1,c
  5083                           
  5084                           ;stkvar	_p @ sp[(-2)+-2]
  5085  0025B2  0EFC               	movlw	-4
  5086  0025B4  CFE3 FFE6          	movff	plusw1,postinc1
  5087  0025B8  CFE3 FFE6          	movff	plusw1,postinc1
  5088  0025BC  EC50  F00D         	call	_write_pipe	;wreg free
  5089  0025C0                     
  5090                           ;pipe.c: 63:     }
  5091                           ;stkvar	_i @ sp[(-1)+0]
  5092  0025C0  0EFF               	movlw	-1
  5093  0025C2  2AE3               	incf	plusw1,f,c
  5094  0025C4                     l2686:
  5095                           
  5096                           ;stkvar	_len @ sp[(-1)+-5]
  5097                           ;stkvar	_i @ sp[(-1)+0]
  5098  0025C4  50E1               	movf	fsr1l,w,c
  5099  0025C6  0FFF               	addlw	-1
  5100  0025C8  6ED9               	movwf	fsr2l,c
  5101  0025CA  50E2               	movf	fsr1h,w,c
  5102  0025CC  6EDA               	movwf	fsr2h,c
  5103  0025CE  0EFF               	movlw	255
  5104  0025D0  22DA               	addwfc	fsr2h,f,c
  5105  0025D2  0EFA               	movlw	-6
  5106  0025D4  50E3               	movf	plusw1,w,c
  5107  0025D6  5CDE               	subwf	postinc2,w,c
  5108  0025D8  A0D8               	btfss	status,0,c
  5109  0025DA  EFF1  F012         	goto	u172_21
  5110  0025DE  EFF3  F012         	goto	u172_20
  5111  0025E2                     u172_21:
  5112  0025E2  EFC8  F012         	goto	l2682
  5113  0025E6                     u172_20:
  5114  0025E6                     
  5115                           ; _pipe_write_block: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
  5116  0025E6  0EFA               	movlw	250
  5117  0025E8  26E1               	addwf	fsr1l,f,c
  5118  0025EA  0EFF               	movlw	255
  5119  0025EC  22E2               	addwfc	fsr1h,f,c
  5120  0025EE  0012               	return		;funcret
  5121  0025F0                     __end_of_pipe_write_block:
  5122                           	callstack 0
  5123                           
  5124 ;; *************** function _write_pipe *****************
  5125 ;; Defined at:
  5126 ;;		line 43 in file "pipe.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;  p               2  [STACK] PTR struct pipe
  5129 ;;		 -> g_pipe(33), 
  5130 ;;  buffer          1  [STACK] unsigned char 
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;		None
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  1  [STACK] void 
  5135 ;; Registers used:
  5136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5142 ;;      Params:         0       0       0       0       0       0       0       0       0
  5143 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5144 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5145 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5146 ;;Total ram usage:        0 bytes
  5147 ;; Hardware stack levels used: 1
  5148 ;; Hardware stack levels required when called: 8
  5149 ;; This function calls:
  5150 ;;		___awmod
  5151 ;;		_sem_post
  5152 ;;		_sem_wait
  5153 ;; This function is called by:
  5154 ;;		_pipe_write_block
  5155 ;; This function uses a reentrant model
  5156 ;;
  5157                           
  5158                           	psect	text36
  5159  001AA0                     __ptext36:
  5160                           	callstack 0
  5161  001AA0                     _write_pipe:
  5162                           	callstack 15
  5163  001AA0                     
  5164                           ;pipe.c: 43: void write_pipe(pipe_t *p, char buffer);pipe.c: 44: {;pipe.c: 45:     (INTC
      +                          ONbits.GIE = 0);
  5165  001AA0  9EF2               	bcf	242,7,c	;volatile
  5166  001AA2                     
  5167                           ;pipe.c: 48:     sem_wait(&p->pipe_sem_write);
  5168                           ;stkvar	_p @ sp[(0)+-2]
  5169  001AA2  0EFE               	movlw	-2
  5170  001AA4  50E3               	movf	plusw1,w,c
  5171  001AA6  0F13               	addlw	19
  5172  001AA8  6E0B               	movwf	(btemp+10)^0,c
  5173  001AAA  0EFF               	movlw	-1
  5174  001AAC  CFE3 F00C          	movff	plusw1,btemp+11
  5175  001AB0  0E00               	movlw	0
  5176  001AB2  220C               	addwfc	(btemp+11)^0,f,c
  5177  001AB4  C00B  FFE6         	movff	btemp+10,postinc1
  5178  001AB8  C00C  FFE6         	movff	btemp+11,postinc1
  5179  001ABC  ECC9  F003         	call	_sem_wait	;wreg free
  5180  001AC0                     
  5181                           ;pipe.c: 50:     p->pipe_data[p->pipe_pos_write] = buffer;
  5182                           ;stkvar	_buffer @ sp[(0)+-3]
  5183                           ;stkvar	_p @ sp[(0)+-2]
  5184  001AC0  0EFE               	movlw	-2
  5185  001AC2  CFE3 F00B          	movff	plusw1,btemp+10
  5186  001AC6  0EFF               	movlw	-1
  5187  001AC8  CFE3 F00C          	movff	plusw1,btemp+11
  5188  001ACC  0E01               	movlw	1
  5189  001ACE  240B               	addwf	(btemp+10)^0,w,c
  5190  001AD0  6ED9               	movwf	fsr2l,c
  5191  001AD2  0E00               	movlw	0
  5192  001AD4  200C               	addwfc	(btemp+11)^0,w,c
  5193  001AD6  6EDA               	movwf	fsr2h,c
  5194  001AD8  50DF               	movf	indf2,w,c
  5195  001ADA  6E0C               	movwf	(btemp+11)^0,c
  5196                           
  5197                           ;stkvar	_p @ sp[(0)+-2]
  5198  001ADC  0EFE               	movlw	-2
  5199  001ADE  CFE3 F009          	movff	plusw1,btemp+8
  5200  001AE2  0EFF               	movlw	-1
  5201  001AE4  CFE3 F00A          	movff	plusw1,btemp+9
  5202  001AE8  0E02               	movlw	2
  5203  001AEA  2409               	addwf	(btemp+8)^0,w,c
  5204  001AEC  6ED9               	movwf	fsr2l,c
  5205  001AEE  0E00               	movlw	0
  5206  001AF0  200A               	addwfc	(btemp+9)^0,w,c
  5207  001AF2  6EDA               	movwf	fsr2h,c
  5208  001AF4  CFDE F009          	movff	postinc2,btemp+8
  5209  001AF8  CFDD F00A          	movff	postdec2,btemp+9
  5210  001AFC  500C               	movf	(btemp+11)^0,w,c
  5211  001AFE  2409               	addwf	(btemp+8)^0,w,c
  5212  001B00  6ED9               	movwf	fsr2l,c
  5213  001B02  0E00               	movlw	0
  5214  001B04  200A               	addwfc	(btemp+9)^0,w,c
  5215  001B06  6EDA               	movwf	fsr2h,c
  5216  001B08  0EFD               	movlw	-3
  5217  001B0A  CFE3 FFDF          	movff	plusw1,indf2
  5218  001B0E                     
  5219                           ;pipe.c: 51:     p->pipe_pos_write = (p->pipe_pos_write + 1) % p->pipe_capacity;
  5220                           ;stkvar	_p @ sp[(0)+-2]
  5221  001B0E  0EFE               	movlw	-2
  5222  001B10  CFE3 F00B          	movff	plusw1,btemp+10
  5223  001B14  0EFF               	movlw	-1
  5224  001B16  CFE3 F00C          	movff	plusw1,btemp+11
  5225  001B1A  0E01               	movlw	1
  5226  001B1C  240B               	addwf	(btemp+10)^0,w,c
  5227  001B1E  6ED9               	movwf	fsr2l,c
  5228  001B20  0E00               	movlw	0
  5229  001B22  200C               	addwfc	(btemp+11)^0,w,c
  5230  001B24  6EDA               	movwf	fsr2h,c
  5231                           
  5232                           ;stkvar	_p @ sp[(0)+-2]
  5233  001B26  0EFE               	movlw	-2
  5234  001B28  CFE3 F00B          	movff	plusw1,btemp+10
  5235  001B2C  0EFF               	movlw	-1
  5236  001B2E  CFE3 F00C          	movff	plusw1,btemp+11
  5237  001B32  0E04               	movlw	4
  5238  001B34  240B               	addwf	(btemp+10)^0,w,c
  5239  001B36  6EE9               	movwf	fsr0l,c
  5240  001B38  0E00               	movlw	0
  5241  001B3A  200C               	addwfc	(btemp+11)^0,w,c
  5242  001B3C  6EEA               	movwf	fsr0h,c
  5243  001B3E  50EF               	movf	indf0,w,c
  5244  001B40  6EE6               	movwf	postinc1,c
  5245  001B42  0E00               	movlw	0
  5246  001B44  6EE6               	movwf	postinc1,c
  5247                           
  5248                           ;stkvar	_p @ sp[(-2)+-2]
  5249  001B46  0EFC               	movlw	-4
  5250  001B48  CFE3 F00B          	movff	plusw1,btemp+10
  5251  001B4C  0EFD               	movlw	-3
  5252  001B4E  CFE3 F00C          	movff	plusw1,btemp+11
  5253  001B52  0E01               	movlw	1
  5254  001B54  240B               	addwf	(btemp+10)^0,w,c
  5255  001B56  6EE9               	movwf	fsr0l,c
  5256  001B58  0E00               	movlw	0
  5257  001B5A  200C               	addwfc	(btemp+11)^0,w,c
  5258  001B5C  6EEA               	movwf	fsr0h,c
  5259  001B5E  50EF               	movf	indf0,w,c
  5260  001B60  6E0B               	movwf	(btemp+10)^0,c
  5261  001B62  6A0C               	clrf	(btemp+11)^0,c
  5262  001B64  0E01               	movlw	1
  5263  001B66  260B               	addwf	(btemp+10)^0,f,c
  5264  001B68  0E00               	movlw	0
  5265  001B6A  220C               	addwfc	(btemp+11)^0,f,c
  5266  001B6C  C00B  FFE6         	movff	btemp+10,postinc1
  5267  001B70  C00C  FFE6         	movff	btemp+11,postinc1
  5268  001B74  ECAB  F00C         	call	___awmod	;wreg free
  5269  001B78  5001               	movf	btemp^0,w,c
  5270  001B7A  6EDF               	movwf	indf2,c
  5271  001B7C                     
  5272                           ;pipe.c: 54:     sem_post(&p->pipe_sem_read);
  5273                           ;stkvar	_p @ sp[(0)+-2]
  5274  001B7C  0EFE               	movlw	-2
  5275  001B7E  50E3               	movf	plusw1,w,c
  5276  001B80  0F05               	addlw	5
  5277  001B82  6E0B               	movwf	(btemp+10)^0,c
  5278  001B84  0EFF               	movlw	-1
  5279  001B86  CFE3 F00C          	movff	plusw1,btemp+11
  5280  001B8A  0E00               	movlw	0
  5281  001B8C  220C               	addwfc	(btemp+11)^0,f,c
  5282  001B8E  C00B  FFE6         	movff	btemp+10,postinc1
  5283  001B92  C00C  FFE6         	movff	btemp+11,postinc1
  5284  001B96  ECB5  F00F         	call	_sem_post	;wreg free
  5285  001B9A                     
  5286                           ;pipe.c: 56:     (INTCONbits.GIE = 1);
  5287  001B9A  8EF2               	bsf	242,7,c	;volatile
  5288  001B9C                     
  5289                           ; _write_pipe: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  5290  001B9C  52E5               	movf	postdec1,f,c
  5291  001B9E  52E5               	movf	postdec1,f,c
  5292  001BA0  52E5               	movf	postdec1,f,c
  5293  001BA2  0012               	return		;funcret
  5294  001BA4                     __end_of_write_pipe:
  5295                           	callstack 0
  5296                           
  5297 ;; *************** function _sem_wait *****************
  5298 ;; Defined at:
  5299 ;;		line 17 in file "sync.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;  s               2  [STACK] PTR struct semaphore
  5302 ;;		 -> g_pipe(33), 
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;		None
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  1  [STACK] void 
  5307 ;; Registers used:
  5308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5314 ;;      Params:         0       0       0       0       0       0       0       0       0
  5315 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5317 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5318 ;;Total ram usage:        0 bytes
  5319 ;; Hardware stack levels used: 1
  5320 ;; Hardware stack levels required when called: 7
  5321 ;; This function calls:
  5322 ;;		___awmod
  5323 ;;		_scheduler
  5324 ;; This function is called by:
  5325 ;;		_read_pipe
  5326 ;;		_write_pipe
  5327 ;; This function uses a reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text37
  5331  000792                     __ptext37:
  5332                           	callstack 0
  5333  000792                     _sem_wait:
  5334                           	callstack 15
  5335  000792                     
  5336                           ;sync.c: 17: void sem_wait(sem_t *s);sync.c: 18: {;sync.c: 19:     (INTCONbits.GIE = 0);
  5337  000792  9EF2               	bcf	242,7,c	;volatile
  5338  000794                     
  5339                           ;sync.c: 22:     s->contador--;
  5340                           ;stkvar	_s @ sp[(0)+-2]
  5341  000794  0EFE               	movlw	-2
  5342  000796  CFE3 FFD9          	movff	plusw1,fsr2l
  5343  00079A  0EFF               	movlw	-1
  5344  00079C  CFE3 FFDA          	movff	plusw1,fsr2h
  5345  0007A0  06DE               	decf	postinc2,f,c
  5346  0007A2  0E00               	movlw	0
  5347  0007A4  5ADD               	subwfb	postdec2,f,c
  5348  0007A6                     
  5349                           ;sync.c: 24:     if (s->contador < 0) {
  5350                           ;stkvar	_s @ sp[(0)+-2]
  5351  0007A6  0EFE               	movlw	-2
  5352  0007A8  CFE3 FFD9          	movff	plusw1,fsr2l
  5353  0007AC  0EFF               	movlw	-1
  5354  0007AE  CFE3 FFDA          	movff	plusw1,fsr2h
  5355  0007B2  0E01               	movlw	1
  5356  0007B4  BEDB               	btfsc	plusw2,7,c
  5357  0007B6  EFE1  F003         	goto	u132_20
  5358  0007BA  EFDF  F003         	goto	u132_21
  5359  0007BE                     u132_21:
  5360  0007BE  EF40  F005         	goto	l2380
  5361  0007C2                     u132_20:
  5362  0007C2                     
  5363                           ;sync.c: 26:         s->sem_queue[s->sem_queue_in] = readyQueue.taskRunning;
  5364  0007C2  EE22  F094         	lfsr	2,_readyQueue+531
  5365                           
  5366                           ;stkvar	_s @ sp[(0)+-2]
  5367  0007C6  0EFE               	movlw	-2
  5368  0007C8  CFE3 F00B          	movff	plusw1,btemp+10
  5369  0007CC  0EFF               	movlw	-1
  5370  0007CE  CFE3 F00C          	movff	plusw1,btemp+11
  5371  0007D2  0E0C               	movlw	12
  5372  0007D4  240B               	addwf	(btemp+10)^0,w,c
  5373  0007D6  6EE9               	movwf	fsr0l,c
  5374  0007D8  0E00               	movlw	0
  5375  0007DA  200C               	addwfc	(btemp+11)^0,w,c
  5376  0007DC  6EEA               	movwf	fsr0h,c
  5377  0007DE  50EF               	movf	indf0,w,c
  5378  0007E0  0D02               	mullw	2
  5379  0007E2  CFF3 F00B          	movff	prodl,btemp+10
  5380  0007E6  CFF4 F00C          	movff	prodh,btemp+11
  5381                           
  5382                           ;stkvar	_s @ sp[(0)+-2]
  5383  0007EA  0EFE               	movlw	-2
  5384  0007EC  50E3               	movf	plusw1,w,c
  5385  0007EE  260B               	addwf	(btemp+10)^0,f,c
  5386  0007F0  0EFF               	movlw	-1
  5387  0007F2  50E3               	movf	plusw1,w,c
  5388  0007F4  220C               	addwfc	(btemp+11)^0,f,c
  5389  0007F6  0E02               	movlw	2
  5390  0007F8  240B               	addwf	(btemp+10)^0,w,c
  5391  0007FA  6EE9               	movwf	fsr0l,c
  5392  0007FC  0E00               	movlw	0
  5393  0007FE  200C               	addwfc	(btemp+11)^0,w,c
  5394  000800  6EEA               	movwf	fsr0h,c
  5395  000802  CFDE FFEE          	movff	postinc2,postinc0
  5396  000806  CFDD FFED          	movff	postdec2,postdec0
  5397  00080A                     
  5398                           ;sync.c: 27:         s->sem_queue_in = (s->sem_queue_in + 1) % 5;
  5399                           ;stkvar	_s @ sp[(0)+-2]
  5400  00080A  0EFE               	movlw	-2
  5401  00080C  CFE3 F00B          	movff	plusw1,btemp+10
  5402  000810  0EFF               	movlw	-1
  5403  000812  CFE3 F00C          	movff	plusw1,btemp+11
  5404  000816  0E0C               	movlw	12
  5405  000818  240B               	addwf	(btemp+10)^0,w,c
  5406  00081A  6ED9               	movwf	fsr2l,c
  5407  00081C  0E00               	movlw	0
  5408  00081E  200C               	addwfc	(btemp+11)^0,w,c
  5409  000820  6EDA               	movwf	fsr2h,c
  5410  000822  0E05               	movlw	5
  5411  000824  6EE6               	movwf	postinc1,c
  5412  000826  0E00               	movlw	0
  5413  000828  6EE6               	movwf	postinc1,c
  5414                           
  5415                           ;stkvar	_s @ sp[(-2)+-2]
  5416  00082A  0EFC               	movlw	-4
  5417  00082C  CFE3 F00B          	movff	plusw1,btemp+10
  5418  000830  0EFD               	movlw	-3
  5419  000832  CFE3 F00C          	movff	plusw1,btemp+11
  5420  000836  0E0C               	movlw	12
  5421  000838  240B               	addwf	(btemp+10)^0,w,c
  5422  00083A  6EE9               	movwf	fsr0l,c
  5423  00083C  0E00               	movlw	0
  5424  00083E  200C               	addwfc	(btemp+11)^0,w,c
  5425  000840  6EEA               	movwf	fsr0h,c
  5426  000842  50EF               	movf	indf0,w,c
  5427  000844  6E0B               	movwf	(btemp+10)^0,c
  5428  000846  6A0C               	clrf	(btemp+11)^0,c
  5429  000848  0E01               	movlw	1
  5430  00084A  260B               	addwf	(btemp+10)^0,f,c
  5431  00084C  0E00               	movlw	0
  5432  00084E  220C               	addwfc	(btemp+11)^0,f,c
  5433  000850  C00B  FFE6         	movff	btemp+10,postinc1
  5434  000854  C00C  FFE6         	movff	btemp+11,postinc1
  5435  000858  ECAB  F00C         	call	___awmod	;wreg free
  5436  00085C  5001               	movf	btemp^0,w,c
  5437  00085E  6EDF               	movwf	indf2,c
  5438  000860  EE22  F094         	lfsr	2,_readyQueue+531
  5439  000864  EE00 F003          	lfsr	0,3
  5440  000868  50DE               	movf	postinc2,w,c
  5441  00086A  26E9               	addwf	fsr0l,f,c
  5442  00086C  50DD               	movf	postdec2,w,c
  5443  00086E  22EA               	addwfc	fsr0h,f,c
  5444  000870  04EE               	decf	postinc0,w,c
  5445  000872  A4D8               	btfss	status,2,c
  5446  000874  EF3E  F004         	goto	u133_21
  5447  000878  EF40  F004         	goto	u133_20
  5448  00087C                     u133_21:
  5449  00087C  EFA6  F004         	goto	l2356
  5450  000880                     u133_20:
  5451  000880  EE22  F094         	lfsr	2,_readyQueue+531
  5452  000884  EE00 F006          	lfsr	0,6
  5453  000888  50DE               	movf	postinc2,w,c
  5454  00088A  26E9               	addwf	fsr0l,f,c
  5455  00088C  50DD               	movf	postdec2,w,c
  5456  00088E  22EA               	addwfc	fsr0h,f,c
  5457  000890  CFE0 FFEF          	movff	bsr,indf0	;volatile
  5458  000894  EE22  F094         	lfsr	2,_readyQueue+531
  5459  000898  EE00 F008          	lfsr	0,8
  5460  00089C  50DE               	movf	postinc2,w,c
  5461  00089E  26E9               	addwf	fsr0l,f,c
  5462  0008A0  50DD               	movf	postdec2,w,c
  5463  0008A2  22EA               	addwfc	fsr0h,f,c
  5464  0008A4  CFD8 FFEF          	movff	status,indf0	;volatile
  5465  0008A8  EE22  F094         	lfsr	2,_readyQueue+531
  5466  0008AC  EE00 F007          	lfsr	0,7
  5467  0008B0  50DE               	movf	postinc2,w,c
  5468  0008B2  26E9               	addwf	fsr0l,f,c
  5469  0008B4  50DD               	movf	postdec2,w,c
  5470  0008B6  22EA               	addwfc	fsr0h,f,c
  5471  0008B8  CFE8 FFEF          	movff	wreg,indf0	;volatile
  5472  0008BC  EE22  F094         	lfsr	2,_readyQueue+531
  5473  0008C0  EE00 F069          	lfsr	0,105
  5474  0008C4  50DE               	movf	postinc2,w,c
  5475  0008C6  26E9               	addwf	fsr0l,f,c
  5476  0008C8  50DD               	movf	postdec2,w,c
  5477  0008CA  22EA               	addwfc	fsr0h,f,c
  5478  0008CC  0E00               	movlw	0
  5479  0008CE  6EEF               	movwf	indf0,c
  5480  0008D0  EF94  F004         	goto	l2352
  5481  0008D4                     l2348:
  5482  0008D4  EE22  F094         	lfsr	2,_readyQueue+531
  5483  0008D8  EE00 F069          	lfsr	0,105
  5484  0008DC  50DE               	movf	postinc2,w,c
  5485  0008DE  26E9               	addwf	fsr0l,f,c
  5486  0008E0  50DD               	movf	postdec2,w,c
  5487  0008E2  22EA               	addwfc	fsr0h,f,c
  5488  0008E4  50EF               	movf	indf0,w,c
  5489  0008E6  0D03               	mullw	3
  5490  0008E8  EE22  F094         	lfsr	2,_readyQueue+531
  5491  0008EC  CFDE F00B          	movff	postinc2,btemp+10
  5492  0008F0  CFDD F00C          	movff	postdec2,btemp+11
  5493  0008F4  50F3               	movf	243,w,c
  5494  0008F6  260B               	addwf	(btemp+10)^0,f,c
  5495  0008F8  50F4               	movf	244,w,c
  5496  0008FA  220C               	addwfc	(btemp+11)^0,f,c
  5497  0008FC  0E09               	movlw	9
  5498  0008FE  240B               	addwf	(btemp+10)^0,w,c
  5499  000900  6ED9               	movwf	fsr2l,c
  5500  000902  0E00               	movlw	0
  5501  000904  200C               	addwfc	(btemp+11)^0,w,c
  5502  000906  6EDA               	movwf	fsr2h,c
  5503  000908  CFFD FFDE          	movff	tosl,postinc2	;volatile
  5504  00090C  CFFE FFDE          	movff	tosh,postinc2	;volatile
  5505  000910  CFFF FFDE          	movff	tosu,postinc2	;volatile
  5506  000914  EE22  F094         	lfsr	2,_readyQueue+531
  5507  000918  EE00 F069          	lfsr	0,105
  5508  00091C  50DE               	movf	postinc2,w,c
  5509  00091E  26E9               	addwf	fsr0l,f,c
  5510  000920  50DD               	movf	postdec2,w,c
  5511  000922  22EA               	addwfc	fsr0h,f,c
  5512  000924  2AEF               	incf	indf0,f,c
  5513  000926  0006               	pop		;# 
  5514  000928                     l2352:
  5515  000928  50FC               	movf	252,w,c	;volatile
  5516  00092A  A4D8               	btfss	status,2,c
  5517  00092C  EF9A  F004         	goto	u134_21
  5518  000930  EF9C  F004         	goto	u134_20
  5519  000934                     u134_21:
  5520  000934  EF6A  F004         	goto	l2348
  5521  000938                     u134_20:
  5522  000938  EE22  F094         	lfsr	2,_readyQueue+531
  5523  00093C  EE00 F003          	lfsr	0,3
  5524  000940  50DE               	movf	postinc2,w,c
  5525  000942  26E9               	addwf	fsr0l,f,c
  5526  000944  50DD               	movf	postdec2,w,c
  5527  000946  22EA               	addwfc	fsr0h,f,c
  5528  000948  0E03               	movlw	3
  5529  00094A  6EEF               	movwf	indf0,c
  5530  00094C                     l2356:
  5531                           
  5532                           ;sync.c: 30:         scheduler();
  5533  00094C  ECC9  F014         	call	_scheduler	;wreg free
  5534  000950  EE22  F094         	lfsr	2,_readyQueue+531
  5535  000954  EE00 F003          	lfsr	0,3
  5536  000958  50DE               	movf	postinc2,w,c
  5537  00095A  26E9               	addwf	fsr0l,f,c
  5538  00095C  50DD               	movf	postdec2,w,c
  5539  00095E  22EA               	addwfc	fsr0h,f,c
  5540  000960  50EF               	movf	indf0,w,c
  5541  000962  A4D8               	btfss	status,2,c
  5542  000964  EFB6  F004         	goto	u135_21
  5543  000968  EFB8  F004         	goto	u135_20
  5544  00096C                     u135_21:
  5545  00096C  EF40  F005         	goto	l2380
  5546  000970                     u135_20:
  5547  000970  EE22  F094         	lfsr	2,_readyQueue+531
  5548  000974  EE00 F006          	lfsr	0,6
  5549  000978  50DE               	movf	postinc2,w,c
  5550  00097A  26E9               	addwf	fsr0l,f,c
  5551  00097C  50DD               	movf	postdec2,w,c
  5552  00097E  22EA               	addwfc	fsr0h,f,c
  5553  000980  50EF               	movf	indf0,w,c
  5554  000982  6EE0               	movwf	224,c	;volatile
  5555  000984  EE22  F094         	lfsr	2,_readyQueue+531
  5556  000988  EE00 F008          	lfsr	0,8
  5557  00098C  50DE               	movf	postinc2,w,c
  5558  00098E  26E9               	addwf	fsr0l,f,c
  5559  000990  50DD               	movf	postdec2,w,c
  5560  000992  22EA               	addwfc	fsr0h,f,c
  5561  000994  50EF               	movf	indf0,w,c
  5562  000996  6ED8               	movwf	216,c	;volatile
  5563  000998  EE22  F094         	lfsr	2,_readyQueue+531
  5564  00099C  EE00 F007          	lfsr	0,7
  5565  0009A0  50DE               	movf	postinc2,w,c
  5566  0009A2  26E9               	addwf	fsr0l,f,c
  5567  0009A4  50DD               	movf	postdec2,w,c
  5568  0009A6  22EA               	addwfc	fsr0h,f,c
  5569  0009A8  50EF               	movf	indf0,w,c
  5570  0009AA  6E0C               	movwf	(btemp+11)^0,c
  5571  0009AC  500C               	movf	(btemp+11)^0,w,c
  5572  0009AE  6AFC               	clrf	252,c	;volatile
  5573  0009B0  EE22  F094         	lfsr	2,_readyQueue+531
  5574  0009B4  EE00 F069          	lfsr	0,105
  5575  0009B8  50DE               	movf	postinc2,w,c
  5576  0009BA  26E9               	addwf	fsr0l,f,c
  5577  0009BC  50DD               	movf	postdec2,w,c
  5578  0009BE  22EA               	addwfc	fsr0h,f,c
  5579  0009C0  50EF               	movf	indf0,w,c
  5580  0009C2  A4D8               	btfss	status,2,c
  5581  0009C4  EFE6  F004         	goto	u136_21
  5582  0009C8  EFE8  F004         	goto	u136_20
  5583  0009CC                     u136_21:
  5584  0009CC  EFFC  F004         	goto	l388
  5585  0009D0                     u136_20:
  5586  0009D0  0005               	push		;# 
  5587  0009D2  EE22  F094         	lfsr	2,_readyQueue+531
  5588  0009D6  EE00 F001          	lfsr	0,1
  5589  0009DA  50DE               	movf	postinc2,w,c
  5590  0009DC  26E9               	addwf	fsr0l,f,c
  5591  0009DE  50DD               	movf	postdec2,w,c
  5592  0009E0  22EA               	addwfc	fsr0h,f,c
  5593  0009E2  CFEE F00B          	movff	postinc0,btemp+10
  5594  0009E6  CFED F00C          	movff	postdec0,btemp+11
  5595  0009EA  C00B  FFFD         	movff	btemp+10,tosl	;volatile
  5596  0009EE  C00C  FFFE         	movff	btemp+11,tosh	;volatile
  5597  0009F2  6AFF               	clrf	255,c	;volatile
  5598  0009F4  EF36  F005         	goto	l2378
  5599  0009F8                     l388:
  5600  0009F8  0005               	push		;# 
  5601  0009FA  EE22  F094         	lfsr	2,_readyQueue+531
  5602  0009FE  EE00 F069          	lfsr	0,105
  5603  000A02  50DE               	movf	postinc2,w,c
  5604  000A04  26E9               	addwf	fsr0l,f,c
  5605  000A06  50DD               	movf	postdec2,w,c
  5606  000A08  22EA               	addwfc	fsr0h,f,c
  5607  000A0A  06EF               	decf	indf0,f,c
  5608  000A0C  EE22  F094         	lfsr	2,_readyQueue+531
  5609  000A10  EE00 F069          	lfsr	0,105
  5610  000A14  50DE               	movf	postinc2,w,c
  5611  000A16  26E9               	addwf	fsr0l,f,c
  5612  000A18  50DD               	movf	postdec2,w,c
  5613  000A1A  22EA               	addwfc	fsr0h,f,c
  5614  000A1C  50EF               	movf	indf0,w,c
  5615  000A1E  0D03               	mullw	3
  5616  000A20  EE22  F094         	lfsr	2,_readyQueue+531
  5617  000A24  CFDE F00B          	movff	postinc2,btemp+10
  5618  000A28  CFDD F00C          	movff	postdec2,btemp+11
  5619  000A2C  50F3               	movf	243,w,c
  5620  000A2E  260B               	addwf	(btemp+10)^0,f,c
  5621  000A30  50F4               	movf	244,w,c
  5622  000A32  220C               	addwfc	(btemp+11)^0,f,c
  5623  000A34  0E09               	movlw	9
  5624  000A36  240B               	addwf	(btemp+10)^0,w,c
  5625  000A38  6ED9               	movwf	fsr2l,c
  5626  000A3A  0E00               	movlw	0
  5627  000A3C  200C               	addwfc	(btemp+11)^0,w,c
  5628  000A3E  6EDA               	movwf	fsr2h,c
  5629  000A40  CFDE FFFD          	movff	postinc2,tosl	;volatile
  5630  000A44  CFDE FFFE          	movff	postinc2,tosh	;volatile
  5631  000A48  CFDD FFFF          	movff	postdec2,tosu	;volatile
  5632  000A4C  EE22  F094         	lfsr	2,_readyQueue+531
  5633  000A50  EE00 F069          	lfsr	0,105
  5634  000A54  50DE               	movf	postinc2,w,c
  5635  000A56  26E9               	addwf	fsr0l,f,c
  5636  000A58  50DD               	movf	postdec2,w,c
  5637  000A5A  22EA               	addwfc	fsr0h,f,c
  5638  000A5C  50EF               	movf	indf0,w,c
  5639  000A5E  A4D8               	btfss	status,2,c
  5640  000A60  EF34  F005         	goto	u137_21
  5641  000A64  EF36  F005         	goto	u137_20
  5642  000A68                     u137_21:
  5643  000A68  EFFC  F004         	goto	l388
  5644  000A6C                     u137_20:
  5645  000A6C                     l2378:
  5646  000A6C  EE22  F094         	lfsr	2,_readyQueue+531
  5647  000A70  EE00 F003          	lfsr	0,3
  5648  000A74  50DE               	movf	postinc2,w,c
  5649  000A76  26E9               	addwf	fsr0l,f,c
  5650  000A78  50DD               	movf	postdec2,w,c
  5651  000A7A  22EA               	addwfc	fsr0h,f,c
  5652  000A7C  0E01               	movlw	1
  5653  000A7E  6EEF               	movwf	indf0,c
  5654  000A80                     l2380:
  5655                           
  5656                           ;sync.c: 34:     (INTCONbits.GIE = 1);
  5657  000A80  8EF2               	bsf	242,7,c	;volatile
  5658  000A82                     
  5659                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  5660  000A82  52E5               	movf	postdec1,f,c
  5661  000A84  52E5               	movf	postdec1,f,c
  5662  000A86  0012               	return		;funcret
  5663  000A88                     __end_of_sem_wait:
  5664                           	callstack 0
  5665                           
  5666 ;; *************** function _sem_post *****************
  5667 ;; Defined at:
  5668 ;;		line 37 in file "sync.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  s               2  [STACK] PTR struct semaphore
  5671 ;;		 -> g_pipe(33), 
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;		None
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1  [STACK] void 
  5676 ;; Registers used:
  5677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5683 ;;      Params:         0       0       0       0       0       0       0       0       0
  5684 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5686 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5687 ;;Total ram usage:        0 bytes
  5688 ;; Hardware stack levels used: 1
  5689 ;; Hardware stack levels required when called: 5
  5690 ;; This function calls:
  5691 ;;		___awmod
  5692 ;; This function is called by:
  5693 ;;		_read_pipe
  5694 ;;		_write_pipe
  5695 ;; This function uses a reentrant model
  5696 ;;
  5697                           
  5698                           	psect	text38
  5699  001F6A                     __ptext38:
  5700                           	callstack 0
  5701  001F6A                     _sem_post:
  5702                           	callstack 17
  5703  001F6A                     
  5704                           ;sync.c: 37: void sem_post(sem_t *s);sync.c: 38: {;sync.c: 39:     (INTCONbits.GIE = 0);
  5705  001F6A  9EF2               	bcf	242,7,c	;volatile
  5706  001F6C                     
  5707                           ;sync.c: 41:     s->contador++;
  5708                           ;stkvar	_s @ sp[(0)+-2]
  5709  001F6C  0EFE               	movlw	-2
  5710  001F6E  CFE3 FFD9          	movff	plusw1,fsr2l
  5711  001F72  0EFF               	movlw	-1
  5712  001F74  CFE3 FFDA          	movff	plusw1,fsr2h
  5713  001F78  2ADE               	incf	postinc2,f,c
  5714  001F7A  0E00               	movlw	0
  5715  001F7C  22DD               	addwfc	postdec2,f,c
  5716  001F7E                     
  5717                           ;sync.c: 43:     if (s->contador <= 0) {
  5718                           ;stkvar	_s @ sp[(0)+-2]
  5719  001F7E  0EFE               	movlw	-2
  5720  001F80  CFE3 FFD9          	movff	plusw1,fsr2l
  5721  001F84  0EFF               	movlw	-1
  5722  001F86  CFE3 FFDA          	movff	plusw1,fsr2h
  5723  001F8A  0E01               	movlw	1
  5724  001F8C  BEDB               	btfsc	plusw2,7,c
  5725  001F8E  EFD4  F00F         	goto	u138_20
  5726  001F92  0E01               	movlw	1
  5727  001F94  50DB               	movf	plusw2,w,c
  5728  001F96  E106               	bnz	u138_21
  5729  001F98  04DE               	decf	postinc2,w,c
  5730  001F9A  B0D8               	btfsc	status,0,c
  5731  001F9C  EFD2  F00F         	goto	u138_21
  5732  001FA0  EFD4  F00F         	goto	u138_20
  5733  001FA4                     u138_21:
  5734  001FA4  EF25  F010         	goto	l2392
  5735  001FA8                     u138_20:
  5736  001FA8                     
  5737                           ;sync.c: 44:         s->sem_queue[s->sem_queue_out]->task_state = READY;
  5738                           ;stkvar	_s @ sp[(0)+-2]
  5739  001FA8  0EFE               	movlw	-2
  5740  001FAA  CFE3 F00B          	movff	plusw1,btemp+10
  5741  001FAE  0EFF               	movlw	-1
  5742  001FB0  CFE3 F00C          	movff	plusw1,btemp+11
  5743  001FB4  0E0D               	movlw	13
  5744  001FB6  240B               	addwf	(btemp+10)^0,w,c
  5745  001FB8  6ED9               	movwf	fsr2l,c
  5746  001FBA  0E00               	movlw	0
  5747  001FBC  200C               	addwfc	(btemp+11)^0,w,c
  5748  001FBE  6EDA               	movwf	fsr2h,c
  5749  001FC0  50DF               	movf	indf2,w,c
  5750  001FC2  0D02               	mullw	2
  5751  001FC4  CFF3 F00B          	movff	prodl,btemp+10
  5752  001FC8  CFF4 F00C          	movff	prodh,btemp+11
  5753                           
  5754                           ;stkvar	_s @ sp[(0)+-2]
  5755  001FCC  0EFE               	movlw	-2
  5756  001FCE  50E3               	movf	plusw1,w,c
  5757  001FD0  260B               	addwf	(btemp+10)^0,f,c
  5758  001FD2  0EFF               	movlw	-1
  5759  001FD4  50E3               	movf	plusw1,w,c
  5760  001FD6  220C               	addwfc	(btemp+11)^0,f,c
  5761  001FD8  0E02               	movlw	2
  5762  001FDA  240B               	addwf	(btemp+10)^0,w,c
  5763  001FDC  6ED9               	movwf	fsr2l,c
  5764  001FDE  0E00               	movlw	0
  5765  001FE0  200C               	addwfc	(btemp+11)^0,w,c
  5766  001FE2  6EDA               	movwf	fsr2h,c
  5767  001FE4  EE00 F003          	lfsr	0,3
  5768  001FE8  50DE               	movf	postinc2,w,c
  5769  001FEA  26E9               	addwf	fsr0l,f,c
  5770  001FEC  50DD               	movf	postdec2,w,c
  5771  001FEE  22EA               	addwfc	fsr0h,f,c
  5772  001FF0  0E00               	movlw	0
  5773  001FF2  6EEF               	movwf	indf0,c
  5774  001FF4                     
  5775                           ;sync.c: 45:         s->sem_queue_out = (s->sem_queue_out + 1) % 5;
  5776                           ;stkvar	_s @ sp[(0)+-2]
  5777  001FF4  0EFE               	movlw	-2
  5778  001FF6  CFE3 F00B          	movff	plusw1,btemp+10
  5779  001FFA  0EFF               	movlw	-1
  5780  001FFC  CFE3 F00C          	movff	plusw1,btemp+11
  5781  002000  0E0D               	movlw	13
  5782  002002  240B               	addwf	(btemp+10)^0,w,c
  5783  002004  6ED9               	movwf	fsr2l,c
  5784  002006  0E00               	movlw	0
  5785  002008  200C               	addwfc	(btemp+11)^0,w,c
  5786  00200A  6EDA               	movwf	fsr2h,c
  5787  00200C  0E05               	movlw	5
  5788  00200E  6EE6               	movwf	postinc1,c
  5789  002010  0E00               	movlw	0
  5790  002012  6EE6               	movwf	postinc1,c
  5791                           
  5792                           ;stkvar	_s @ sp[(-2)+-2]
  5793  002014  0EFC               	movlw	-4
  5794  002016  CFE3 F00B          	movff	plusw1,btemp+10
  5795  00201A  0EFD               	movlw	-3
  5796  00201C  CFE3 F00C          	movff	plusw1,btemp+11
  5797  002020  0E0D               	movlw	13
  5798  002022  240B               	addwf	(btemp+10)^0,w,c
  5799  002024  6EE9               	movwf	fsr0l,c
  5800  002026  0E00               	movlw	0
  5801  002028  200C               	addwfc	(btemp+11)^0,w,c
  5802  00202A  6EEA               	movwf	fsr0h,c
  5803  00202C  50EF               	movf	indf0,w,c
  5804  00202E  6E0B               	movwf	(btemp+10)^0,c
  5805  002030  6A0C               	clrf	(btemp+11)^0,c
  5806  002032  0E01               	movlw	1
  5807  002034  260B               	addwf	(btemp+10)^0,f,c
  5808  002036  0E00               	movlw	0
  5809  002038  220C               	addwfc	(btemp+11)^0,f,c
  5810  00203A  C00B  FFE6         	movff	btemp+10,postinc1
  5811  00203E  C00C  FFE6         	movff	btemp+11,postinc1
  5812  002042  ECAB  F00C         	call	___awmod	;wreg free
  5813  002046  5001               	movf	btemp^0,w,c
  5814  002048  6EDF               	movwf	indf2,c
  5815  00204A                     l2392:
  5816                           
  5817                           ;sync.c: 48:     (INTCONbits.GIE = 1);
  5818  00204A  8EF2               	bsf	242,7,c	;volatile
  5819  00204C                     
  5820                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  5821  00204C  52E5               	movf	postdec1,f,c
  5822  00204E  52E5               	movf	postdec1,f,c
  5823  002050  0012               	return		;funcret
  5824  002052                     __end_of_sem_post:
  5825                           	callstack 0
  5826                           
  5827 ;; *************** function _task_battery *****************
  5828 ;; Defined at:
  5829 ;;		line 114 in file "user_app.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;		None
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;  type            1  [STACK] unsigned char 
  5834 ;;  bat             2  [STACK] unsigned short 
  5835 ;;  is_low          1  [STACK] unsigned char 
  5836 ;;  LOW_THRESHOL    2  [STACK] const unsigned short 
  5837 ;;  last_low        1  [STACK] unsigned char 
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  1  [STACK] void 
  5840 ;; Registers used:
  5841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  5842 ;; Tracked objects:
  5843 ;;		On entry : 0/0
  5844 ;;		On exit  : 0/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5847 ;;      Params:         0       0       0       0       0       0       0       0       0
  5848 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5850 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5851 ;;Total ram usage:        0 bytes
  5852 ;; Hardware stack levels used: 1
  5853 ;; Hardware stack levels required when called: 10
  5854 ;; This function calls:
  5855 ;;		_os_delay
  5856 ;;		_pipe_write_block
  5857 ;;		_read_adc_channel
  5858 ;; This function is called by:
  5859 ;;		_main
  5860 ;; This function uses a reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text39
  5864  001CA2                     __ptext39:
  5865                           	callstack 0
  5866  001CA2                     _task_battery:
  5867                           	callstack 0
  5868                           
  5869                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5870  001CA2  0E07               	movlw	7
  5871  001CA4  26E1               	addwf	fsr1l,f,c
  5872  001CA6  0E00               	movlw	0
  5873  001CA8  22E2               	addwfc	fsr1h,f,c
  5874  001CAA                     
  5875                           ;user_app.c: 116:     const uint16_t LOW_THRESHOLD = 300;
  5876  001CAA  0E2C               	movlw	44
  5877  001CAC  6E0B               	movwf	(btemp+10)^0,c
  5878  001CAE  0E01               	movlw	1
  5879  001CB0  6E0C               	movwf	(btemp+11)^0,c
  5880                           
  5881                           ;stkvar	_LOW_THRESHOLD @ sp[(-7)+4]
  5882  001CB2  0EFD               	movlw	-3
  5883  001CB4  C00B  FFE3         	movff	btemp+10,plusw1
  5884  001CB8  0EFE               	movlw	-2
  5885  001CBA  C00C  FFE3         	movff	btemp+11,plusw1
  5886  001CBE                     
  5887                           ;user_app.c: 117:     uint8_t last_low = 0;
  5888                           ;stkvar	_last_low @ sp[(-7)+6]
  5889  001CBE  0EFF               	movlw	-1
  5890  001CC0  6AE3               	clrf	plusw1,c
  5891  001CC2                     l2776:
  5892                           
  5893                           ;user_app.c: 120:         uint16_t bat = read_adc_channel(CHANNEL_2);
  5894  001CC2  0E02               	movlw	2
  5895  001CC4  6EE6               	movwf	postinc1,c
  5896  001CC6  ECC0  F014         	call	_read_adc_channel	;wreg free
  5897                           
  5898                           ;stkvar	_bat @ sp[(-7)+1]
  5899  001CCA  0EFA               	movlw	-6
  5900  001CCC  C001  FFE3         	movff	btemp,plusw1
  5901  001CD0  0EFB               	movlw	-5
  5902  001CD2  C002  FFE3         	movff	btemp+1,plusw1
  5903  001CD6                     
  5904                           ;user_app.c: 121:         uint8_t is_low = (bat < LOW_THRESHOLD);
  5905                           ;stkvar	_LOW_THRESHOLD @ sp[(-7)+4]
  5906  001CD6  0EFD               	movlw	-3
  5907  001CD8  CFE3 F00B          	movff	plusw1,btemp+10
  5908  001CDC  0EFE               	movlw	-2
  5909  001CDE  CFE3 F00C          	movff	plusw1,btemp+11
  5910                           
  5911                           ;stkvar	_bat @ sp[(-7)+1]
  5912  001CE2  0EFA               	movlw	-6
  5913  001CE4  CFE3 F009          	movff	plusw1,btemp+8
  5914  001CE8  0EFB               	movlw	-5
  5915  001CEA  CFE3 F00A          	movff	plusw1,btemp+9
  5916  001CEE  500B               	movf	(btemp+10)^0,w,c
  5917  001CF0  5C09               	subwf	(btemp+8)^0,w,c
  5918  001CF2  500C               	movf	(btemp+11)^0,w,c
  5919  001CF4  580A               	subwfb	(btemp+9)^0,w,c
  5920  001CF6  A0D8               	btfss	status,0,c
  5921  001CF8  EF80  F00E         	goto	u180_21
  5922  001CFC  EF84  F00E         	goto	u180_20
  5923  001D00                     u180_21:
  5924  001D00  6A0C               	clrf	(btemp+11)^0,c
  5925  001D02  2A0C               	incf	(btemp+11)^0,f,c
  5926  001D04  EF85  F00E         	goto	u181_28
  5927  001D08                     u180_20:
  5928  001D08  6A0C               	clrf	(btemp+11)^0,c
  5929  001D0A                     u181_28:
  5930                           
  5931                           ;stkvar	_is_low @ sp[(-7)+3]
  5932  001D0A  0EFC               	movlw	-4
  5933  001D0C  C00C  FFE3         	movff	btemp+11,plusw1
  5934  001D10                     
  5935                           ;user_app.c: 122:         if (is_low && !last_low) {
  5936                           ;stkvar	_is_low @ sp[(-7)+3]
  5937  001D10  0EFC               	movlw	-4
  5938  001D12  50E3               	movf	plusw1,w,c
  5939  001D14  B4D8               	btfsc	status,2,c
  5940  001D16  EF8F  F00E         	goto	u182_21
  5941  001D1A  EF91  F00E         	goto	u182_20
  5942  001D1E                     u182_21:
  5943  001D1E  EFB4  F00E         	goto	l2790
  5944  001D22                     u182_20:
  5945  001D22                     
  5946                           ;stkvar	_last_low @ sp[(-7)+6]
  5947  001D22  0EFF               	movlw	-1
  5948  001D24  50E3               	movf	plusw1,w,c
  5949  001D26  A4D8               	btfss	status,2,c
  5950  001D28  EF98  F00E         	goto	u183_21
  5951  001D2C  EF9A  F00E         	goto	u183_20
  5952  001D30                     u183_21:
  5953  001D30  EFB4  F00E         	goto	l2790
  5954  001D34                     u183_20:
  5955  001D34                     
  5956                           ;user_app.c: 123:             uint8_t type = MSG_BAT_LOW;
  5957                           ;stkvar	_type @ sp[(-7)+0]
  5958  001D34  0EF9               	movlw	-7
  5959  001D36  6AE3               	clrf	plusw1,c
  5960  001D38  82E3               	bsf	plusw1,1,c
  5961  001D3A                     
  5962                           ;user_app.c: 124:             pipe_write_block(&g_pipe, (const char*)&type, sizeof(type)
      +                          );
  5963  001D3A  0E01               	movlw	1
  5964  001D3C  6EE6               	movwf	postinc1,c
  5965                           
  5966                           ;stkvar	_type @ sp[(-8)+0]
  5967  001D3E  0EF8               	movlw	248
  5968  001D40  24E1               	addwf	fsr1l,w,c
  5969  001D42  6E01               	movwf	btemp^0,c
  5970  001D44  0EFF               	movlw	255
  5971  001D46  20E2               	addwfc	fsr1h,w,c
  5972  001D48  6E02               	movwf	(btemp+1)^0,c
  5973  001D4A  C001  FFE6         	movff	btemp,postinc1
  5974  001D4E  C002  FFE6         	movff	btemp+1,postinc1
  5975  001D52  0E60               	movlw	low _g_pipe
  5976  001D54  6EE6               	movwf	postinc1,c
  5977  001D56  0E00               	movlw	high _g_pipe
  5978  001D58  6EE6               	movwf	postinc1,c
  5979  001D5A  ECC3  F012         	call	_pipe_write_block	;wreg free
  5980  001D5E                     
  5981                           ;user_app.c: 125:             last_low = 1;
  5982                           ;stkvar	_last_low @ sp[(-7)+6]
  5983  001D5E  0EFF               	movlw	-1
  5984  001D60  6AE3               	clrf	plusw1,c
  5985  001D62  2AE3               	incf	plusw1,f,c
  5986                           
  5987                           ;user_app.c: 126:         } else if (!is_low) {
  5988  001D64  EFBF  F00E         	goto	l2794
  5989  001D68                     l2790:
  5990                           
  5991                           ;stkvar	_is_low @ sp[(-7)+3]
  5992  001D68  0EFC               	movlw	-4
  5993  001D6A  50E3               	movf	plusw1,w,c
  5994  001D6C  A4D8               	btfss	status,2,c
  5995  001D6E  EFBB  F00E         	goto	u184_21
  5996  001D72  EFBD  F00E         	goto	u184_20
  5997  001D76                     u184_21:
  5998  001D76  EFBF  F00E         	goto	l2794
  5999  001D7A                     u184_20:
  6000  001D7A                     
  6001                           ;user_app.c: 127:             last_low = 0;
  6002                           ;stkvar	_last_low @ sp[(-7)+6]
  6003  001D7A  0EFF               	movlw	-1
  6004  001D7C  6AE3               	clrf	plusw1,c
  6005  001D7E                     l2794:
  6006                           
  6007                           ;user_app.c: 129:         os_delay(20);
  6008  001D7E  0E14               	movlw	20
  6009  001D80  6EE6               	movwf	postinc1,c
  6010  001D82  ECE0  F007         	call	_os_delay	;wreg free
  6011  001D86  EF61  F00E         	goto	l2776
  6012                           
  6013                           ; _task_battery: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6014  001D8A  0EF9               	movlw	249
  6015  001D8C  26E1               	addwf	fsr1l,f,c
  6016  001D8E  0EFF               	movlw	255
  6017  001D90  22E2               	addwfc	fsr1h,f,c
  6018  001D92  0012               	return		;funcret
  6019  001D94                     __end_of_task_battery:
  6020                           	callstack 0
  6021                           
  6022 ;; *************** function _task_central *****************
  6023 ;; Defined at:
  6024 ;;		line 134 in file "user_app.c"
  6025 ;; Parameters:    Size  Location     Type
  6026 ;;		None
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;  next            4  [STACK] struct .
  6029 ;;  base            2    0        short 
  6030 ;;  m4              2  [STACK] short 
  6031 ;;  m3              2  [STACK] short 
  6032 ;;  m2              2  [STACK] short 
  6033 ;;  m1              2  [STACK] short 
  6034 ;;  a               1  [STACK] unsigned char 
  6035 ;;  g               1  [STACK] unsigned char 
  6036 ;;  smsg            5  [STACK] struct .
  6037 ;;  mtype           1  [STACK] unsigned char 
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  1  [STACK] void 
  6040 ;; Registers used:
  6041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6047 ;;      Params:         0       0       0       0       0       0       0       0       0
  6048 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6050 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6051 ;;Total ram usage:        0 bytes
  6052 ;; Hardware stack levels used: 1
  6053 ;; Hardware stack levels required when called: 10
  6054 ;; This function calls:
  6055 ;;		_mutex_lock
  6056 ;;		_mutex_unlock
  6057 ;;		_os_yield
  6058 ;;		_pipe_read_block
  6059 ;; This function is called by:
  6060 ;;		_main
  6061 ;; This function uses a reentrant model
  6062 ;;
  6063                           
  6064                           	psect	text40
  6065  000014                     __ptext40:
  6066                           	callstack 0
  6067  000014                     _task_central:
  6068                           	callstack 0
  6069                           
  6070                           ; autosize = 36, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6071  000014  0E24               	movlw	36
  6072  000016  26E1               	addwf	fsr1l,f,c
  6073  000018  0E00               	movlw	0
  6074  00001A  22E2               	addwfc	fsr1h,f,c
  6075  00001C                     l157:
  6076  00001C                     
  6077                           ;user_app.c: 142:         pipe_read_block(&g_pipe, (char*)&mtype, sizeof(mtype));
  6078  00001C  0E01               	movlw	1
  6079  00001E  6EE6               	movwf	postinc1,c
  6080                           
  6081                           ;stkvar	_mtype @ sp[(-37)+35]
  6082  000020  0EFE               	movlw	254
  6083  000022  24E1               	addwf	fsr1l,w,c
  6084  000024  6E01               	movwf	btemp^0,c
  6085  000026  0EFF               	movlw	255
  6086  000028  20E2               	addwfc	fsr1h,w,c
  6087  00002A  6E02               	movwf	(btemp+1)^0,c
  6088  00002C  C001  FFE6         	movff	btemp,postinc1
  6089  000030  C002  FFE6         	movff	btemp+1,postinc1
  6090  000034  0E60               	movlw	low _g_pipe
  6091  000036  6EE6               	movwf	postinc1,c
  6092  000038  0E00               	movlw	high _g_pipe
  6093  00003A  6EE6               	movwf	postinc1,c
  6094  00003C  ECF8  F012         	call	_pipe_read_block	;wreg free
  6095  000040                     
  6096                           ;user_app.c: 143:         if (mtype == MSG_SENSORS) {
  6097                           ;stkvar	_mtype @ sp[(-36)+35]
  6098  000040  0EFF               	movlw	-1
  6099  000042  04E3               	decf	plusw1,w,c
  6100  000044  A4D8               	btfss	status,2,c
  6101  000046  EF27  F000         	goto	u185_21
  6102  00004A  EF29  F000         	goto	u185_20
  6103  00004E                     u185_21:
  6104  00004E  EF05  F002         	goto	l2882
  6105  000052                     u185_20:
  6106  000052                     
  6107                           ;user_app.c: 146:             smsg.type = mtype;
  6108                           ;stkvar	_mtype @ sp[(-36)+35]
  6109                           ;stkvar	_smsg @ sp[(-36)+30]
  6110  000052  0EFF               	movlw	-1
  6111  000054  CFE3 F001          	movff	plusw1,btemp
  6112  000058  0EFA               	movlw	-6
  6113  00005A  C001  FFE3         	movff	btemp,plusw1
  6114  00005E                     
  6115                           ;user_app.c: 147:             pipe_read_block(&g_pipe, ((char*)&smsg) + 1, sizeof(smsg) 
      +                          - 1);
  6116  00005E  0E04               	movlw	4
  6117  000060  6EE6               	movwf	postinc1,c
  6118                           
  6119                           ;stkvar	_smsg @ sp[(-37)+30]
  6120  000062  0EFA               	movlw	250
  6121  000064  24E1               	addwf	fsr1l,w,c
  6122  000066  6E01               	movwf	btemp^0,c
  6123  000068  0EFF               	movlw	255
  6124  00006A  20E2               	addwfc	fsr1h,w,c
  6125  00006C  6E02               	movwf	(btemp+1)^0,c
  6126  00006E  C001  FFE6         	movff	btemp,postinc1
  6127  000072  C002  FFE6         	movff	btemp+1,postinc1
  6128  000076  0E60               	movlw	low _g_pipe
  6129  000078  6EE6               	movwf	postinc1,c
  6130  00007A  0E00               	movlw	high _g_pipe
  6131  00007C  6EE6               	movwf	postinc1,c
  6132  00007E  ECF8  F012         	call	_pipe_read_block	;wreg free
  6133  000082                     
  6134                           ;user_app.c: 150:             uint8_t g = (uint8_t)(smsg.gyro >> 2);
  6135                           ;stkvar	_smsg @ sp[(-36)+30]
  6136  000082  0EFB               	movlw	251
  6137  000084  24E1               	addwf	fsr1l,w,c
  6138  000086  6ED9               	movwf	fsr2l,c
  6139  000088  0EFF               	movlw	255
  6140  00008A  20E2               	addwfc	fsr1h,w,c
  6141  00008C  6EDA               	movwf	fsr2h,c
  6142  00008E  CFDE F00B          	movff	postinc2,btemp+10
  6143  000092  CFDD F00C          	movff	postdec2,btemp+11
  6144  000096  90D8               	bcf	status,0,c
  6145  000098  320C               	rrcf	(btemp+11)^0,f,c
  6146  00009A  320B               	rrcf	(btemp+10)^0,f,c
  6147  00009C  90D8               	bcf	status,0,c
  6148  00009E  320C               	rrcf	(btemp+11)^0,f,c
  6149  0000A0  320B               	rrcf	(btemp+10)^0,f,c
  6150                           
  6151                           ;stkvar	_g @ sp[(-36)+29]
  6152  0000A2  0EF9               	movlw	-7
  6153  0000A4  C00B  FFE3         	movff	btemp+10,plusw1
  6154  0000A8                     
  6155                           ;user_app.c: 151:             uint8_t a = (uint8_t)(smsg.accel >> 2);
  6156                           ;stkvar	_smsg @ sp[(-36)+30]
  6157  0000A8  0EFD               	movlw	253
  6158  0000AA  24E1               	addwf	fsr1l,w,c
  6159  0000AC  6ED9               	movwf	fsr2l,c
  6160  0000AE  0EFF               	movlw	255
  6161  0000B0  20E2               	addwfc	fsr1h,w,c
  6162  0000B2  6EDA               	movwf	fsr2h,c
  6163  0000B4  CFDE F00B          	movff	postinc2,btemp+10
  6164  0000B8  CFDD F00C          	movff	postdec2,btemp+11
  6165  0000BC  90D8               	bcf	status,0,c
  6166  0000BE  320C               	rrcf	(btemp+11)^0,f,c
  6167  0000C0  320B               	rrcf	(btemp+10)^0,f,c
  6168  0000C2  90D8               	bcf	status,0,c
  6169  0000C4  320C               	rrcf	(btemp+11)^0,f,c
  6170  0000C6  320B               	rrcf	(btemp+10)^0,f,c
  6171                           
  6172                           ;stkvar	_a @ sp[(-36)+28]
  6173  0000C8  0EF8               	movlw	-8
  6174  0000CA  C00B  FFE3         	movff	btemp+10,plusw1
  6175  0000CE                     
  6176                           ;user_app.c: 155:             int16_t m1 = base + (int16_t)g - (int16_t)a;
  6177                           ;stkvar	_g @ sp[(-36)+29]
  6178  0000CE  0EF9               	movlw	-7
  6179  0000D0  50E3               	movf	plusw1,w,c
  6180  0000D2  6E0B               	movwf	(btemp+10)^0,c
  6181  0000D4  6A0C               	clrf	(btemp+11)^0,c
  6182                           
  6183                           ;stkvar	_a @ sp[(-36)+28]
  6184  0000D6  0EF8               	movlw	-8
  6185  0000D8  50E3               	movf	plusw1,w,c
  6186  0000DA  5E0B               	subwf	(btemp+10)^0,f,c
  6187  0000DC  0E00               	movlw	0
  6188  0000DE  5A0C               	subwfb	(btemp+11)^0,f,c
  6189  0000E0  0E80               	movlw	128
  6190  0000E2  260B               	addwf	(btemp+10)^0,f,c
  6191  0000E4  0E00               	movlw	0
  6192  0000E6  220C               	addwfc	(btemp+11)^0,f,c
  6193                           
  6194                           ;stkvar	_m1 @ sp[(-36)+26]
  6195  0000E8  0EF6               	movlw	-10
  6196  0000EA  C00B  FFE3         	movff	btemp+10,plusw1
  6197  0000EE  0EF7               	movlw	-9
  6198  0000F0  C00C  FFE3         	movff	btemp+11,plusw1
  6199  0000F4                     
  6200                           ;user_app.c: 156:             int16_t m2 = base - (int16_t)g - (int16_t)a;
  6201                           ;stkvar	_g @ sp[(-36)+29]
  6202  0000F4  0EF9               	movlw	-7
  6203  0000F6  50E3               	movf	plusw1,w,c
  6204  0000F8  6E0B               	movwf	(btemp+10)^0,c
  6205  0000FA  6A0C               	clrf	(btemp+11)^0,c
  6206  0000FC  1E0B               	comf	(btemp+10)^0,f,c
  6207  0000FE  1E0C               	comf	(btemp+11)^0,f,c
  6208  000100  4A0B               	infsnz	(btemp+10)^0,f,c
  6209  000102  2A0C               	incf	(btemp+11)^0,f,c
  6210                           
  6211                           ;stkvar	_a @ sp[(-36)+28]
  6212  000104  0EF8               	movlw	-8
  6213  000106  50E3               	movf	plusw1,w,c
  6214  000108  5E0B               	subwf	(btemp+10)^0,f,c
  6215  00010A  0E00               	movlw	0
  6216  00010C  5A0C               	subwfb	(btemp+11)^0,f,c
  6217  00010E  0E80               	movlw	128
  6218  000110  260B               	addwf	(btemp+10)^0,f,c
  6219  000112  0E00               	movlw	0
  6220  000114  220C               	addwfc	(btemp+11)^0,f,c
  6221                           
  6222                           ;stkvar	_m2 @ sp[(-36)+24]
  6223  000116  0EF4               	movlw	-12
  6224  000118  C00B  FFE3         	movff	btemp+10,plusw1
  6225  00011C  0EF5               	movlw	-11
  6226  00011E  C00C  FFE3         	movff	btemp+11,plusw1
  6227  000122                     
  6228                           ;user_app.c: 157:             int16_t m3 = base + (int16_t)g + (int16_t)a;
  6229                           ;stkvar	_g @ sp[(-36)+29]
  6230  000122  0EF9               	movlw	-7
  6231  000124  50E3               	movf	plusw1,w,c
  6232  000126  6E0B               	movwf	(btemp+10)^0,c
  6233  000128  6A0C               	clrf	(btemp+11)^0,c
  6234                           
  6235                           ;stkvar	_a @ sp[(-36)+28]
  6236  00012A  0EF8               	movlw	-8
  6237  00012C  50E3               	movf	plusw1,w,c
  6238  00012E  260B               	addwf	(btemp+10)^0,f,c
  6239  000130  0E00               	movlw	0
  6240  000132  220C               	addwfc	(btemp+11)^0,f,c
  6241  000134  0E80               	movlw	128
  6242  000136  260B               	addwf	(btemp+10)^0,f,c
  6243  000138  0E00               	movlw	0
  6244  00013A  220C               	addwfc	(btemp+11)^0,f,c
  6245                           
  6246                           ;stkvar	_m3 @ sp[(-36)+22]
  6247  00013C  0EF2               	movlw	-14
  6248  00013E  C00B  FFE3         	movff	btemp+10,plusw1
  6249  000142  0EF3               	movlw	-13
  6250  000144  C00C  FFE3         	movff	btemp+11,plusw1
  6251  000148                     
  6252                           ;user_app.c: 158:             int16_t m4 = base - (int16_t)g + (int16_t)a;
  6253                           ;stkvar	_a @ sp[(-36)+28]
  6254  000148  0EF8               	movlw	-8
  6255  00014A  50E3               	movf	plusw1,w,c
  6256  00014C  6E0B               	movwf	(btemp+10)^0,c
  6257  00014E  6A0C               	clrf	(btemp+11)^0,c
  6258                           
  6259                           ;stkvar	_g @ sp[(-36)+29]
  6260  000150  0EF9               	movlw	-7
  6261  000152  50E3               	movf	plusw1,w,c
  6262  000154  5E0B               	subwf	(btemp+10)^0,f,c
  6263  000156  0E00               	movlw	0
  6264  000158  5A0C               	subwfb	(btemp+11)^0,f,c
  6265  00015A  0E80               	movlw	128
  6266  00015C  260B               	addwf	(btemp+10)^0,f,c
  6267  00015E  0E00               	movlw	0
  6268  000160  220C               	addwfc	(btemp+11)^0,f,c
  6269                           
  6270                           ;stkvar	_m4 @ sp[(-36)+20]
  6271  000162  0EF0               	movlw	-16
  6272  000164  C00B  FFE3         	movff	btemp+10,plusw1
  6273  000168  0EF1               	movlw	-15
  6274  00016A  C00C  FFE3         	movff	btemp+11,plusw1
  6275  00016E                     
  6276                           ;user_app.c: 162:             motor_speeds_t next = {
  6277  00016E  C025  F009         	movff	task_central@F3734,btemp+8
  6278  000172  C026  F00A         	movff	task_central@F3734+1,btemp+9
  6279  000176  C027  F00B         	movff	task_central@F3734+2,btemp+10
  6280  00017A  C028  F00C         	movff	task_central@F3734+3,btemp+11
  6281                           
  6282                           ;stkvar	_next @ sp[(-36)+16]
  6283  00017E  0EEC               	movlw	-20
  6284  000180  C009  FFE3         	movff	btemp+8,plusw1
  6285  000184  0EED               	movlw	-19
  6286  000186  C00A  FFE3         	movff	btemp+9,plusw1
  6287  00018A  0EEE               	movlw	-18
  6288  00018C  C00B  FFE3         	movff	btemp+10,plusw1
  6289  000190  0EEF               	movlw	-17
  6290  000192  C00C  FFE3         	movff	btemp+11,plusw1
  6291  000196                     
  6292                           ;stkvar	_m1 @ sp[(-36)+26]
  6293  000196  0EF7               	movlw	-9
  6294  000198  BEE3               	btfsc	plusw1,7,c
  6295  00019A  EFD1  F000         	goto	u186_21
  6296  00019E  EFD3  F000         	goto	u186_20
  6297  0001A2                     u186_21:
  6298  0001A2  EF06  F001         	goto	l2830
  6299  0001A6                     u186_20:
  6300  0001A6                     
  6301                           ;stkvar	_m1 @ sp[(-36)+26]
  6302  0001A6  0EF7               	movlw	-9
  6303  0001A8  BEE3               	btfsc	plusw1,7,c
  6304  0001AA  EFE0  F000         	goto	u187_20
  6305  0001AE  0EF7               	movlw	-9
  6306  0001B0  04E3               	decf	plusw1,w,c
  6307  0001B2  B0D8               	btfsc	status,0,c
  6308  0001B4  EFDE  F000         	goto	u187_21
  6309  0001B8  EFE0  F000         	goto	u187_20
  6310  0001BC                     u187_21:
  6311  0001BC  EFEE  F000         	goto	l2826
  6312  0001C0                     u187_20:
  6313  0001C0                     
  6314                           ;stkvar	_m1 @ sp[(-36)+26]
  6315                           ;stkvar	_task_central$741 @ sp[(-36)+12]
  6316  0001C0  0EF6               	movlw	-10
  6317  0001C2  CFE3 F001          	movff	plusw1,btemp
  6318  0001C6  0EE8               	movlw	-24
  6319  0001C8  C001  FFE3         	movff	btemp,plusw1
  6320  0001CC  0EF7               	movlw	-9
  6321  0001CE  CFE3 F001          	movff	plusw1,btemp
  6322  0001D2  0EE9               	movlw	-23
  6323  0001D4  C001  FFE3         	movff	btemp,plusw1
  6324  0001D8  EFF8  F000         	goto	l2828
  6325  0001DC                     l2826:
  6326  0001DC  0EFF               	movlw	255
  6327  0001DE  6E0B               	movwf	(btemp+10)^0,c
  6328  0001E0  0E00               	movlw	0
  6329  0001E2  6E0C               	movwf	(btemp+11)^0,c
  6330                           
  6331                           ;stkvar	_task_central$741 @ sp[(-36)+12]
  6332  0001E4  0EE8               	movlw	-24
  6333  0001E6  C00B  FFE3         	movff	btemp+10,plusw1
  6334  0001EA  0EE9               	movlw	-23
  6335  0001EC  C00C  FFE3         	movff	btemp+11,plusw1
  6336  0001F0                     l2828:
  6337                           
  6338                           ;stkvar	_task_central$741 @ sp[(-36)+12]
  6339                           ;stkvar	_task_central$740 @ sp[(-36)+14]
  6340  0001F0  0EE8               	movlw	-24
  6341  0001F2  CFE3 F001          	movff	plusw1,btemp
  6342  0001F6  0EEA               	movlw	-22
  6343  0001F8  C001  FFE3         	movff	btemp,plusw1
  6344  0001FC  0EE9               	movlw	-23
  6345  0001FE  CFE3 F001          	movff	plusw1,btemp
  6346  000202  0EEB               	movlw	-21
  6347  000204  C001  FFE3         	movff	btemp,plusw1
  6348  000208  EF0A  F001         	goto	l2832
  6349  00020C                     l2830:
  6350                           
  6351                           ;stkvar	_task_central$740 @ sp[(-36)+14]
  6352  00020C  0EEA               	movlw	-22
  6353  00020E  6AE3               	clrf	plusw1,c
  6354  000210  0EEB               	movlw	-21
  6355  000212  6AE3               	clrf	plusw1,c
  6356  000214                     l2832:
  6357                           
  6358                           ;stkvar	_task_central$740 @ sp[(-36)+14]
  6359                           ;stkvar	_next @ sp[(-36)+16]
  6360  000214  0EEA               	movlw	-22
  6361  000216  CFE3 F001          	movff	plusw1,btemp
  6362  00021A  0EEC               	movlw	-20
  6363  00021C  C001  FFE3         	movff	btemp,plusw1
  6364  000220                     
  6365                           ;stkvar	_m2 @ sp[(-36)+24]
  6366  000220  0EF5               	movlw	-11
  6367  000222  BEE3               	btfsc	plusw1,7,c
  6368  000224  EF16  F001         	goto	u188_21
  6369  000228  EF18  F001         	goto	u188_20
  6370  00022C                     u188_21:
  6371  00022C  EF4B  F001         	goto	l2844
  6372  000230                     u188_20:
  6373  000230                     
  6374                           ;stkvar	_m2 @ sp[(-36)+24]
  6375  000230  0EF5               	movlw	-11
  6376  000232  BEE3               	btfsc	plusw1,7,c
  6377  000234  EF25  F001         	goto	u189_20
  6378  000238  0EF5               	movlw	-11
  6379  00023A  04E3               	decf	plusw1,w,c
  6380  00023C  B0D8               	btfsc	status,0,c
  6381  00023E  EF23  F001         	goto	u189_21
  6382  000242  EF25  F001         	goto	u189_20
  6383  000246                     u189_21:
  6384  000246  EF33  F001         	goto	l2840
  6385  00024A                     u189_20:
  6386  00024A                     
  6387                           ;stkvar	_m2 @ sp[(-36)+24]
  6388                           ;stkvar	_task_central$743 @ sp[(-36)+8]
  6389  00024A  0EF4               	movlw	-12
  6390  00024C  CFE3 F001          	movff	plusw1,btemp
  6391  000250  0EE4               	movlw	-28
  6392  000252  C001  FFE3         	movff	btemp,plusw1
  6393  000256  0EF5               	movlw	-11
  6394  000258  CFE3 F001          	movff	plusw1,btemp
  6395  00025C  0EE5               	movlw	-27
  6396  00025E  C001  FFE3         	movff	btemp,plusw1
  6397  000262  EF3D  F001         	goto	l2842
  6398  000266                     l2840:
  6399  000266  0EFF               	movlw	255
  6400  000268  6E0B               	movwf	(btemp+10)^0,c
  6401  00026A  0E00               	movlw	0
  6402  00026C  6E0C               	movwf	(btemp+11)^0,c
  6403                           
  6404                           ;stkvar	_task_central$743 @ sp[(-36)+8]
  6405  00026E  0EE4               	movlw	-28
  6406  000270  C00B  FFE3         	movff	btemp+10,plusw1
  6407  000274  0EE5               	movlw	-27
  6408  000276  C00C  FFE3         	movff	btemp+11,plusw1
  6409  00027A                     l2842:
  6410                           
  6411                           ;stkvar	_task_central$743 @ sp[(-36)+8]
  6412                           ;stkvar	_task_central$742 @ sp[(-36)+10]
  6413  00027A  0EE4               	movlw	-28
  6414  00027C  CFE3 F001          	movff	plusw1,btemp
  6415  000280  0EE6               	movlw	-26
  6416  000282  C001  FFE3         	movff	btemp,plusw1
  6417  000286  0EE5               	movlw	-27
  6418  000288  CFE3 F001          	movff	plusw1,btemp
  6419  00028C  0EE7               	movlw	-25
  6420  00028E  C001  FFE3         	movff	btemp,plusw1
  6421  000292  EF4F  F001         	goto	l2846
  6422  000296                     l2844:
  6423                           
  6424                           ;stkvar	_task_central$742 @ sp[(-36)+10]
  6425  000296  0EE6               	movlw	-26
  6426  000298  6AE3               	clrf	plusw1,c
  6427  00029A  0EE7               	movlw	-25
  6428  00029C  6AE3               	clrf	plusw1,c
  6429  00029E                     l2846:
  6430                           
  6431                           ;stkvar	_task_central$742 @ sp[(-36)+10]
  6432                           ;stkvar	_next @ sp[(-36)+16]
  6433  00029E  0EED               	movlw	237
  6434  0002A0  24E1               	addwf	fsr1l,w,c
  6435  0002A2  6ED9               	movwf	fsr2l,c
  6436  0002A4  0EFF               	movlw	255
  6437  0002A6  20E2               	addwfc	fsr1h,w,c
  6438  0002A8  6EDA               	movwf	fsr2h,c
  6439  0002AA  0EE6               	movlw	-26
  6440  0002AC  CFE3 FFDF          	movff	plusw1,indf2
  6441  0002B0                     
  6442                           ;stkvar	_m3 @ sp[(-36)+22]
  6443  0002B0  0EF3               	movlw	-13
  6444  0002B2  BEE3               	btfsc	plusw1,7,c
  6445  0002B4  EF5E  F001         	goto	u190_21
  6446  0002B8  EF60  F001         	goto	u190_20
  6447  0002BC                     u190_21:
  6448  0002BC  EF93  F001         	goto	l2858
  6449  0002C0                     u190_20:
  6450  0002C0                     
  6451                           ;stkvar	_m3 @ sp[(-36)+22]
  6452  0002C0  0EF3               	movlw	-13
  6453  0002C2  BEE3               	btfsc	plusw1,7,c
  6454  0002C4  EF6D  F001         	goto	u191_20
  6455  0002C8  0EF3               	movlw	-13
  6456  0002CA  04E3               	decf	plusw1,w,c
  6457  0002CC  B0D8               	btfsc	status,0,c
  6458  0002CE  EF6B  F001         	goto	u191_21
  6459  0002D2  EF6D  F001         	goto	u191_20
  6460  0002D6                     u191_21:
  6461  0002D6  EF7B  F001         	goto	l2854
  6462  0002DA                     u191_20:
  6463  0002DA                     
  6464                           ;stkvar	_m3 @ sp[(-36)+22]
  6465                           ;stkvar	_task_central$745 @ sp[(-36)+4]
  6466  0002DA  0EF2               	movlw	-14
  6467  0002DC  CFE3 F001          	movff	plusw1,btemp
  6468  0002E0  0EE0               	movlw	-32
  6469  0002E2  C001  FFE3         	movff	btemp,plusw1
  6470  0002E6  0EF3               	movlw	-13
  6471  0002E8  CFE3 F001          	movff	plusw1,btemp
  6472  0002EC  0EE1               	movlw	-31
  6473  0002EE  C001  FFE3         	movff	btemp,plusw1
  6474  0002F2  EF85  F001         	goto	l2856
  6475  0002F6                     l2854:
  6476  0002F6  0EFF               	movlw	255
  6477  0002F8  6E0B               	movwf	(btemp+10)^0,c
  6478  0002FA  0E00               	movlw	0
  6479  0002FC  6E0C               	movwf	(btemp+11)^0,c
  6480                           
  6481                           ;stkvar	_task_central$745 @ sp[(-36)+4]
  6482  0002FE  0EE0               	movlw	-32
  6483  000300  C00B  FFE3         	movff	btemp+10,plusw1
  6484  000304  0EE1               	movlw	-31
  6485  000306  C00C  FFE3         	movff	btemp+11,plusw1
  6486  00030A                     l2856:
  6487                           
  6488                           ;stkvar	_task_central$745 @ sp[(-36)+4]
  6489                           ;stkvar	_task_central$744 @ sp[(-36)+6]
  6490  00030A  0EE0               	movlw	-32
  6491  00030C  CFE3 F001          	movff	plusw1,btemp
  6492  000310  0EE2               	movlw	-30
  6493  000312  C001  FFE3         	movff	btemp,plusw1
  6494  000316  0EE1               	movlw	-31
  6495  000318  CFE3 F001          	movff	plusw1,btemp
  6496  00031C  0EE3               	movlw	-29
  6497  00031E  C001  FFE3         	movff	btemp,plusw1
  6498  000322  EF97  F001         	goto	l2860
  6499  000326                     l2858:
  6500                           
  6501                           ;stkvar	_task_central$744 @ sp[(-36)+6]
  6502  000326  0EE2               	movlw	-30
  6503  000328  6AE3               	clrf	plusw1,c
  6504  00032A  0EE3               	movlw	-29
  6505  00032C  6AE3               	clrf	plusw1,c
  6506  00032E                     l2860:
  6507                           
  6508                           ;stkvar	_task_central$744 @ sp[(-36)+6]
  6509                           ;stkvar	_next @ sp[(-36)+16]
  6510  00032E  0EEE               	movlw	238
  6511  000330  24E1               	addwf	fsr1l,w,c
  6512  000332  6ED9               	movwf	fsr2l,c
  6513  000334  0EFF               	movlw	255
  6514  000336  20E2               	addwfc	fsr1h,w,c
  6515  000338  6EDA               	movwf	fsr2h,c
  6516  00033A  0EE2               	movlw	-30
  6517  00033C  CFE3 FFDF          	movff	plusw1,indf2
  6518  000340                     
  6519                           ;stkvar	_m4 @ sp[(-36)+20]
  6520  000340  0EF1               	movlw	-15
  6521  000342  BEE3               	btfsc	plusw1,7,c
  6522  000344  EFA6  F001         	goto	u192_21
  6523  000348  EFA8  F001         	goto	u192_20
  6524  00034C                     u192_21:
  6525  00034C  EFDB  F001         	goto	l2872
  6526  000350                     u192_20:
  6527  000350                     
  6528                           ;stkvar	_m4 @ sp[(-36)+20]
  6529  000350  0EF1               	movlw	-15
  6530  000352  BEE3               	btfsc	plusw1,7,c
  6531  000354  EFB5  F001         	goto	u193_20
  6532  000358  0EF1               	movlw	-15
  6533  00035A  04E3               	decf	plusw1,w,c
  6534  00035C  B0D8               	btfsc	status,0,c
  6535  00035E  EFB3  F001         	goto	u193_21
  6536  000362  EFB5  F001         	goto	u193_20
  6537  000366                     u193_21:
  6538  000366  EFC3  F001         	goto	l2868
  6539  00036A                     u193_20:
  6540  00036A                     
  6541                           ;stkvar	_m4 @ sp[(-36)+20]
  6542                           ;stkvar	_task_central$747 @ sp[(-36)+0]
  6543  00036A  0EF0               	movlw	-16
  6544  00036C  CFE3 F001          	movff	plusw1,btemp
  6545  000370  0EDC               	movlw	-36
  6546  000372  C001  FFE3         	movff	btemp,plusw1
  6547  000376  0EF1               	movlw	-15
  6548  000378  CFE3 F001          	movff	plusw1,btemp
  6549  00037C  0EDD               	movlw	-35
  6550  00037E  C001  FFE3         	movff	btemp,plusw1
  6551  000382  EFCD  F001         	goto	l2870
  6552  000386                     l2868:
  6553  000386  0EFF               	movlw	255
  6554  000388  6E0B               	movwf	(btemp+10)^0,c
  6555  00038A  0E00               	movlw	0
  6556  00038C  6E0C               	movwf	(btemp+11)^0,c
  6557                           
  6558                           ;stkvar	_task_central$747 @ sp[(-36)+0]
  6559  00038E  0EDC               	movlw	-36
  6560  000390  C00B  FFE3         	movff	btemp+10,plusw1
  6561  000394  0EDD               	movlw	-35
  6562  000396  C00C  FFE3         	movff	btemp+11,plusw1
  6563  00039A                     l2870:
  6564                           
  6565                           ;stkvar	_task_central$747 @ sp[(-36)+0]
  6566                           ;stkvar	_task_central$746 @ sp[(-36)+2]
  6567  00039A  0EDC               	movlw	-36
  6568  00039C  CFE3 F001          	movff	plusw1,btemp
  6569  0003A0  0EDE               	movlw	-34
  6570  0003A2  C001  FFE3         	movff	btemp,plusw1
  6571  0003A6  0EDD               	movlw	-35
  6572  0003A8  CFE3 F001          	movff	plusw1,btemp
  6573  0003AC  0EDF               	movlw	-33
  6574  0003AE  C001  FFE3         	movff	btemp,plusw1
  6575  0003B2  EFDF  F001         	goto	l2874
  6576  0003B6                     l2872:
  6577                           
  6578                           ;stkvar	_task_central$746 @ sp[(-36)+2]
  6579  0003B6  0EDE               	movlw	-34
  6580  0003B8  6AE3               	clrf	plusw1,c
  6581  0003BA  0EDF               	movlw	-33
  6582  0003BC  6AE3               	clrf	plusw1,c
  6583  0003BE                     l2874:
  6584                           
  6585                           ;stkvar	_task_central$746 @ sp[(-36)+2]
  6586                           ;stkvar	_next @ sp[(-36)+16]
  6587  0003BE  0EEF               	movlw	239
  6588  0003C0  24E1               	addwf	fsr1l,w,c
  6589  0003C2  6ED9               	movwf	fsr2l,c
  6590  0003C4  0EFF               	movlw	255
  6591  0003C6  20E2               	addwfc	fsr1h,w,c
  6592  0003C8  6EDA               	movwf	fsr2h,c
  6593  0003CA  0EDE               	movlw	-34
  6594  0003CC  CFE3 FFDF          	movff	plusw1,indf2
  6595  0003D0                     
  6596                           ;user_app.c: 166:             mutex_lock(&g_speeds_mutex);
  6597  0003D0  0E30               	movlw	low _g_speeds_mutex
  6598  0003D2  6EE6               	movwf	postinc1,c
  6599  0003D4  0E00               	movlw	high _g_speeds_mutex
  6600  0003D6  6EE6               	movwf	postinc1,c
  6601  0003D8  EC3A  F002         	call	_mutex_lock	;wreg free
  6602  0003DC                     
  6603                           ;user_app.c: 167:             g_speeds = next;
  6604                           ;stkvar	_next @ sp[(-36)+16]
  6605  0003DC  50E1               	movf	fsr1l,w,c
  6606  0003DE  0FEC               	addlw	-20
  6607  0003E0  6ED9               	movwf	fsr2l,c
  6608  0003E2  50E2               	movf	fsr1h,w,c
  6609  0003E4  6EDA               	movwf	fsr2h,c
  6610  0003E6  0EFF               	movlw	255
  6611  0003E8  22DA               	addwfc	fsr2h,f,c
  6612  0003EA  CFDE F029          	movff	postinc2,_g_speeds
  6613  0003EE  CFDE F02A          	movff	postinc2,_g_speeds+1
  6614  0003F2  CFDE F02B          	movff	postinc2,_g_speeds+2
  6615  0003F6  CFDE F02C          	movff	postinc2,_g_speeds+3
  6616  0003FA                     l2880:
  6617                           
  6618                           ;user_app.c: 168:             mutex_unlock(&g_speeds_mutex);
  6619  0003FA  0E30               	movlw	low _g_speeds_mutex
  6620  0003FC  6EE6               	movwf	postinc1,c
  6621  0003FE  0E00               	movlw	high _g_speeds_mutex
  6622  000400  6EE6               	movwf	postinc1,c
  6623  000402  EC08  F00B         	call	_mutex_unlock	;wreg free
  6624                           
  6625                           ;user_app.c: 169:         } else if (mtype == MSG_BAT_LOW) {
  6626  000406  EF21  F002         	goto	l2890
  6627  00040A                     l2882:
  6628                           
  6629                           ;stkvar	_mtype @ sp[(-36)+35]
  6630  00040A  0EFF               	movlw	-1
  6631  00040C  CFE3 F001          	movff	plusw1,btemp
  6632  000410  0E02               	movlw	2
  6633  000412  1801               	xorwf	btemp^0,w,c
  6634  000414  A4D8               	btfss	status,2,c
  6635  000416  EF0F  F002         	goto	u194_21
  6636  00041A  EF11  F002         	goto	u194_20
  6637  00041E                     u194_21:
  6638  00041E  EF21  F002         	goto	l2890
  6639  000422                     u194_20:
  6640  000422                     
  6641                           ;user_app.c: 171:             mutex_lock(&g_speeds_mutex);
  6642  000422  0E30               	movlw	low _g_speeds_mutex
  6643  000424  6EE6               	movwf	postinc1,c
  6644  000426  0E00               	movlw	high _g_speeds_mutex
  6645  000428  6EE6               	movwf	postinc1,c
  6646  00042A  EC3A  F002         	call	_mutex_lock	;wreg free
  6647  00042E                     
  6648                           ;user_app.c: 172:             g_speeds.m1 = g_speeds.m2 = g_speeds.m3 = g_speeds.m4 = 60
      +                          ;
  6649  00042E  0E3C               	movlw	60
  6650  000430  6E2C               	movwf	(_g_speeds+3)^0,c
  6651  000432  C02C  F02B         	movff	_g_speeds+3,_g_speeds+2
  6652  000436  C02B  F02A         	movff	_g_speeds+2,_g_speeds+1
  6653  00043A  C02A  F029         	movff	_g_speeds+1,_g_speeds
  6654  00043E  EFFD  F001         	goto	l2880
  6655  000442                     l2890:
  6656                           
  6657                           ;user_app.c: 179:         LATDbits.LD0 = ~PORTDbits.RD0;
  6658  000442  B083               	btfsc	131,0,c	;volatile
  6659  000444  EF26  F002         	goto	u195_21
  6660  000448  EF29  F002         	goto	u195_20
  6661  00044C                     u195_21:
  6662  00044C  0E01               	movlw	1
  6663  00044E  EF2A  F002         	goto	u195_26
  6664  000452                     u195_20:
  6665  000452  0E00               	movlw	0
  6666  000454                     u195_26:
  6667  000454  0AFF               	xorlw	255
  6668  000456  6E0C               	movwf	(btemp+11)^0,c
  6669  000458  508C               	movf	140,w,c	;volatile
  6670  00045A  180C               	xorwf	(btemp+11)^0,w,c
  6671  00045C  0BFE               	andlw	-2
  6672  00045E  180C               	xorwf	(btemp+11)^0,w,c
  6673  000460  6E8C               	movwf	140,c	;volatile
  6674  000462                     
  6675                           ;user_app.c: 180:         os_yield();
  6676  000462  ECFF  F008         	call	_os_yield	;wreg free
  6677  000466  EF0E  F000         	goto	l157
  6678                           
  6679                           ; _task_central: autosize = 36, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6680  00046A  0EDC               	movlw	220
  6681  00046C  26E1               	addwf	fsr1l,f,c
  6682  00046E  0EFF               	movlw	255
  6683  000470  22E2               	addwfc	fsr1h,f,c
  6684  000472  0012               	return		;funcret
  6685  000474                     __end_of_task_central:
  6686                           	callstack 0
  6687                           
  6688 ;; *************** function _pipe_read_block *****************
  6689 ;; Defined at:
  6690 ;;		line 66 in file "pipe.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;  p               2  [STACK] PTR struct pipe
  6693 ;;		 -> g_pipe(33), 
  6694 ;;  data            2  [STACK] PTR unsigned char 
  6695 ;;		 -> smsg(5), mtype(1), 
  6696 ;;  len             1  [STACK] unsigned char 
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;  i               1  [STACK] unsigned char 
  6699 ;; Return value:  Size  Location     Type
  6700 ;;                  1  [STACK] void 
  6701 ;; Registers used:
  6702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6708 ;;      Params:         0       0       0       0       0       0       0       0       0
  6709 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6710 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6711 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6712 ;;Total ram usage:        0 bytes
  6713 ;; Hardware stack levels used: 1
  6714 ;; Hardware stack levels required when called: 9
  6715 ;; This function calls:
  6716 ;;		_read_pipe
  6717 ;; This function is called by:
  6718 ;;		_task_central
  6719 ;; This function uses a reentrant model
  6720 ;;
  6721                           
  6722                           	psect	text41
  6723  0025F0                     __ptext41:
  6724                           	callstack 0
  6725  0025F0                     _pipe_read_block:
  6726                           	callstack 0
  6727                           
  6728                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6729  0025F0  52E6               	movf	postinc1,f,c
  6730  0025F2                     
  6731                           ;pipe.c: 66: void pipe_read_block(pipe_t *p, char *data, uint8_t len);pipe.c: 67: {;pipe
      +                          .c: 68:     for (uint8_t i = 0; i < len; i++) {
  6732                           ;stkvar	_i @ sp[(-1)+0]
  6733  0025F2  0EFF               	movlw	-1
  6734  0025F4  6AE3               	clrf	plusw1,c
  6735  0025F6  EF14  F013         	goto	l2694
  6736  0025FA                     l2690:
  6737                           
  6738                           ;pipe.c: 69:         read_pipe(p, &data[i]);
  6739                           ;stkvar	_i @ sp[(-1)+0]
  6740  0025FA  0EFF               	movlw	-1
  6741  0025FC  50E3               	movf	plusw1,w,c
  6742  0025FE  6E0B               	movwf	(btemp+10)^0,c
  6743  002600  6A0C               	clrf	(btemp+11)^0,c
  6744                           
  6745                           ;stkvar	_data @ sp[(-1)+-4]
  6746  002602  0EFB               	movlw	-5
  6747  002604  50E3               	movf	plusw1,w,c
  6748  002606  260B               	addwf	(btemp+10)^0,f,c
  6749  002608  0EFC               	movlw	-4
  6750  00260A  50E3               	movf	plusw1,w,c
  6751  00260C  220C               	addwfc	(btemp+11)^0,f,c
  6752  00260E  C00B  FFE6         	movff	btemp+10,postinc1
  6753  002612  C00C  FFE6         	movff	btemp+11,postinc1
  6754                           
  6755                           ;stkvar	_p @ sp[(-3)+-2]
  6756  002616  0EFB               	movlw	-5
  6757  002618  CFE3 FFE6          	movff	plusw1,postinc1
  6758  00261C  CFE3 FFE6          	movff	plusw1,postinc1
  6759  002620  ECCA  F00E         	call	_read_pipe	;wreg free
  6760  002624                     
  6761                           ;pipe.c: 70:     }
  6762                           ;stkvar	_i @ sp[(-1)+0]
  6763  002624  0EFF               	movlw	-1
  6764  002626  2AE3               	incf	plusw1,f,c
  6765  002628                     l2694:
  6766                           
  6767                           ;stkvar	_len @ sp[(-1)+-5]
  6768                           ;stkvar	_i @ sp[(-1)+0]
  6769  002628  50E1               	movf	fsr1l,w,c
  6770  00262A  0FFF               	addlw	-1
  6771  00262C  6ED9               	movwf	fsr2l,c
  6772  00262E  50E2               	movf	fsr1h,w,c
  6773  002630  6EDA               	movwf	fsr2h,c
  6774  002632  0EFF               	movlw	255
  6775  002634  22DA               	addwfc	fsr2h,f,c
  6776  002636  0EFA               	movlw	-6
  6777  002638  50E3               	movf	plusw1,w,c
  6778  00263A  5CDE               	subwf	postinc2,w,c
  6779  00263C  A0D8               	btfss	status,0,c
  6780  00263E  EF23  F013         	goto	u173_21
  6781  002642  EF25  F013         	goto	u173_20
  6782  002646                     u173_21:
  6783  002646  EFFD  F012         	goto	l2690
  6784  00264A                     u173_20:
  6785  00264A                     
  6786                           ; _pipe_read_block: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          5, argsize = 5, vargsize = 0
  6787  00264A  0EFA               	movlw	250
  6788  00264C  26E1               	addwf	fsr1l,f,c
  6789  00264E  0EFF               	movlw	255
  6790  002650  22E2               	addwfc	fsr1h,f,c
  6791  002652  0012               	return		;funcret
  6792  002654                     __end_of_pipe_read_block:
  6793                           	callstack 0
  6794                           
  6795 ;; *************** function _read_pipe *****************
  6796 ;; Defined at:
  6797 ;;		line 27 in file "pipe.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;  p               2  [STACK] PTR struct pipe
  6800 ;;		 -> g_pipe(33), 
  6801 ;;  buffer          2  [STACK] PTR unsigned char 
  6802 ;;		 -> smsg(5), mtype(1), 
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;		None
  6805 ;; Return value:  Size  Location     Type
  6806 ;;                  1  [STACK] void 
  6807 ;; Registers used:
  6808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6814 ;;      Params:         0       0       0       0       0       0       0       0       0
  6815 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6816 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6817 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6818 ;;Total ram usage:        0 bytes
  6819 ;; Hardware stack levels used: 1
  6820 ;; Hardware stack levels required when called: 8
  6821 ;; This function calls:
  6822 ;;		___awmod
  6823 ;;		_sem_post
  6824 ;;		_sem_wait
  6825 ;; This function is called by:
  6826 ;;		_pipe_read_block
  6827 ;; This function uses a reentrant model
  6828 ;;
  6829                           
  6830                           	psect	text42
  6831  001D94                     __ptext42:
  6832                           	callstack 0
  6833  001D94                     _read_pipe:
  6834                           	callstack 15
  6835  001D94                     
  6836                           ;pipe.c: 27: void read_pipe(pipe_t *p, char *buffer);pipe.c: 28: {;pipe.c: 29:     (INTC
      +                          ONbits.GIE = 0);
  6837  001D94  9EF2               	bcf	242,7,c	;volatile
  6838  001D96                     
  6839                           ;pipe.c: 32:     sem_wait(&p->pipe_sem_read);
  6840                           ;stkvar	_p @ sp[(0)+-2]
  6841  001D96  0EFE               	movlw	-2
  6842  001D98  50E3               	movf	plusw1,w,c
  6843  001D9A  0F05               	addlw	5
  6844  001D9C  6E0B               	movwf	(btemp+10)^0,c
  6845  001D9E  0EFF               	movlw	-1
  6846  001DA0  CFE3 F00C          	movff	plusw1,btemp+11
  6847  001DA4  0E00               	movlw	0
  6848  001DA6  220C               	addwfc	(btemp+11)^0,f,c
  6849  001DA8  C00B  FFE6         	movff	btemp+10,postinc1
  6850  001DAC  C00C  FFE6         	movff	btemp+11,postinc1
  6851  001DB0  ECC9  F003         	call	_sem_wait	;wreg free
  6852  001DB4                     
  6853                           ;pipe.c: 34:     *buffer = p->pipe_data[p->pipe_pos_read];
  6854                           ;stkvar	_p @ sp[(0)+-2]
  6855  001DB4  0EFE               	movlw	-2
  6856  001DB6  CFE3 FFD9          	movff	plusw1,fsr2l
  6857  001DBA  0EFF               	movlw	-1
  6858  001DBC  CFE3 FFDA          	movff	plusw1,fsr2h
  6859  001DC0  50DF               	movf	indf2,w,c
  6860  001DC2  6E0C               	movwf	(btemp+11)^0,c
  6861                           
  6862                           ;stkvar	_p @ sp[(0)+-2]
  6863  001DC4  0EFE               	movlw	-2
  6864  001DC6  CFE3 F009          	movff	plusw1,btemp+8
  6865  001DCA  0EFF               	movlw	-1
  6866  001DCC  CFE3 F00A          	movff	plusw1,btemp+9
  6867  001DD0  0E02               	movlw	2
  6868  001DD2  2409               	addwf	(btemp+8)^0,w,c
  6869  001DD4  6ED9               	movwf	fsr2l,c
  6870  001DD6  0E00               	movlw	0
  6871  001DD8  200A               	addwfc	(btemp+9)^0,w,c
  6872  001DDA  6EDA               	movwf	fsr2h,c
  6873  001DDC  CFDE F009          	movff	postinc2,btemp+8
  6874  001DE0  CFDD F00A          	movff	postdec2,btemp+9
  6875  001DE4  500C               	movf	(btemp+11)^0,w,c
  6876  001DE6  2409               	addwf	(btemp+8)^0,w,c
  6877  001DE8  6ED9               	movwf	fsr2l,c
  6878  001DEA  0E00               	movlw	0
  6879  001DEC  200A               	addwfc	(btemp+9)^0,w,c
  6880  001DEE  6EDA               	movwf	fsr2h,c
  6881                           
  6882                           ;stkvar	_buffer @ sp[(0)+-4]
  6883  001DF0  0EFC               	movlw	-4
  6884  001DF2  CFE3 FFE9          	movff	plusw1,fsr0l
  6885  001DF6  0EFD               	movlw	-3
  6886  001DF8  CFE3 FFEA          	movff	plusw1,fsr0h
  6887  001DFC  CFDF FFEF          	movff	indf2,indf0
  6888  001E00                     
  6889                           ;pipe.c: 35:     p->pipe_pos_read = (p->pipe_pos_read + 1) % p->pipe_capacity;
  6890                           ;stkvar	_p @ sp[(0)+-2]
  6891  001E00  0EFE               	movlw	-2
  6892  001E02  CFE3 FFD9          	movff	plusw1,fsr2l
  6893  001E06  0EFF               	movlw	-1
  6894  001E08  CFE3 FFDA          	movff	plusw1,fsr2h
  6895                           
  6896                           ;stkvar	_p @ sp[(0)+-2]
  6897  001E0C  0EFE               	movlw	-2
  6898  001E0E  CFE3 F00B          	movff	plusw1,btemp+10
  6899  001E12  0EFF               	movlw	-1
  6900  001E14  CFE3 F00C          	movff	plusw1,btemp+11
  6901  001E18  0E04               	movlw	4
  6902  001E1A  240B               	addwf	(btemp+10)^0,w,c
  6903  001E1C  6EE9               	movwf	fsr0l,c
  6904  001E1E  0E00               	movlw	0
  6905  001E20  200C               	addwfc	(btemp+11)^0,w,c
  6906  001E22  6EEA               	movwf	fsr0h,c
  6907  001E24  50EF               	movf	indf0,w,c
  6908  001E26  6EE6               	movwf	postinc1,c
  6909  001E28  0E00               	movlw	0
  6910  001E2A  6EE6               	movwf	postinc1,c
  6911                           
  6912                           ;stkvar	_p @ sp[(-2)+-2]
  6913  001E2C  0EFC               	movlw	-4
  6914  001E2E  CFE3 FFE9          	movff	plusw1,fsr0l
  6915  001E32  0EFD               	movlw	-3
  6916  001E34  CFE3 FFEA          	movff	plusw1,fsr0h
  6917  001E38  50EF               	movf	indf0,w,c
  6918  001E3A  6E0B               	movwf	(btemp+10)^0,c
  6919  001E3C  6A0C               	clrf	(btemp+11)^0,c
  6920  001E3E  0E01               	movlw	1
  6921  001E40  260B               	addwf	(btemp+10)^0,f,c
  6922  001E42  0E00               	movlw	0
  6923  001E44  220C               	addwfc	(btemp+11)^0,f,c
  6924  001E46  C00B  FFE6         	movff	btemp+10,postinc1
  6925  001E4A  C00C  FFE6         	movff	btemp+11,postinc1
  6926  001E4E  ECAB  F00C         	call	___awmod	;wreg free
  6927  001E52  5001               	movf	btemp^0,w,c
  6928  001E54  6EDF               	movwf	indf2,c
  6929  001E56                     
  6930                           ;pipe.c: 38:     sem_post(&p->pipe_sem_write);
  6931                           ;stkvar	_p @ sp[(0)+-2]
  6932  001E56  0EFE               	movlw	-2
  6933  001E58  50E3               	movf	plusw1,w,c
  6934  001E5A  0F13               	addlw	19
  6935  001E5C  6E0B               	movwf	(btemp+10)^0,c
  6936  001E5E  0EFF               	movlw	-1
  6937  001E60  CFE3 F00C          	movff	plusw1,btemp+11
  6938  001E64  0E00               	movlw	0
  6939  001E66  220C               	addwfc	(btemp+11)^0,f,c
  6940  001E68  C00B  FFE6         	movff	btemp+10,postinc1
  6941  001E6C  C00C  FFE6         	movff	btemp+11,postinc1
  6942  001E70  ECB5  F00F         	call	_sem_post	;wreg free
  6943  001E74                     
  6944                           ;pipe.c: 40:     (INTCONbits.GIE = 1);
  6945  001E74  8EF2               	bsf	242,7,c	;volatile
  6946  001E76                     
  6947                           ; _read_pipe: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6948  001E76  52E5               	movf	postdec1,f,c
  6949  001E78  52E5               	movf	postdec1,f,c
  6950  001E7A  52E5               	movf	postdec1,f,c
  6951  001E7C  52E5               	movf	postdec1,f,c
  6952  001E7E  0012               	return		;funcret
  6953  001E80                     __end_of_read_pipe:
  6954                           	callstack 0
  6955                           
  6956 ;; *************** function _os_yield *****************
  6957 ;; Defined at:
  6958 ;;		line 40 in file "syscall.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;		None
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;		None
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  1  [STACK] void 
  6965 ;; Registers used:
  6966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6972 ;;      Params:         0       0       0       0       0       0       0       0       0
  6973 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6974 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6975 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6976 ;;Total ram usage:        0 bytes
  6977 ;; Hardware stack levels used: 1
  6978 ;; Hardware stack levels required when called: 7
  6979 ;; This function calls:
  6980 ;;		_scheduler
  6981 ;; This function is called by:
  6982 ;;		_task_central
  6983 ;; This function uses a reentrant model
  6984 ;;
  6985                           
  6986                           	psect	text43
  6987  0011FE                     __ptext43:
  6988                           	callstack 0
  6989  0011FE                     _os_yield:
  6990                           	callstack 17
  6991  0011FE                     
  6992                           ;syscall.c: 42:     (INTCONbits.GIE = 0);
  6993  0011FE  9EF2               	bcf	242,7,c	;volatile
  6994  001200  EE22  F094         	lfsr	2,_readyQueue+531
  6995  001204  EE00 F003          	lfsr	0,3
  6996  001208  50DE               	movf	postinc2,w,c
  6997  00120A  26E9               	addwf	fsr0l,f,c
  6998  00120C  50DD               	movf	postdec2,w,c
  6999  00120E  22EA               	addwfc	fsr0h,f,c
  7000  001210  04EE               	decf	postinc0,w,c
  7001  001212  A4D8               	btfss	status,2,c
  7002  001214  EF0E  F009         	goto	u174_21
  7003  001218  EF10  F009         	goto	u174_20
  7004  00121C                     u174_21:
  7005  00121C  EF76  F009         	goto	l2710
  7006  001220                     u174_20:
  7007  001220  EE22  F094         	lfsr	2,_readyQueue+531
  7008  001224  EE00 F006          	lfsr	0,6
  7009  001228  50DE               	movf	postinc2,w,c
  7010  00122A  26E9               	addwf	fsr0l,f,c
  7011  00122C  50DD               	movf	postdec2,w,c
  7012  00122E  22EA               	addwfc	fsr0h,f,c
  7013  001230  CFE0 FFEF          	movff	bsr,indf0	;volatile
  7014  001234  EE22  F094         	lfsr	2,_readyQueue+531
  7015  001238  EE00 F008          	lfsr	0,8
  7016  00123C  50DE               	movf	postinc2,w,c
  7017  00123E  26E9               	addwf	fsr0l,f,c
  7018  001240  50DD               	movf	postdec2,w,c
  7019  001242  22EA               	addwfc	fsr0h,f,c
  7020  001244  CFD8 FFEF          	movff	status,indf0	;volatile
  7021  001248  EE22  F094         	lfsr	2,_readyQueue+531
  7022  00124C  EE00 F007          	lfsr	0,7
  7023  001250  50DE               	movf	postinc2,w,c
  7024  001252  26E9               	addwf	fsr0l,f,c
  7025  001254  50DD               	movf	postdec2,w,c
  7026  001256  22EA               	addwfc	fsr0h,f,c
  7027  001258  CFE8 FFEF          	movff	wreg,indf0	;volatile
  7028  00125C  EE22  F094         	lfsr	2,_readyQueue+531
  7029  001260  EE00 F069          	lfsr	0,105
  7030  001264  50DE               	movf	postinc2,w,c
  7031  001266  26E9               	addwf	fsr0l,f,c
  7032  001268  50DD               	movf	postdec2,w,c
  7033  00126A  22EA               	addwfc	fsr0h,f,c
  7034  00126C  0E00               	movlw	0
  7035  00126E  6EEF               	movwf	indf0,c
  7036  001270  EF64  F009         	goto	l2706
  7037  001274                     l2702:
  7038  001274  EE22  F094         	lfsr	2,_readyQueue+531
  7039  001278  EE00 F069          	lfsr	0,105
  7040  00127C  50DE               	movf	postinc2,w,c
  7041  00127E  26E9               	addwf	fsr0l,f,c
  7042  001280  50DD               	movf	postdec2,w,c
  7043  001282  22EA               	addwfc	fsr0h,f,c
  7044  001284  50EF               	movf	indf0,w,c
  7045  001286  0D03               	mullw	3
  7046  001288  EE22  F094         	lfsr	2,_readyQueue+531
  7047  00128C  CFDE F00B          	movff	postinc2,btemp+10
  7048  001290  CFDD F00C          	movff	postdec2,btemp+11
  7049  001294  50F3               	movf	243,w,c
  7050  001296  260B               	addwf	(btemp+10)^0,f,c
  7051  001298  50F4               	movf	244,w,c
  7052  00129A  220C               	addwfc	(btemp+11)^0,f,c
  7053  00129C  0E09               	movlw	9
  7054  00129E  240B               	addwf	(btemp+10)^0,w,c
  7055  0012A0  6ED9               	movwf	fsr2l,c
  7056  0012A2  0E00               	movlw	0
  7057  0012A4  200C               	addwfc	(btemp+11)^0,w,c
  7058  0012A6  6EDA               	movwf	fsr2h,c
  7059  0012A8  CFFD FFDE          	movff	tosl,postinc2	;volatile
  7060  0012AC  CFFE FFDE          	movff	tosh,postinc2	;volatile
  7061  0012B0  CFFF FFDE          	movff	tosu,postinc2	;volatile
  7062  0012B4  EE22  F094         	lfsr	2,_readyQueue+531
  7063  0012B8  EE00 F069          	lfsr	0,105
  7064  0012BC  50DE               	movf	postinc2,w,c
  7065  0012BE  26E9               	addwf	fsr0l,f,c
  7066  0012C0  50DD               	movf	postdec2,w,c
  7067  0012C2  22EA               	addwfc	fsr0h,f,c
  7068  0012C4  2AEF               	incf	indf0,f,c
  7069  0012C6  0006               	pop		;# 
  7070  0012C8                     l2706:
  7071  0012C8  50FC               	movf	252,w,c	;volatile
  7072  0012CA  A4D8               	btfss	status,2,c
  7073  0012CC  EF6A  F009         	goto	u175_21
  7074  0012D0  EF6C  F009         	goto	u175_20
  7075  0012D4                     u175_21:
  7076  0012D4  EF3A  F009         	goto	l2702
  7077  0012D8                     u175_20:
  7078  0012D8  EE22  F094         	lfsr	2,_readyQueue+531
  7079  0012DC  EE00 F003          	lfsr	0,3
  7080  0012E0  50DE               	movf	postinc2,w,c
  7081  0012E2  26E9               	addwf	fsr0l,f,c
  7082  0012E4  50DD               	movf	postdec2,w,c
  7083  0012E6  22EA               	addwfc	fsr0h,f,c
  7084  0012E8  0E00               	movlw	0
  7085  0012EA  6EEF               	movwf	indf0,c
  7086  0012EC                     l2710:
  7087                           
  7088                           ;syscall.c: 46:     scheduler();
  7089  0012EC  ECC9  F014         	call	_scheduler	;wreg free
  7090  0012F0  EE22  F094         	lfsr	2,_readyQueue+531
  7091  0012F4  EE00 F003          	lfsr	0,3
  7092  0012F8  50DE               	movf	postinc2,w,c
  7093  0012FA  26E9               	addwf	fsr0l,f,c
  7094  0012FC  50DD               	movf	postdec2,w,c
  7095  0012FE  22EA               	addwfc	fsr0h,f,c
  7096  001300  50EF               	movf	indf0,w,c
  7097  001302  A4D8               	btfss	status,2,c
  7098  001304  EF86  F009         	goto	u176_21
  7099  001308  EF88  F009         	goto	u176_20
  7100  00130C                     u176_21:
  7101  00130C  EF10  F00A         	goto	l2734
  7102  001310                     u176_20:
  7103  001310  EE22  F094         	lfsr	2,_readyQueue+531
  7104  001314  EE00 F006          	lfsr	0,6
  7105  001318  50DE               	movf	postinc2,w,c
  7106  00131A  26E9               	addwf	fsr0l,f,c
  7107  00131C  50DD               	movf	postdec2,w,c
  7108  00131E  22EA               	addwfc	fsr0h,f,c
  7109  001320  50EF               	movf	indf0,w,c
  7110  001322  6EE0               	movwf	224,c	;volatile
  7111  001324  EE22  F094         	lfsr	2,_readyQueue+531
  7112  001328  EE00 F008          	lfsr	0,8
  7113  00132C  50DE               	movf	postinc2,w,c
  7114  00132E  26E9               	addwf	fsr0l,f,c
  7115  001330  50DD               	movf	postdec2,w,c
  7116  001332  22EA               	addwfc	fsr0h,f,c
  7117  001334  50EF               	movf	indf0,w,c
  7118  001336  6ED8               	movwf	216,c	;volatile
  7119  001338  EE22  F094         	lfsr	2,_readyQueue+531
  7120  00133C  EE00 F007          	lfsr	0,7
  7121  001340  50DE               	movf	postinc2,w,c
  7122  001342  26E9               	addwf	fsr0l,f,c
  7123  001344  50DD               	movf	postdec2,w,c
  7124  001346  22EA               	addwfc	fsr0h,f,c
  7125  001348  50EF               	movf	indf0,w,c
  7126  00134A  6E0C               	movwf	(btemp+11)^0,c
  7127  00134C  500C               	movf	(btemp+11)^0,w,c
  7128  00134E  6AFC               	clrf	252,c	;volatile
  7129  001350  EE22  F094         	lfsr	2,_readyQueue+531
  7130  001354  EE00 F069          	lfsr	0,105
  7131  001358  50DE               	movf	postinc2,w,c
  7132  00135A  26E9               	addwf	fsr0l,f,c
  7133  00135C  50DD               	movf	postdec2,w,c
  7134  00135E  22EA               	addwfc	fsr0h,f,c
  7135  001360  50EF               	movf	indf0,w,c
  7136  001362  A4D8               	btfss	status,2,c
  7137  001364  EFB6  F009         	goto	u177_21
  7138  001368  EFB8  F009         	goto	u177_20
  7139  00136C                     u177_21:
  7140  00136C  EFCC  F009         	goto	l246
  7141  001370                     u177_20:
  7142  001370  0005               	push		;# 
  7143  001372  EE22  F094         	lfsr	2,_readyQueue+531
  7144  001376  EE00 F001          	lfsr	0,1
  7145  00137A  50DE               	movf	postinc2,w,c
  7146  00137C  26E9               	addwf	fsr0l,f,c
  7147  00137E  50DD               	movf	postdec2,w,c
  7148  001380  22EA               	addwfc	fsr0h,f,c
  7149  001382  CFEE F00B          	movff	postinc0,btemp+10
  7150  001386  CFED F00C          	movff	postdec0,btemp+11
  7151  00138A  C00B  FFFD         	movff	btemp+10,tosl	;volatile
  7152  00138E  C00C  FFFE         	movff	btemp+11,tosh	;volatile
  7153  001392  6AFF               	clrf	255,c	;volatile
  7154  001394  EF06  F00A         	goto	l2732
  7155  001398                     l246:
  7156  001398  0005               	push		;# 
  7157  00139A  EE22  F094         	lfsr	2,_readyQueue+531
  7158  00139E  EE00 F069          	lfsr	0,105
  7159  0013A2  50DE               	movf	postinc2,w,c
  7160  0013A4  26E9               	addwf	fsr0l,f,c
  7161  0013A6  50DD               	movf	postdec2,w,c
  7162  0013A8  22EA               	addwfc	fsr0h,f,c
  7163  0013AA  06EF               	decf	indf0,f,c
  7164  0013AC  EE22  F094         	lfsr	2,_readyQueue+531
  7165  0013B0  EE00 F069          	lfsr	0,105
  7166  0013B4  50DE               	movf	postinc2,w,c
  7167  0013B6  26E9               	addwf	fsr0l,f,c
  7168  0013B8  50DD               	movf	postdec2,w,c
  7169  0013BA  22EA               	addwfc	fsr0h,f,c
  7170  0013BC  50EF               	movf	indf0,w,c
  7171  0013BE  0D03               	mullw	3
  7172  0013C0  EE22  F094         	lfsr	2,_readyQueue+531
  7173  0013C4  CFDE F00B          	movff	postinc2,btemp+10
  7174  0013C8  CFDD F00C          	movff	postdec2,btemp+11
  7175  0013CC  50F3               	movf	243,w,c
  7176  0013CE  260B               	addwf	(btemp+10)^0,f,c
  7177  0013D0  50F4               	movf	244,w,c
  7178  0013D2  220C               	addwfc	(btemp+11)^0,f,c
  7179  0013D4  0E09               	movlw	9
  7180  0013D6  240B               	addwf	(btemp+10)^0,w,c
  7181  0013D8  6ED9               	movwf	fsr2l,c
  7182  0013DA  0E00               	movlw	0
  7183  0013DC  200C               	addwfc	(btemp+11)^0,w,c
  7184  0013DE  6EDA               	movwf	fsr2h,c
  7185  0013E0  CFDE FFFD          	movff	postinc2,tosl	;volatile
  7186  0013E4  CFDE FFFE          	movff	postinc2,tosh	;volatile
  7187  0013E8  CFDD FFFF          	movff	postdec2,tosu	;volatile
  7188  0013EC  EE22  F094         	lfsr	2,_readyQueue+531
  7189  0013F0  EE00 F069          	lfsr	0,105
  7190  0013F4  50DE               	movf	postinc2,w,c
  7191  0013F6  26E9               	addwf	fsr0l,f,c
  7192  0013F8  50DD               	movf	postdec2,w,c
  7193  0013FA  22EA               	addwfc	fsr0h,f,c
  7194  0013FC  50EF               	movf	indf0,w,c
  7195  0013FE  A4D8               	btfss	status,2,c
  7196  001400  EF04  F00A         	goto	u178_21
  7197  001404  EF06  F00A         	goto	u178_20
  7198  001408                     u178_21:
  7199  001408  EFCC  F009         	goto	l246
  7200  00140C                     u178_20:
  7201  00140C                     l2732:
  7202  00140C  EE22  F094         	lfsr	2,_readyQueue+531
  7203  001410  EE00 F003          	lfsr	0,3
  7204  001414  50DE               	movf	postinc2,w,c
  7205  001416  26E9               	addwf	fsr0l,f,c
  7206  001418  50DD               	movf	postdec2,w,c
  7207  00141A  22EA               	addwfc	fsr0h,f,c
  7208  00141C  0E01               	movlw	1
  7209  00141E  6EEF               	movwf	indf0,c
  7210  001420                     l2734:
  7211                           
  7212                           ;syscall.c: 49:     (INTCONbits.GIE = 1);
  7213  001420  8EF2               	bsf	242,7,c	;volatile
  7214  001422                     
  7215                           ; _os_yield: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  7216  001422  0012               	return		;funcret
  7217  001424                     __end_of_os_yield:
  7218                           	callstack 0
  7219                           
  7220 ;; *************** function _ISR_TIMER_0 *****************
  7221 ;; Defined at:
  7222 ;;		line 40 in file "hardware.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;		None
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;		None
  7227 ;; Return value:  Size  Location     Type
  7228 ;;                  1    wreg      void 
  7229 ;; Registers used:
  7230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, prodl, prodh
  7231 ;; Tracked objects:
  7232 ;;		On entry : 0/0
  7233 ;;		On exit  : 0/0
  7234 ;;		Unchanged: 0/0
  7235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7236 ;;      Params:         0       0       0       0       0       0       0       0       0
  7237 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7238 ;;      Temps:         18       0       0       0       0       0       0       0       0
  7239 ;;      Totals:        18       0       0       0       0       0       0       0       0
  7240 ;;Total ram usage:       18 bytes
  7241 ;; Hardware stack levels used: 1
  7242 ;; Hardware stack levels required when called: 3
  7243 ;; This function calls:
  7244 ;;		_exti_isr
  7245 ;;		_os_task_time_decrease
  7246 ;;		_pwm_tick
  7247 ;;		_scheduler
  7248 ;; This function is called by:
  7249 ;;		Interrupt level 2
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           	psect	intcode
  7254  000008                     __pintcode:
  7255                           	callstack 0
  7256  000008                     _ISR_TIMER_0:
  7257                           	callstack 15
  7258                           
  7259                           ;incstack = 0
  7260  000008  ED44  F005         	call	int_func,f	;refresh shadow registers
  7261                           
  7262                           	psect	intcode_body
  7263  000A88                     __pintcode_body:
  7264                           	callstack 15
  7265  000A88                     int_func:
  7266                           	callstack 15
  7267  000A88  0006               	pop		; remove dummy address from shadow register refresh
  7268  000A8A  CFFA F041          	movff	pclath,??_ISR_TIMER_0+2
  7269  000A8E  CFFB F042          	movff	pclatu,??_ISR_TIMER_0+3
  7270  000A92  CFE9 F043          	movff	fsr0l,??_ISR_TIMER_0+4
  7271  000A96  CFEA F044          	movff	fsr0h,??_ISR_TIMER_0+5
  7272  000A9A  CFE1 F045          	movff	fsr1l,??_ISR_TIMER_0+6
  7273  000A9E  CFE2 F046          	movff	fsr1h,??_ISR_TIMER_0+7
  7274  000AA2  CFD9 F047          	movff	fsr2l,??_ISR_TIMER_0+8
  7275  000AA6  CFDA F048          	movff	fsr2h,??_ISR_TIMER_0+9
  7276  000AAA  CFF3 F049          	movff	prodl,??_ISR_TIMER_0+10
  7277  000AAE  CFF4 F04A          	movff	prodh,??_ISR_TIMER_0+11
  7278  000AB2  C001  F04B         	movff	btemp,??_ISR_TIMER_0+12
  7279  000AB6  C002  F04C         	movff	btemp+1,??_ISR_TIMER_0+13
  7280  000ABA  C009  F04D         	movff	btemp+8,??_ISR_TIMER_0+14
  7281  000ABE  C00A  F04E         	movff	btemp+9,??_ISR_TIMER_0+15
  7282  000AC2  C00B  F04F         	movff	btemp+10,??_ISR_TIMER_0+16
  7283  000AC6  C00C  F050         	movff	btemp+11,??_ISR_TIMER_0+17
  7284  000ACA  EE16  F04B         	lfsr	1,___inthi_sp
  7285  000ACE                     
  7286                           ;hardware.c: 42:     (INTCONbits.GIE = 0);
  7287  000ACE  9EF2               	bcf	242,7,c	;volatile
  7288                           
  7289                           ;hardware.c: 44:     if (INTCONbits.TMR0IF == 1) {
  7290  000AD0  A4F2               	btfss	242,2,c	;volatile
  7291  000AD2  EF6D  F005         	goto	i2u196_41
  7292  000AD6  EF6F  F005         	goto	i2u196_40
  7293  000ADA                     i2u196_41:
  7294  000ADA  EF84  F006         	goto	i2l2934
  7295  000ADE                     i2u196_40:
  7296  000ADE                     
  7297                           ;hardware.c: 45:         INTCONbits.TMR0IF = 0;
  7298  000ADE  94F2               	bcf	242,2,c	;volatile
  7299  000AE0                     
  7300                           ;hardware.c: 48:         os_task_time_decrease();
  7301  000AE0  EC58  F011         	call	_os_task_time_decrease	;wreg free
  7302  000AE4                     
  7303                           ;hardware.c: 50:         pwm_tick();
  7304  000AE4  EC01  F011         	call	_pwm_tick	;wreg free
  7305  000AE8  EE22  F094         	lfsr	2,_readyQueue+531
  7306  000AEC  EE00 F003          	lfsr	0,3
  7307  000AF0  50DE               	movf	postinc2,w,c
  7308  000AF2  26E9               	addwf	fsr0l,f,c
  7309  000AF4  50DD               	movf	postdec2,w,c
  7310  000AF6  22EA               	addwfc	fsr0h,f,c
  7311  000AF8  04EE               	decf	postinc0,w,c
  7312  000AFA  A4D8               	btfss	status,2,c
  7313  000AFC  EF82  F005         	goto	i2u197_41
  7314  000B00  EF84  F005         	goto	i2u197_40
  7315  000B04                     i2u197_41:
  7316  000B04  EFEA  F005         	goto	i2l2914
  7317  000B08                     i2u197_40:
  7318  000B08  EE22  F094         	lfsr	2,_readyQueue+531
  7319  000B0C  EE00 F006          	lfsr	0,6
  7320  000B10  50DE               	movf	postinc2,w,c
  7321  000B12  26E9               	addwf	fsr0l,f,c
  7322  000B14  50DD               	movf	postdec2,w,c
  7323  000B16  22EA               	addwfc	fsr0h,f,c
  7324  000B18  CFE0 FFEF          	movff	bsr,indf0	;volatile
  7325  000B1C  EE22  F094         	lfsr	2,_readyQueue+531
  7326  000B20  EE00 F008          	lfsr	0,8
  7327  000B24  50DE               	movf	postinc2,w,c
  7328  000B26  26E9               	addwf	fsr0l,f,c
  7329  000B28  50DD               	movf	postdec2,w,c
  7330  000B2A  22EA               	addwfc	fsr0h,f,c
  7331  000B2C  CFD8 FFEF          	movff	status,indf0	;volatile
  7332  000B30  EE22  F094         	lfsr	2,_readyQueue+531
  7333  000B34  EE00 F007          	lfsr	0,7
  7334  000B38  50DE               	movf	postinc2,w,c
  7335  000B3A  26E9               	addwf	fsr0l,f,c
  7336  000B3C  50DD               	movf	postdec2,w,c
  7337  000B3E  22EA               	addwfc	fsr0h,f,c
  7338  000B40  CFE8 FFEF          	movff	wreg,indf0	;volatile
  7339  000B44  EE22  F094         	lfsr	2,_readyQueue+531
  7340  000B48  EE00 F069          	lfsr	0,105
  7341  000B4C  50DE               	movf	postinc2,w,c
  7342  000B4E  26E9               	addwf	fsr0l,f,c
  7343  000B50  50DD               	movf	postdec2,w,c
  7344  000B52  22EA               	addwfc	fsr0h,f,c
  7345  000B54  0E00               	movlw	0
  7346  000B56  6EEF               	movwf	indf0,c
  7347  000B58  EFD8  F005         	goto	i2l2910
  7348  000B5C                     i2l2906:
  7349  000B5C  EE22  F094         	lfsr	2,_readyQueue+531
  7350  000B60  EE00 F069          	lfsr	0,105
  7351  000B64  50DE               	movf	postinc2,w,c
  7352  000B66  26E9               	addwf	fsr0l,f,c
  7353  000B68  50DD               	movf	postdec2,w,c
  7354  000B6A  22EA               	addwfc	fsr0h,f,c
  7355  000B6C  50EF               	movf	indf0,w,c
  7356  000B6E  0D03               	mullw	3
  7357  000B70  EE22  F094         	lfsr	2,_readyQueue+531
  7358  000B74  CFDE F03F          	movff	postinc2,??_ISR_TIMER_0
  7359  000B78  CFDD F040          	movff	postdec2,??_ISR_TIMER_0+1
  7360  000B7C  50F3               	movf	243,w,c
  7361  000B7E  263F               	addwf	??_ISR_TIMER_0^0,f,c
  7362  000B80  50F4               	movf	244,w,c
  7363  000B82  2240               	addwfc	(??_ISR_TIMER_0+1)^0,f,c
  7364  000B84  0E09               	movlw	9
  7365  000B86  243F               	addwf	??_ISR_TIMER_0^0,w,c
  7366  000B88  6ED9               	movwf	fsr2l,c
  7367  000B8A  0E00               	movlw	0
  7368  000B8C  2040               	addwfc	(??_ISR_TIMER_0+1)^0,w,c
  7369  000B8E  6EDA               	movwf	fsr2h,c
  7370  000B90  CFFD FFDE          	movff	tosl,postinc2	;volatile
  7371  000B94  CFFE FFDE          	movff	tosh,postinc2	;volatile
  7372  000B98  CFFF FFDE          	movff	tosu,postinc2	;volatile
  7373  000B9C  EE22  F094         	lfsr	2,_readyQueue+531
  7374  000BA0  EE00 F069          	lfsr	0,105
  7375  000BA4  50DE               	movf	postinc2,w,c
  7376  000BA6  26E9               	addwf	fsr0l,f,c
  7377  000BA8  50DD               	movf	postdec2,w,c
  7378  000BAA  22EA               	addwfc	fsr0h,f,c
  7379  000BAC  2AEF               	incf	indf0,f,c
  7380  000BAE  0006               	pop		;# 
  7381  000BB0                     i2l2910:
  7382  000BB0  50FC               	movf	252,w,c	;volatile
  7383  000BB2  A4D8               	btfss	status,2,c
  7384  000BB4  EFDE  F005         	goto	i2u198_41
  7385  000BB8  EFE0  F005         	goto	i2u198_40
  7386  000BBC                     i2u198_41:
  7387  000BBC  EFAE  F005         	goto	i2l2906
  7388  000BC0                     i2u198_40:
  7389  000BC0  EE22  F094         	lfsr	2,_readyQueue+531
  7390  000BC4  EE00 F003          	lfsr	0,3
  7391  000BC8  50DE               	movf	postinc2,w,c
  7392  000BCA  26E9               	addwf	fsr0l,f,c
  7393  000BCC  50DD               	movf	postdec2,w,c
  7394  000BCE  22EA               	addwfc	fsr0h,f,c
  7395  000BD0  0E00               	movlw	0
  7396  000BD2  6EEF               	movwf	indf0,c
  7397  000BD4                     i2l2914:
  7398                           
  7399                           ;hardware.c: 53:         scheduler();
  7400  000BD4  ECC9  F014         	call	_scheduler	;wreg free
  7401  000BD8  EE22  F094         	lfsr	2,_readyQueue+531
  7402  000BDC  EE00 F003          	lfsr	0,3
  7403  000BE0  50DE               	movf	postinc2,w,c
  7404  000BE2  26E9               	addwf	fsr0l,f,c
  7405  000BE4  50DD               	movf	postdec2,w,c
  7406  000BE6  22EA               	addwfc	fsr0h,f,c
  7407  000BE8  50EF               	movf	indf0,w,c
  7408  000BEA  A4D8               	btfss	status,2,c
  7409  000BEC  EFFA  F005         	goto	i2u199_41
  7410  000BF0  EFFC  F005         	goto	i2u199_40
  7411  000BF4                     i2u199_41:
  7412  000BF4  EF84  F006         	goto	i2l2934
  7413  000BF8                     i2u199_40:
  7414  000BF8  EE22  F094         	lfsr	2,_readyQueue+531
  7415  000BFC  EE00 F006          	lfsr	0,6
  7416  000C00  50DE               	movf	postinc2,w,c
  7417  000C02  26E9               	addwf	fsr0l,f,c
  7418  000C04  50DD               	movf	postdec2,w,c
  7419  000C06  22EA               	addwfc	fsr0h,f,c
  7420  000C08  50EF               	movf	indf0,w,c
  7421  000C0A  6EE0               	movwf	224,c	;volatile
  7422  000C0C  EE22  F094         	lfsr	2,_readyQueue+531
  7423  000C10  EE00 F008          	lfsr	0,8
  7424  000C14  50DE               	movf	postinc2,w,c
  7425  000C16  26E9               	addwf	fsr0l,f,c
  7426  000C18  50DD               	movf	postdec2,w,c
  7427  000C1A  22EA               	addwfc	fsr0h,f,c
  7428  000C1C  50EF               	movf	indf0,w,c
  7429  000C1E  6ED8               	movwf	216,c	;volatile
  7430  000C20  EE22  F094         	lfsr	2,_readyQueue+531
  7431  000C24  EE00 F007          	lfsr	0,7
  7432  000C28  50DE               	movf	postinc2,w,c
  7433  000C2A  26E9               	addwf	fsr0l,f,c
  7434  000C2C  50DD               	movf	postdec2,w,c
  7435  000C2E  22EA               	addwfc	fsr0h,f,c
  7436  000C30  50EF               	movf	indf0,w,c
  7437  000C32  6E3F               	movwf	??_ISR_TIMER_0^0,c
  7438  000C34  503F               	movf	??_ISR_TIMER_0^0,w,c
  7439  000C36  6AFC               	clrf	252,c	;volatile
  7440  000C38  EE22  F094         	lfsr	2,_readyQueue+531
  7441  000C3C  EE00 F069          	lfsr	0,105
  7442  000C40  50DE               	movf	postinc2,w,c
  7443  000C42  26E9               	addwf	fsr0l,f,c
  7444  000C44  50DD               	movf	postdec2,w,c
  7445  000C46  22EA               	addwfc	fsr0h,f,c
  7446  000C48  50EF               	movf	indf0,w,c
  7447  000C4A  A4D8               	btfss	status,2,c
  7448  000C4C  EF2A  F006         	goto	i2u200_41
  7449  000C50  EF2C  F006         	goto	i2u200_40
  7450  000C54                     i2u200_41:
  7451  000C54  EF40  F006         	goto	i2l351
  7452  000C58                     i2u200_40:
  7453  000C58  0005               	push		;# 
  7454  000C5A  EE22  F094         	lfsr	2,_readyQueue+531
  7455  000C5E  EE00 F001          	lfsr	0,1
  7456  000C62  50DE               	movf	postinc2,w,c
  7457  000C64  26E9               	addwf	fsr0l,f,c
  7458  000C66  50DD               	movf	postdec2,w,c
  7459  000C68  22EA               	addwfc	fsr0h,f,c
  7460  000C6A  CFEE F03F          	movff	postinc0,??_ISR_TIMER_0
  7461  000C6E  CFED F040          	movff	postdec0,??_ISR_TIMER_0+1
  7462  000C72  C03F  FFFD         	movff	??_ISR_TIMER_0,tosl	;volatile
  7463  000C76  C040  FFFE         	movff	??_ISR_TIMER_0+1,tosh	;volatile
  7464  000C7A  6AFF               	clrf	255,c	;volatile
  7465  000C7C  EF7A  F006         	goto	i2l2932
  7466  000C80                     i2l351:
  7467  000C80  0005               	push		;# 
  7468  000C82  EE22  F094         	lfsr	2,_readyQueue+531
  7469  000C86  EE00 F069          	lfsr	0,105
  7470  000C8A  50DE               	movf	postinc2,w,c
  7471  000C8C  26E9               	addwf	fsr0l,f,c
  7472  000C8E  50DD               	movf	postdec2,w,c
  7473  000C90  22EA               	addwfc	fsr0h,f,c
  7474  000C92  06EF               	decf	indf0,f,c
  7475  000C94  EE22  F094         	lfsr	2,_readyQueue+531
  7476  000C98  EE00 F069          	lfsr	0,105
  7477  000C9C  50DE               	movf	postinc2,w,c
  7478  000C9E  26E9               	addwf	fsr0l,f,c
  7479  000CA0  50DD               	movf	postdec2,w,c
  7480  000CA2  22EA               	addwfc	fsr0h,f,c
  7481  000CA4  50EF               	movf	indf0,w,c
  7482  000CA6  0D03               	mullw	3
  7483  000CA8  EE22  F094         	lfsr	2,_readyQueue+531
  7484  000CAC  CFDE F03F          	movff	postinc2,??_ISR_TIMER_0
  7485  000CB0  CFDD F040          	movff	postdec2,??_ISR_TIMER_0+1
  7486  000CB4  50F3               	movf	243,w,c
  7487  000CB6  263F               	addwf	??_ISR_TIMER_0^0,f,c
  7488  000CB8  50F4               	movf	244,w,c
  7489  000CBA  2240               	addwfc	(??_ISR_TIMER_0+1)^0,f,c
  7490  000CBC  0E09               	movlw	9
  7491  000CBE  243F               	addwf	??_ISR_TIMER_0^0,w,c
  7492  000CC0  6ED9               	movwf	fsr2l,c
  7493  000CC2  0E00               	movlw	0
  7494  000CC4  2040               	addwfc	(??_ISR_TIMER_0+1)^0,w,c
  7495  000CC6  6EDA               	movwf	fsr2h,c
  7496  000CC8  CFDE FFFD          	movff	postinc2,tosl	;volatile
  7497  000CCC  CFDE FFFE          	movff	postinc2,tosh	;volatile
  7498  000CD0  CFDD FFFF          	movff	postdec2,tosu	;volatile
  7499  000CD4  EE22  F094         	lfsr	2,_readyQueue+531
  7500  000CD8  EE00 F069          	lfsr	0,105
  7501  000CDC  50DE               	movf	postinc2,w,c
  7502  000CDE  26E9               	addwf	fsr0l,f,c
  7503  000CE0  50DD               	movf	postdec2,w,c
  7504  000CE2  22EA               	addwfc	fsr0h,f,c
  7505  000CE4  50EF               	movf	indf0,w,c
  7506  000CE6  A4D8               	btfss	status,2,c
  7507  000CE8  EF78  F006         	goto	i2u201_41
  7508  000CEC  EF7A  F006         	goto	i2u201_40
  7509  000CF0                     i2u201_41:
  7510  000CF0  EF40  F006         	goto	i2l351
  7511  000CF4                     i2u201_40:
  7512  000CF4                     i2l2932:
  7513  000CF4  EE22  F094         	lfsr	2,_readyQueue+531
  7514  000CF8  EE00 F003          	lfsr	0,3
  7515  000CFC  50DE               	movf	postinc2,w,c
  7516  000CFE  26E9               	addwf	fsr0l,f,c
  7517  000D00  50DD               	movf	postdec2,w,c
  7518  000D02  22EA               	addwfc	fsr0h,f,c
  7519  000D04  0E01               	movlw	1
  7520  000D06  6EEF               	movwf	indf0,c
  7521  000D08                     i2l2934:
  7522                           
  7523                           ;hardware.c: 58:     if (INTCONbits.INT0IF == 1) {
  7524  000D08  A2F2               	btfss	242,1,c	;volatile
  7525  000D0A  EF89  F006         	goto	i2u202_41
  7526  000D0E  EF8B  F006         	goto	i2u202_40
  7527  000D12                     i2u202_41:
  7528  000D12  EF8D  F006         	goto	i2l2938
  7529  000D16                     i2u202_40:
  7530  000D16                     
  7531                           ;hardware.c: 59:         exti_isr();
  7532  000D16  ECD9  F013         	call	_exti_isr	;wreg free
  7533  000D1A                     i2l2938:
  7534                           
  7535                           ;hardware.c: 62:     (INTCONbits.GIE = 1);
  7536  000D1A  8EF2               	bsf	242,7,c	;volatile
  7537  000D1C  C050  F00C         	movff	??_ISR_TIMER_0+17,btemp+11
  7538  000D20  C04F  F00B         	movff	??_ISR_TIMER_0+16,btemp+10
  7539  000D24  C04E  F00A         	movff	??_ISR_TIMER_0+15,btemp+9
  7540  000D28  C04D  F009         	movff	??_ISR_TIMER_0+14,btemp+8
  7541  000D2C  C04C  F002         	movff	??_ISR_TIMER_0+13,btemp+1
  7542  000D30  C04B  F001         	movff	??_ISR_TIMER_0+12,btemp
  7543  000D34  C04A  FFF4         	movff	??_ISR_TIMER_0+11,prodh
  7544  000D38  C049  FFF3         	movff	??_ISR_TIMER_0+10,prodl
  7545  000D3C  C048  FFDA         	movff	??_ISR_TIMER_0+9,fsr2h
  7546  000D40  C047  FFD9         	movff	??_ISR_TIMER_0+8,fsr2l
  7547  000D44  C046  FFE2         	movff	??_ISR_TIMER_0+7,fsr1h
  7548  000D48  C045  FFE1         	movff	??_ISR_TIMER_0+6,fsr1l
  7549  000D4C  C044  FFEA         	movff	??_ISR_TIMER_0+5,fsr0h
  7550  000D50  C043  FFE9         	movff	??_ISR_TIMER_0+4,fsr0l
  7551  000D54  C042  FFFB         	movff	??_ISR_TIMER_0+3,pclatu
  7552  000D58  C041  FFFA         	movff	??_ISR_TIMER_0+2,pclath
  7553  000D5C  0011               	retfie		f
  7554  000D5E                     __end_of_ISR_TIMER_0:
  7555                           	callstack 0
  7556                           
  7557 ;; *************** function _pwm_tick *****************
  7558 ;; Defined at:
  7559 ;;		line 65 in file "io.c"
  7560 ;; Parameters:    Size  Location     Type
  7561 ;;		None
  7562 ;; Auto vars:     Size  Location     Type
  7563 ;;		None
  7564 ;; Return value:  Size  Location     Type
  7565 ;;                  1  [STACK] void 
  7566 ;; Registers used:
  7567 ;;		wreg, status,2, status,0, btemp+11
  7568 ;; Tracked objects:
  7569 ;;		On entry : 0/0
  7570 ;;		On exit  : 0/0
  7571 ;;		Unchanged: 0/0
  7572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7573 ;;      Params:         0       0       0       0       0       0       0       0       0
  7574 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7575 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7576 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7577 ;;Total ram usage:        0 bytes
  7578 ;; Hardware stack levels used: 1
  7579 ;; This function calls:
  7580 ;;		Nothing
  7581 ;; This function is called by:
  7582 ;;		_ISR_TIMER_0
  7583 ;; This function uses a reentrant model
  7584 ;;
  7585                           
  7586                           	psect	text45
  7587  002202                     __ptext45:
  7588                           	callstack 0
  7589  002202                     _pwm_tick:
  7590                           	callstack 17
  7591  002202                     
  7592                           ;io.c: 68:     _pwm_phase++;
  7593  002202  2A2F               	incf	__pwm_phase^0,f,c	;volatile
  7594  002204                     
  7595                           ;io.c: 69:     if (_pwm_phase >= _pwm_period) _pwm_phase = 0;
  7596  002204  5051               	movf	__pwm_period^0,w,c	;volatile
  7597  002206  5C2F               	subwf	__pwm_phase^0,w,c	;volatile
  7598  002208  A0D8               	btfss	status,0,c
  7599  00220A  EF09  F011         	goto	u76_41
  7600  00220E  EF0B  F011         	goto	u76_40
  7601  002212                     u76_41:
  7602  002212  EF0C  F011         	goto	l1932
  7603  002216                     u76_40:
  7604  002216  6A2F               	clrf	__pwm_phase^0,c	;volatile
  7605  002218                     l1932:
  7606                           
  7607                           ;io.c: 71:     LATDbits.LATD1 = (_pwm_duty[0] > _pwm_phase) ? 1 : 0;
  7608  002218  5021               	movf	__pwm_duty^0,w,c	;volatile
  7609  00221A  5C2F               	subwf	__pwm_phase^0,w,c	;volatile
  7610  00221C  A0D8               	btfss	status,0,c
  7611  00221E  EF13  F011         	goto	u77_41
  7612  002222  EF17  F011         	goto	u77_40
  7613  002226                     u77_41:
  7614  002226  6A0C               	clrf	(btemp+11)^0,c
  7615  002228  2A0C               	incf	(btemp+11)^0,f,c
  7616  00222A  EF18  F011         	goto	u78_48
  7617  00222E                     u77_40:
  7618  00222E  6A0C               	clrf	(btemp+11)^0,c
  7619  002230                     u78_48:
  7620  002230  460C               	rlncf	(btemp+11)^0,f,c
  7621  002232  508C               	movf	140,w,c	;volatile
  7622  002234  180C               	xorwf	(btemp+11)^0,w,c
  7623  002236  0BFD               	andlw	-3
  7624  002238  180C               	xorwf	(btemp+11)^0,w,c
  7625  00223A  6E8C               	movwf	140,c	;volatile
  7626                           
  7627                           ;io.c: 72:     LATDbits.LATD2 = (_pwm_duty[1] > _pwm_phase) ? 1 : 0;
  7628  00223C  5022               	movf	(__pwm_duty+1)^0,w,c	;volatile
  7629  00223E  5C2F               	subwf	__pwm_phase^0,w,c	;volatile
  7630  002240  A0D8               	btfss	status,0,c
  7631  002242  EF25  F011         	goto	u79_41
  7632  002246  EF29  F011         	goto	u79_40
  7633  00224A                     u79_41:
  7634  00224A  6A0C               	clrf	(btemp+11)^0,c
  7635  00224C  2A0C               	incf	(btemp+11)^0,f,c
  7636  00224E  EF2A  F011         	goto	u80_48
  7637  002252                     u79_40:
  7638  002252  6A0C               	clrf	(btemp+11)^0,c
  7639  002254                     u80_48:
  7640  002254  460C               	rlncf	(btemp+11)^0,f,c
  7641  002256  460C               	rlncf	(btemp+11)^0,f,c
  7642  002258  508C               	movf	140,w,c	;volatile
  7643  00225A  180C               	xorwf	(btemp+11)^0,w,c
  7644  00225C  0BFB               	andlw	-5
  7645  00225E  180C               	xorwf	(btemp+11)^0,w,c
  7646  002260  6E8C               	movwf	140,c	;volatile
  7647                           
  7648                           ;io.c: 73:     LATDbits.LATD3 = (_pwm_duty[2] > _pwm_phase) ? 1 : 0;
  7649  002262  5023               	movf	(__pwm_duty+2)^0,w,c	;volatile
  7650  002264  5C2F               	subwf	__pwm_phase^0,w,c	;volatile
  7651  002266  A0D8               	btfss	status,0,c
  7652  002268  EF38  F011         	goto	u81_41
  7653  00226C  EF3C  F011         	goto	u81_40
  7654  002270                     u81_41:
  7655  002270  6A0C               	clrf	(btemp+11)^0,c
  7656  002272  2A0C               	incf	(btemp+11)^0,f,c
  7657  002274  EF3D  F011         	goto	u82_48
  7658  002278                     u81_40:
  7659  002278  6A0C               	clrf	(btemp+11)^0,c
  7660  00227A                     u82_48:
  7661  00227A  460C               	rlncf	(btemp+11)^0,f,c
  7662  00227C  460C               	rlncf	(btemp+11)^0,f,c
  7663  00227E  460C               	rlncf	(btemp+11)^0,f,c
  7664  002280  508C               	movf	140,w,c	;volatile
  7665  002282  180C               	xorwf	(btemp+11)^0,w,c
  7666  002284  0BF7               	andlw	-9
  7667  002286  180C               	xorwf	(btemp+11)^0,w,c
  7668  002288  6E8C               	movwf	140,c	;volatile
  7669                           
  7670                           ;io.c: 74:     LATDbits.LATD4 = (_pwm_duty[3] > _pwm_phase) ? 1 : 0;
  7671  00228A  5024               	movf	(__pwm_duty+3)^0,w,c	;volatile
  7672  00228C  5C2F               	subwf	__pwm_phase^0,w,c	;volatile
  7673  00228E  A0D8               	btfss	status,0,c
  7674  002290  EF4C  F011         	goto	u83_41
  7675  002294  EF50  F011         	goto	u83_40
  7676  002298                     u83_41:
  7677  002298  6A0C               	clrf	(btemp+11)^0,c
  7678  00229A  2A0C               	incf	(btemp+11)^0,f,c
  7679  00229C  EF51  F011         	goto	u84_48
  7680  0022A0                     u83_40:
  7681  0022A0  6A0C               	clrf	(btemp+11)^0,c
  7682  0022A2                     u84_48:
  7683  0022A2  3A0C               	swapf	(btemp+11)^0,f,c
  7684  0022A4  508C               	movf	140,w,c	;volatile
  7685  0022A6  180C               	xorwf	(btemp+11)^0,w,c
  7686  0022A8  0BEF               	andlw	-17
  7687  0022AA  180C               	xorwf	(btemp+11)^0,w,c
  7688  0022AC  6E8C               	movwf	140,c	;volatile
  7689  0022AE                     
  7690                           ; _pwm_tick: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  7691  0022AE  0012               	return		;funcret
  7692  0022B0                     __end_of_pwm_tick:
  7693                           	callstack 0
  7694                           
  7695 ;; *************** function _os_task_time_decrease *****************
  7696 ;; Defined at:
  7697 ;;		line 63 in file "kernel.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;		None
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;  i               1  [STACK] unsigned char 
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  1  [STACK] void 
  7704 ;; Registers used:
  7705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7711 ;;      Params:         0       0       0       0       0       0       0       0       0
  7712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7714 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7715 ;;Total ram usage:        0 bytes
  7716 ;; Hardware stack levels used: 1
  7717 ;; This function calls:
  7718 ;;		Nothing
  7719 ;; This function is called by:
  7720 ;;		_ISR_TIMER_0
  7721 ;; This function uses a reentrant model
  7722 ;;
  7723                           
  7724                           	psect	text46
  7725  0022B0                     __ptext46:
  7726                           	callstack 0
  7727  0022B0                     _os_task_time_decrease:
  7728                           	callstack 0
  7729                           
  7730                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7731  0022B0  52E6               	movf	postinc1,f,c
  7732  0022B2                     
  7733                           ;kernel.c: 65:     for (uint8_t i = 1; i < readyQueue.readyQueueSize; i++) {
  7734                           ;stkvar	_i @ sp[(-1)+0]
  7735  0022B2  0EFF               	movlw	-1
  7736  0022B4  6AE3               	clrf	plusw1,c
  7737  0022B6  2AE3               	incf	plusw1,f,c
  7738  0022B8  EF98  F011         	goto	l1732
  7739  0022BC                     l1724:
  7740                           
  7741                           ;kernel.c: 66:         if (readyQueue.readyQueue[i].task_state == WAITING) {
  7742                           ;stkvar	_i @ sp[(-1)+0]
  7743  0022BC  0EFF               	movlw	-1
  7744  0022BE  50E3               	movf	plusw1,w,c
  7745  0022C0  0D6A               	mullw	106
  7746  0022C2  0E84               	movlw	low (_readyQueue+3)
  7747  0022C4  24F3               	addwf	243,w,c
  7748  0022C6  6ED9               	movwf	fsr2l,c
  7749  0022C8  0E00               	movlw	high (_readyQueue+3)
  7750  0022CA  20F4               	addwfc	prodh,w,c
  7751  0022CC  6EDA               	movwf	fsr2h,c
  7752  0022CE  0E02               	movlw	2
  7753  0022D0  18DE               	xorwf	postinc2,w,c
  7754  0022D2  A4D8               	btfss	status,2,c
  7755  0022D4  EF6E  F011         	goto	u51_41
  7756  0022D8  EF70  F011         	goto	u51_40
  7757  0022DC                     u51_41:
  7758  0022DC  EF96  F011         	goto	l1730
  7759  0022E0                     u51_40:
  7760  0022E0                     
  7761                           ;kernel.c: 67:             readyQueue.readyQueue[i].task_time_to_waiting--;
  7762                           ;stkvar	_i @ sp[(-1)+0]
  7763  0022E0  0EFF               	movlw	-1
  7764  0022E2  50E3               	movf	plusw1,w,c
  7765  0022E4  0D6A               	mullw	106
  7766  0022E6  0E86               	movlw	low (_readyQueue+5)
  7767  0022E8  24F3               	addwf	243,w,c
  7768  0022EA  6ED9               	movwf	fsr2l,c
  7769  0022EC  0E00               	movlw	high (_readyQueue+5)
  7770  0022EE  20F4               	addwfc	prodh,w,c
  7771  0022F0  6EDA               	movwf	fsr2h,c
  7772  0022F2  06DF               	decf	indf2,f,c
  7773                           
  7774                           ;kernel.c: 68:             if (readyQueue.readyQueue[i].task_time_to_waiting == 0) {
  7775                           ;stkvar	_i @ sp[(-1)+0]
  7776  0022F4  0EFF               	movlw	-1
  7777  0022F6  50E3               	movf	plusw1,w,c
  7778  0022F8  0D6A               	mullw	106
  7779  0022FA  0E86               	movlw	low (_readyQueue+5)
  7780  0022FC  24F3               	addwf	243,w,c
  7781  0022FE  6ED9               	movwf	fsr2l,c
  7782  002300  0E00               	movlw	high (_readyQueue+5)
  7783  002302  20F4               	addwfc	prodh,w,c
  7784  002304  6EDA               	movwf	fsr2h,c
  7785  002306  50DF               	movf	indf2,w,c
  7786  002308  A4D8               	btfss	status,2,c
  7787  00230A  EF89  F011         	goto	u52_41
  7788  00230E  EF8B  F011         	goto	u52_40
  7789  002312                     u52_41:
  7790  002312  EF96  F011         	goto	l1730
  7791  002316                     u52_40:
  7792  002316                     
  7793                           ;kernel.c: 70:                 readyQueue.readyQueue[i].task_state = READY;
  7794                           ;stkvar	_i @ sp[(-1)+0]
  7795  002316  0EFF               	movlw	-1
  7796  002318  50E3               	movf	plusw1,w,c
  7797  00231A  0D6A               	mullw	106
  7798  00231C  0E84               	movlw	low (_readyQueue+3)
  7799  00231E  24F3               	addwf	243,w,c
  7800  002320  6ED9               	movwf	fsr2l,c
  7801  002322  0E00               	movlw	high (_readyQueue+3)
  7802  002324  20F4               	addwfc	prodh,w,c
  7803  002326  6EDA               	movwf	fsr2h,c
  7804  002328  0E00               	movlw	0
  7805  00232A  6EDF               	movwf	indf2,c
  7806  00232C                     l1730:
  7807                           
  7808                           ;kernel.c: 73:     }
  7809                           ;stkvar	_i @ sp[(-1)+0]
  7810  00232C  0EFF               	movlw	-1
  7811  00232E  2AE3               	incf	plusw1,f,c
  7812  002330                     l1732:
  7813  002330  EE22  F093         	lfsr	2,_readyQueue+530
  7814                           
  7815                           ;stkvar	_i @ sp[(-1)+0]
  7816  002334  0EFF               	movlw	-1
  7817  002336  CFE3 F001          	movff	plusw1,btemp
  7818  00233A  50DE               	movf	postinc2,w,c
  7819  00233C  5C01               	subwf	btemp^0,w,c
  7820  00233E  A0D8               	btfss	status,0,c
  7821  002340  EFA4  F011         	goto	u53_41
  7822  002344  EFA6  F011         	goto	u53_40
  7823  002348                     u53_41:
  7824  002348  EF5E  F011         	goto	l1724
  7825  00234C                     u53_40:
  7826  00234C                     
  7827                           ; _os_task_time_decrease: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 0, argsize = 0, vargsize = 0
  7828  00234C  52E5               	movf	postdec1,f,c
  7829  00234E  0012               	return		;funcret
  7830  002350                     __end_of_os_task_time_decrease:
  7831                           	callstack 0
  7832                           
  7833 ;; *************** function _exti_isr *****************
  7834 ;; Defined at:
  7835 ;;		line 98 in file "io.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;		None
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;		None
  7840 ;; Return value:  Size  Location     Type
  7841 ;;                  1  [STACK] void 
  7842 ;; Registers used:
  7843 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
  7844 ;; Tracked objects:
  7845 ;;		On entry : 0/0
  7846 ;;		On exit  : 0/0
  7847 ;;		Unchanged: 0/0
  7848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7849 ;;      Params:         0       0       0       0       0       0       0       0       0
  7850 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7851 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7852 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7853 ;;Total ram usage:        0 bytes
  7854 ;; Hardware stack levels used: 1
  7855 ;; Hardware stack levels required when called: 1
  7856 ;; This function calls:
  7857 ;;		Absolute function
  7858 ;;		_isr_button_toggle
  7859 ;; This function is called by:
  7860 ;;		_ISR_TIMER_0
  7861 ;; This function uses a reentrant model
  7862 ;;
  7863                           
  7864                           	psect	text47
  7865  0027B2                     __ptext47:
  7866                           	callstack 0
  7867  0027B2                     _exti_isr:
  7868                           	callstack 16
  7869  0027B2                     
  7870                           ;io.c: 100:     if (INTCONbits.INT0IF) {
  7871  0027B2  A2F2               	btfss	242,1,c	;volatile
  7872  0027B4  EFDE  F013         	goto	u85_41
  7873  0027B8  EFE0  F013         	goto	u85_40
  7874  0027BC                     u85_41:
  7875  0027BC  EFF7  F013         	goto	l576
  7876  0027C0                     u85_40:
  7877  0027C0                     
  7878                           ;io.c: 101:         INTCONbits.INT0IF = 0;
  7879  0027C0  92F2               	bcf	242,1,c	;volatile
  7880  0027C2                     
  7881                           ;io.c: 102:         if (_exti_cb) _exti_cb();
  7882  0027C2  502D               	movf	__exti_cb^0,w,c
  7883  0027C4  102E               	iorwf	(__exti_cb+1)^0,w,c
  7884  0027C6  B4D8               	btfsc	status,2,c
  7885  0027C8  EFE8  F013         	goto	u86_41
  7886  0027CC  EFEA  F013         	goto	u86_40
  7887  0027D0                     u86_41:
  7888  0027D0  EFF7  F013         	goto	l576
  7889  0027D4                     u86_40:
  7890  0027D4  D802               	call	u87_48
  7891  0027D6  EFF7  F013         	goto	u87_49
  7892  0027DA                     u87_48:
  7893  0027DA  0005               	push	
  7894  0027DC  6EFA               	movwf	pclath,c
  7895  0027DE  502D               	movf	__exti_cb^0,w,c
  7896  0027E0  6EFD               	movwf	tosl,c
  7897  0027E2  502E               	movf	(__exti_cb+1)^0,w,c
  7898  0027E4  6EFE               	movwf	tosh,c
  7899  0027E6  50F8               	movf	tblptru,w,c
  7900  0027E8  6EFF               	movwf	tosu,c
  7901  0027EA  50FA               	movf	pclath,w,c
  7902  0027EC  0012               	return		;indir
  7903  0027EE                     u87_49:
  7904  0027EE                     l576:
  7905                           
  7906                           ; _exti_isr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  7907  0027EE  0012               	return		;funcret
  7908  0027F0                     __end_of_exti_isr:
  7909                           	callstack 0
  7910                           
  7911 ;; *************** function _isr_button_toggle *****************
  7912 ;; Defined at:
  7913 ;;		line 32 in file "user_app.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;		None
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;		None
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  1  [STACK] void 
  7920 ;; Registers used:
  7921 ;;		wreg, status,2
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7927 ;;      Params:         0       0       0       0       0       0       0       0       0
  7928 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7929 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7930 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7931 ;;Total ram usage:        0 bytes
  7932 ;; Hardware stack levels used: 1
  7933 ;; This function calls:
  7934 ;;		Nothing
  7935 ;; This function is called by:
  7936 ;;		_config_app
  7937 ;;		_exti_isr
  7938 ;; This function uses a reentrant model
  7939 ;;
  7940                           
  7941                           	psect	text48
  7942  002930                     __ptext48:
  7943                           	callstack 0
  7944  002930                     _isr_button_toggle:
  7945                           	callstack 16
  7946  002930                     
  7947                           ;user_app.c: 35:     g_flight_enabled = !g_flight_enabled;
  7948  002930  5052               	movf	_g_flight_enabled^0,w,c	;volatile
  7949  002932  B4D8               	btfsc	status,2,c
  7950  002934  EF9E  F014         	goto	u36_41
  7951  002938  EFA1  F014         	goto	u36_40
  7952  00293C                     u36_41:
  7953  00293C  0E01               	movlw	1
  7954  00293E  EFA2  F014         	goto	u37_40
  7955  002942                     u36_40:
  7956  002942  0E00               	movlw	0
  7957  002944                     u37_40:
  7958  002944  6E52               	movwf	_g_flight_enabled^0,c	;volatile
  7959  002946                     
  7960                           ; _isr_button_toggle: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7961  002946  0012               	return		;funcret
  7962  002948                     __end_of_isr_button_toggle:
  7963                           	callstack 0
  7964  0000                     
  7965                           	psect	text49
  7966  000000                     __ptext49:
  7967                           	callstack 0
  7968  000000                     
  7969                           	psect	rparam
  7970  0000                     
  7971                           	psect	temp
  7972  000001                     btemp:
  7973                           	callstack 0
  7974  000001                     	ds	32
  7975  0000                     wtemp0	set	btemp
  7976  0000                     wtemp1	set	btemp+2
  7977  0000                     wtemp2	set	btemp+4
  7978  0000                     wtemp3	set	btemp+6
  7979  0000                     wtemp4	set	btemp+8
  7980  0000                     wtemp5	set	btemp+10
  7981  0000                     wtemp8	set	btemp+1
  7982  0000                     ttemp0	set	btemp
  7983  0000                     ttemp1	set	btemp+3
  7984  0000                     ttemp2	set	btemp+6
  7985  0000                     ttemp3	set	btemp+9
  7986  0000                     ttemp5	set	btemp+1
  7987  0000                     ttemp6	set	btemp+4
  7988  0000                     ttemp7	set	btemp+8
  7989  0000                     ltemp0	set	btemp
  7990  0000                     ltemp1	set	btemp+4
  7991  0000                     ltemp2	set	btemp+8
  7992  0000                     lltemp0	set	btemp
  7993  0000                     lltemp1	set	btemp+8
  7994  0000                     lltemp2	set	btemp+16
  7995  0000                     lltemp3	set	btemp+24
  7996                           
  7997                           	psect	config
  7998                           
  7999                           ;Config register CONFIG1L @ 0x300000
  8000                           ;	unspecified, using default values
  8001                           ;	PLL Prescaler Selection bits
  8002                           ;	PLLDIV = 0x0, unprogrammed default
  8003                           ;	System Clock Postscaler Selection bits
  8004                           ;	CPUDIV = 0x0, unprogrammed default
  8005                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8006                           ;	USBDIV = 0x0, unprogrammed default
  8007  300000                     	org	3145728
  8008  300000  00                 	db	0
  8009                           
  8010                           ;Config register CONFIG1H @ 0x300001
  8011                           ;	Oscillator Selection bits
  8012                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  8013                           ;	Fail-Safe Clock Monitor Enable bit
  8014                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8015                           ;	Internal/External Oscillator Switchover bit
  8016                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8017  300001                     	org	3145729
  8018  300001  08                 	db	8
  8019                           
  8020                           ;Config register CONFIG2L @ 0x300002
  8021                           ;	Power-up Timer Enable bit
  8022                           ;	PWRT = ON, PWRT enabled
  8023                           ;	Brown-out Reset Enable bits
  8024                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8025                           ;	Brown-out Reset Voltage bits
  8026                           ;	BORV = 0x3, unprogrammed default
  8027                           ;	USB Voltage Regulator Enable bit
  8028                           ;	VREGEN = 0x0, unprogrammed default
  8029  300002                     	org	3145730
  8030  300002  18                 	db	24
  8031                           
  8032                           ;Config register CONFIG2H @ 0x300003
  8033                           ;	Watchdog Timer Enable bit
  8034                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8035                           ;	Watchdog Timer Postscale Select bits
  8036                           ;	WDTPS = 0xF, unprogrammed default
  8037  300003                     	org	3145731
  8038  300003  1E                 	db	30
  8039                           
  8040                           ; Padding undefined space
  8041  300004                     	org	3145732
  8042  300004  FF                 	db	255
  8043                           
  8044                           ;Config register CONFIG3H @ 0x300005
  8045                           ;	CCP2 MUX bit
  8046                           ;	CCP2MX = 0x1, unprogrammed default
  8047                           ;	PORTB A/D Enable bit
  8048                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8049                           ;	Low-Power Timer 1 Oscillator Enable bit
  8050                           ;	LPT1OSC = 0x0, unprogrammed default
  8051                           ;	MCLR Pin Enable bit
  8052                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8053  300005                     	org	3145733
  8054  300005  81                 	db	129
  8055                           
  8056                           ;Config register CONFIG4L @ 0x300006
  8057                           ;	Stack Full/Underflow Reset Enable bit
  8058                           ;	STVREN = 0x1, unprogrammed default
  8059                           ;	Single-Supply ICSP Enable bit
  8060                           ;	LVP = OFF, Single-Supply ICSP disabled
  8061                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8062                           ;	ICPRT = 0x0, unprogrammed default
  8063                           ;	Extended Instruction Set Enable bit
  8064                           ;	XINST = 0x0, unprogrammed default
  8065                           ;	Background Debugger Enable bit
  8066                           ;	DEBUG = 0x1, unprogrammed default
  8067  300006                     	org	3145734
  8068  300006  81                 	db	129
  8069                           
  8070                           ; Padding undefined space
  8071  300007                     	org	3145735
  8072  300007  FF                 	db	255
  8073                           tosu	equ	0xFFF
  8074                           tosh	equ	0xFFE
  8075                           tosl	equ	0xFFD
  8076                           stkptr	equ	0xFFC
  8077                           pclatu	equ	0xFFB
  8078                           pclath	equ	0xFFA
  8079                           pcl	equ	0xFF9
  8080                           tblptru	equ	0xFF8
  8081                           tblptrh	equ	0xFF7
  8082                           tblptrl	equ	0xFF6
  8083                           tablat	equ	0xFF5
  8084                           prodh	equ	0xFF4
  8085                           prodl	equ	0xFF3
  8086                           indf0	equ	0xFEF
  8087                           postinc0	equ	0xFEE
  8088                           postdec0	equ	0xFED
  8089                           preinc0	equ	0xFEC
  8090                           plusw0	equ	0xFEB
  8091                           fsr0h	equ	0xFEA
  8092                           fsr0l	equ	0xFE9
  8093                           wreg	equ	0xFE8
  8094                           indf1	equ	0xFE7
  8095                           postinc1	equ	0xFE6
  8096                           postdec1	equ	0xFE5
  8097                           preinc1	equ	0xFE4
  8098                           plusw1	equ	0xFE3
  8099                           fsr1h	equ	0xFE2
  8100                           fsr1l	equ	0xFE1
  8101                           bsr	equ	0xFE0
  8102                           indf2	equ	0xFDF
  8103                           postinc2	equ	0xFDE
  8104                           postdec2	equ	0xFDD
  8105                           preinc2	equ	0xFDC
  8106                           plusw2	equ	0xFDB
  8107                           fsr2h	equ	0xFDA
  8108                           fsr2l	equ	0xFD9
  8109                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         1108
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     18      50
    BANK0           160      0      33
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    g_speeds_mutex.wait_queue.task_func	PTR FTN()void  size(2) Largest target is 0
		 -> os_idle_task(), task_battery(), task_sensors(), task_motors(), 
		 -> task_central(), 

    g_speeds_mutex.owner.task_func	PTR FTN()void  size(2) Largest target is 0
		 -> os_idle_task(), task_battery(), task_sensors(), task_motors(), 
		 -> task_central(), 

    g_pipe.sem_queue.task_func	PTR FTN()void  size(2) Largest target is 0
		 -> os_idle_task(), task_battery(), task_sensors(), task_motors(), 
		 -> task_central(), 

    g_pipe.sem_queue	PTR struct tcb[5] size(2) Largest target is 0
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    readyQueue.task_func	PTR FTN()void  size(2) Largest target is 0
		 -> os_idle_task(), task_battery(), task_sensors(), task_motors(), 
		 -> task_central(), 

    cb	PTR FTN()void  size(2) Largest target is 1
		 -> isr_button_toggle(), 

    _exti_cb	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), isr_button_toggle(), 

    pSegA	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pSegB	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    temp	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    data	PTR unsigned char  size(2) Largest target is 5
		 -> smsg(STACK[5]), mtype(STACK[1]), 

    p	PTR struct pipe size(2) Largest target is 44
		 -> g_pipe(BANK0[33]), 

    data	PTR const unsigned char  size(2) Largest target is 5
		 -> type(STACK[1]), msg(STACK[5]), 

    p	PTR struct pipe size(2) Largest target is 44
		 -> g_pipe(BANK0[33]), 

    p.pipe_sem_write.sem_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    p.pipe_sem_read.sem_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    p.pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p	PTR struct pipe size(2) Largest target is 44
		 -> g_pipe(BANK0[33]), 

    buffer	PTR unsigned char  size(2) Largest target is 5
		 -> smsg(STACK[5]), mtype(STACK[1]), 

    p.pipe_sem_write.sem_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    p.pipe_sem_read.sem_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    p.pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p	PTR struct pipe size(2) Largest target is 44
		 -> g_pipe(BANK0[33]), 

    p.pipe_sem_write.sem_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    p.pipe_sem_read.sem_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    p.pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p.pipe_sem_write.sem_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    p.pipe_sem_read.sem_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    p.pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p	PTR struct pipe size(2) Largest target is 44
		 -> g_pipe(BANK0[33]), 

    m.owner.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), task_battery(), task_sensors(), task_motors(), 
		 -> task_central(), 

    next.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), task_battery(), task_sensors(), task_motors(), 
		 -> task_central(), 

    next	PTR struct tcb size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    m.wait_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    m.owner	PTR struct tcb size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    m	PTR struct mutex size(2) Largest target is 21
		 -> g_speeds_mutex(COMRAM[15]), 

    m.wait_queue.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), task_battery(), task_sensors(), task_motors(), 
		 -> task_central(), 

    m.owner.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), task_battery(), task_sensors(), task_motors(), 
		 -> task_central(), 

    m.wait_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    m.owner	PTR struct tcb size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    m	PTR struct mutex size(2) Largest target is 21
		 -> g_speeds_mutex(COMRAM[15]), 

    m.owner.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), task_battery(), task_sensors(), task_motors(), 
		 -> task_central(), 

    m.wait_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    m.owner	PTR struct tcb size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    m.wait_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    m.owner	PTR struct tcb size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    m	PTR struct mutex size(2) Largest target is 21
		 -> g_speeds_mutex(COMRAM[15]), 

    s.sem_queue.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), task_battery(), task_sensors(), task_motors(), 
		 -> task_central(), 

    s.sem_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    s	PTR struct semaphore size(2) Largest target is 44
		 -> g_pipe(BANK0[33]), 

    s.sem_queue.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), task_battery(), task_sensors(), task_motors(), 
		 -> task_central(), 

    s.sem_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    s	PTR struct semaphore size(2) Largest target is 44
		 -> g_pipe(BANK0[33]), 

    s.sem_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    s	PTR struct semaphore size(2) Largest target is 44
		 -> g_pipe(BANK0[33]), 

    sp__priority_scheduler	PTR struct tcb size(2) Largest target is 534
		 -> readyQueue.readyQueue(BIGRAM[530]), readyQueue(BIGRAM[533]), 

    sp__rr_scheduler	PTR struct tcb size(2) Largest target is 534
		 -> readyQueue.readyQueue(BIGRAM[530]), readyQueue(BIGRAM[533]), 

    readyQueue.taskRunning.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), task_battery(), task_sensors(), task_motors(), 
		 -> task_central(), 

    task_f	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), task_battery(), task_sensors(), task_motors(), 
		 -> task_central(), 

    new_task.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), task_battery(), task_sensors(), task_motors(), 
		 -> task_central(), 

    g_pipe.pipe_sem_write.sem_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    S367semaphore$sem_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    g_pipe.pipe_sem_read.sem_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    S372pipe$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    g_pipe.pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    S361mutex$wait_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    g_speeds_mutex.wait_queue	PTR struct tcb[5] size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    S361mutex$owner	PTR struct tcb size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    g_speeds_mutex.owner	PTR struct tcb size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    S67tcb$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), task_battery(), task_sensors(), task_motors(), 
		 -> task_central(), 

    readyQueue.readyQueue.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), task_battery(), task_sensors(), task_motors(), 
		 -> task_central(), 

    task	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), task_battery(), task_sensors(), task_motors(), 
		 -> task_central(), 

    S78f_aptos$taskRunning	PTR struct tcb size(2) Largest target is 534
		 -> NULL(NULL[0]), readyQueue(BIGRAM[533]), 

    readyQueue.taskRunning	PTR struct tcb size(2) Largest target is 534
		 -> readyQueue.readyQueue(BIGRAM[530]), NULL(NULL[0]), readyQueue(BIGRAM[533]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _os_idle_task in COMRAM

    None.

Critical Paths under _os_idle_task in COMRAM

    None.

Critical Paths under _task_motors in COMRAM

    None.

Critical Paths under _task_sensors in COMRAM

    None.

Critical Paths under _task_battery in COMRAM

    None.

Critical Paths under _task_central in COMRAM

    None.

Critical Paths under _task_motors in COMRAM

    None.

Critical Paths under _task_sensors in COMRAM

    None.

Critical Paths under _task_battery in COMRAM

    None.

Critical Paths under _task_central in COMRAM

    None.

Critical Paths under _ISR_TIMER_0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _os_idle_task in BANK0

    None.

Critical Paths under _os_idle_task in BANK0

    None.

Critical Paths under _task_motors in BANK0

    None.

Critical Paths under _task_sensors in BANK0

    None.

Critical Paths under _task_battery in BANK0

    None.

Critical Paths under _task_central in BANK0

    None.

Critical Paths under _task_motors in BANK0

    None.

Critical Paths under _task_sensors in BANK0

    None.

Critical Paths under _task_battery in BANK0

    None.

Critical Paths under _task_central in BANK0

    None.

Critical Paths under _ISR_TIMER_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _os_idle_task in BANK1

    None.

Critical Paths under _os_idle_task in BANK1

    None.

Critical Paths under _task_motors in BANK1

    None.

Critical Paths under _task_sensors in BANK1

    None.

Critical Paths under _task_battery in BANK1

    None.

Critical Paths under _task_central in BANK1

    None.

Critical Paths under _task_motors in BANK1

    None.

Critical Paths under _task_sensors in BANK1

    None.

Critical Paths under _task_battery in BANK1

    None.

Critical Paths under _task_central in BANK1

    None.

Critical Paths under _ISR_TIMER_0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _os_idle_task in BANK2

    None.

Critical Paths under _os_idle_task in BANK2

    None.

Critical Paths under _task_motors in BANK2

    None.

Critical Paths under _task_sensors in BANK2

    None.

Critical Paths under _task_battery in BANK2

    None.

Critical Paths under _task_central in BANK2

    None.

Critical Paths under _task_motors in BANK2

    None.

Critical Paths under _task_sensors in BANK2

    None.

Critical Paths under _task_battery in BANK2

    None.

Critical Paths under _task_central in BANK2

    None.

Critical Paths under _ISR_TIMER_0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _os_idle_task in BANK3

    None.

Critical Paths under _os_idle_task in BANK3

    None.

Critical Paths under _task_motors in BANK3

    None.

Critical Paths under _task_sensors in BANK3

    None.

Critical Paths under _task_battery in BANK3

    None.

Critical Paths under _task_central in BANK3

    None.

Critical Paths under _task_motors in BANK3

    None.

Critical Paths under _task_sensors in BANK3

    None.

Critical Paths under _task_battery in BANK3

    None.

Critical Paths under _task_central in BANK3

    None.

Critical Paths under _ISR_TIMER_0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _os_idle_task in BANK4

    None.

Critical Paths under _os_idle_task in BANK4

    None.

Critical Paths under _task_motors in BANK4

    None.

Critical Paths under _task_sensors in BANK4

    None.

Critical Paths under _task_battery in BANK4

    None.

Critical Paths under _task_central in BANK4

    None.

Critical Paths under _task_motors in BANK4

    None.

Critical Paths under _task_sensors in BANK4

    None.

Critical Paths under _task_battery in BANK4

    None.

Critical Paths under _task_central in BANK4

    None.

Critical Paths under _ISR_TIMER_0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _os_idle_task in BANK5

    None.

Critical Paths under _os_idle_task in BANK5

    None.

Critical Paths under _task_motors in BANK5

    None.

Critical Paths under _task_sensors in BANK5

    None.

Critical Paths under _task_battery in BANK5

    None.

Critical Paths under _task_central in BANK5

    None.

Critical Paths under _task_motors in BANK5

    None.

Critical Paths under _task_sensors in BANK5

    None.

Critical Paths under _task_battery in BANK5

    None.

Critical Paths under _task_central in BANK5

    None.

Critical Paths under _ISR_TIMER_0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _os_idle_task in BANK6

    None.

Critical Paths under _os_idle_task in BANK6

    None.

Critical Paths under _task_motors in BANK6

    None.

Critical Paths under _task_sensors in BANK6

    None.

Critical Paths under _task_battery in BANK6

    None.

Critical Paths under _task_central in BANK6

    None.

Critical Paths under _task_motors in BANK6

    None.

Critical Paths under _task_sensors in BANK6

    None.

Critical Paths under _task_battery in BANK6

    None.

Critical Paths under _task_central in BANK6

    None.

Critical Paths under _ISR_TIMER_0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _os_idle_task in BANK7

    None.

Critical Paths under _os_idle_task in BANK7

    None.

Critical Paths under _task_motors in BANK7

    None.

Critical Paths under _task_sensors in BANK7

    None.

Critical Paths under _task_battery in BANK7

    None.

Critical Paths under _task_central in BANK7

    None.

Critical Paths under _task_motors in BANK7

    None.

Critical Paths under _task_sensors in BANK7

    None.

Critical Paths under _task_battery in BANK7

    None.

Critical Paths under _task_central in BANK7

    None.

Critical Paths under _ISR_TIMER_0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1909
                          _os_config
                     _os_create_task
                           _os_start
 ---------------------------------------------------------------------------------
 (1) _os_start                                             0     0      0    1579
                       _SRAMInitHeap
                    _conf_interrupts
             _conf_osc_internal_8MHz
                       _conf_timer_0
                         _config_app
 ---------------------------------------------------------------------------------
 (2) _config_app                                           0     0      0    1489
                             _adc_go
                         _config_adc
                        _create_pipe
                        _exti_enable
                          _exti_init
                  _exti_set_callback
                         _mutex_init
                           _pwm_init
                        _set_channel
                           _set_port
 ---------------------------------------------------------------------------------
 (3) _set_port                                             1     0      1      22
 ---------------------------------------------------------------------------------
 (8) _set_channel                                          1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _pwm_init                                             3     2      1      68
 ---------------------------------------------------------------------------------
 (3) _mutex_init                                           2     0      2      88
 ---------------------------------------------------------------------------------
 (3) _exti_set_callback                                    2     0      2      22
 ---------------------------------------------------------------------------------
 (3) _exti_init                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _exti_enable                                          1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _create_pipe                                          2     0      2    1157
                          _SRAMalloc
                           _sem_init
 ---------------------------------------------------------------------------------
 (4) _sem_init                                             3     0      3      88
 ---------------------------------------------------------------------------------
 (4) _SRAMalloc                                            7     6      1     893
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (5) __SRAMmerge                                           7     5      2     402
 ---------------------------------------------------------------------------------
 (3) _config_adc                                           2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _adc_go                                               2     0      2      22
 ---------------------------------------------------------------------------------
 (2) _conf_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_osc_internal_8MHz                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0      90
 ---------------------------------------------------------------------------------
 (1) _os_config                                            0     0      0     165
                     _os_create_task
 ---------------------------------------------------------------------------------
 (1) _os_create_task                                     110   106      4     165
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _os_idle_task                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _os_idle_task                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_motors                                          4     4      0    2759
                         _mutex_lock
                       _mutex_unlock
                           _os_delay
                       _pwm_set_duty
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty                                         2     0      2      60
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             1     0      1     771
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         4     2      2     561
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           2     0      2    1199
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     749
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (15) _priority_scheduler                                  6     6      0     749
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (16) _os_task_pos                                         3     1      2      90
 ---------------------------------------------------------------------------------
 (16) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_sensors                                         5     5      0    3077
                           _os_delay
                   _pipe_write_block
                   _read_adc_channel
 ---------------------------------------------------------------------------------
 (7) _read_adc_channel                                     1     0      1      44
                           _adc_read
                        _set_channel
 ---------------------------------------------------------------------------------
 (8) _set_channel                                          1     0      1      22
 ---------------------------------------------------------------------------------
 (8) _adc_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _pipe_write_block                                     6     1      5    2189
                         _write_pipe
 ---------------------------------------------------------------------------------
 (8) _write_pipe                                           3     0      3    2077
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (9) _sem_wait                                             2     0      2    1177
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (9) _sem_post                                             2     0      2     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             1     0      1     771
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     749
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (15) _priority_scheduler                                  6     6      0     749
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (16) _os_task_pos                                         3     1      2      90
 ---------------------------------------------------------------------------------
 (16) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_battery                                         7     7      0    3145
                           _os_delay
                   _pipe_write_block
                   _read_adc_channel
 ---------------------------------------------------------------------------------
 (7) _read_adc_channel                                     1     0      1      44
                           _adc_read
                        _set_channel
 ---------------------------------------------------------------------------------
 (8) _set_channel                                          1     0      1      22
 ---------------------------------------------------------------------------------
 (8) _adc_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _pipe_write_block                                     6     1      5    2189
                         _write_pipe
 ---------------------------------------------------------------------------------
 (8) _write_pipe                                           3     0      3    2077
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (9) _sem_wait                                             2     0      2    1177
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (9) _sem_post                                             2     0      2     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             1     0      1     771
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     749
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (15) _priority_scheduler                                  6     6      0     749
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (16) _os_task_pos                                         3     1      2      90
 ---------------------------------------------------------------------------------
 (16) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_central                                        38    38      0    5682
                         _mutex_lock
                       _mutex_unlock
                           _os_yield
                    _pipe_read_block
 ---------------------------------------------------------------------------------
 (7) _pipe_read_block                                      6     1      5    2189
                          _read_pipe
 ---------------------------------------------------------------------------------
 (8) _read_pipe                                            4     0      4    2077
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (9) _sem_wait                                             2     0      2    1177
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (9) _sem_post                                             2     0      2     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _os_yield                                             0     0      0     749
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         4     2      2     561
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           2     0      2    1199
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     749
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (15) _priority_scheduler                                  6     6      0     749
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (16) _os_task_pos                                         3     1      2      90
 ---------------------------------------------------------------------------------
 (16) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_motors                                          4     4      0    2759
                         _mutex_lock
                       _mutex_unlock
                           _os_delay
                       _pwm_set_duty
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty                                         2     0      2      60
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             1     0      1     771
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         4     2      2     561
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           2     0      2    1199
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     749
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (15) _priority_scheduler                                  6     6      0     749
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (16) _os_task_pos                                         3     1      2      90
 ---------------------------------------------------------------------------------
 (16) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_sensors                                         5     5      0    3077
                           _os_delay
                   _pipe_write_block
                   _read_adc_channel
 ---------------------------------------------------------------------------------
 (7) _read_adc_channel                                     1     0      1      44
                           _adc_read
                        _set_channel
 ---------------------------------------------------------------------------------
 (8) _set_channel                                          1     0      1      22
 ---------------------------------------------------------------------------------
 (8) _adc_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _pipe_write_block                                     6     1      5    2189
                         _write_pipe
 ---------------------------------------------------------------------------------
 (8) _write_pipe                                           3     0      3    2077
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (9) _sem_wait                                             2     0      2    1177
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (9) _sem_post                                             2     0      2     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             1     0      1     771
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     749
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (15) _priority_scheduler                                  6     6      0     749
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (16) _os_task_pos                                         3     1      2      90
 ---------------------------------------------------------------------------------
 (16) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_battery                                         7     7      0    3145
                           _os_delay
                   _pipe_write_block
                   _read_adc_channel
 ---------------------------------------------------------------------------------
 (7) _read_adc_channel                                     1     0      1      44
                           _adc_read
                        _set_channel
 ---------------------------------------------------------------------------------
 (8) _set_channel                                          1     0      1      22
 ---------------------------------------------------------------------------------
 (8) _adc_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _pipe_write_block                                     6     1      5    2189
                         _write_pipe
 ---------------------------------------------------------------------------------
 (8) _write_pipe                                           3     0      3    2077
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (9) _sem_wait                                             2     0      2    1177
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (9) _sem_post                                             2     0      2     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             1     0      1     771
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     749
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (15) _priority_scheduler                                  6     6      0     749
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (16) _os_task_pos                                         3     1      2      90
 ---------------------------------------------------------------------------------
 (16) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_central                                        38    38      0    5682
                         _mutex_lock
                       _mutex_unlock
                           _os_yield
                    _pipe_read_block
 ---------------------------------------------------------------------------------
 (7) _pipe_read_block                                      6     1      5    2189
                          _read_pipe
 ---------------------------------------------------------------------------------
 (8) _read_pipe                                            4     0      4    2077
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (9) _sem_wait                                             2     0      2    1177
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (9) _sem_post                                             2     0      2     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _os_yield                                             0     0      0     749
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         4     2      2     561
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           2     0      2    1199
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     749
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (15) _priority_scheduler                                  6     6      0     749
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (16) _os_task_pos                                         3     1      2      90
 ---------------------------------------------------------------------------------
 (16) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _ISR_TIMER_0                                        18    18      0     824
                                              0 COMRAM    18    18      0
                           _exti_isr
              _os_task_time_decrease
                           _pwm_tick
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     749
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (15) _priority_scheduler                                  6     6      0     749
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (16) _os_task_pos                                         3     1      2      90
 ---------------------------------------------------------------------------------
 (16) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (14) _pwm_tick                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _os_task_time_decrease                               1     1      0      75
 ---------------------------------------------------------------------------------
 (14) _exti_isr                                            0     0      0       0
                   Absolute function *
                  _isr_button_toggle *
 ---------------------------------------------------------------------------------
 (15) _isr_button_toggle                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _os_config
     _os_create_task
   _os_create_task
   _os_start
     _SRAMInitHeap
     _conf_interrupts
     _conf_osc_internal_8MHz
     _conf_timer_0
     _config_app
       _adc_go
       _config_adc
       _create_pipe
         _SRAMalloc
           __SRAMmerge
         _sem_init
       _exti_enable
       _exti_init
       _exti_set_callback
       _mutex_init
       _pwm_init
       _set_channel
       _set_port

 _os_idle_task (ROOT)

 _os_idle_task (ROOT)

 _task_motors (ROOT)
   _mutex_lock
     ___awmod
     _scheduler
       _priority_scheduler
         ___awmod
         _os_task_pos
   _mutex_unlock
     ___awmod
   _os_delay
     _scheduler
   _pwm_set_duty

 _task_sensors (ROOT)
   _os_delay
     _scheduler
       _priority_scheduler
         ___awmod
         _os_task_pos
   _pipe_write_block
     _write_pipe
       ___awmod
       _sem_post
         ___awmod
       _sem_wait
         ___awmod
         _scheduler
   _read_adc_channel
     _adc_read
     _set_channel

 _task_battery (ROOT)
   _os_delay
     _scheduler
       _priority_scheduler
         ___awmod
         _os_task_pos
   _pipe_write_block
     _write_pipe
       ___awmod
       _sem_post
         ___awmod
       _sem_wait
         ___awmod
         _scheduler
   _read_adc_channel
     _adc_read
     _set_channel

 _task_central (ROOT)
   _mutex_lock
     ___awmod
     _scheduler
       _priority_scheduler
         ___awmod
         _os_task_pos
   _mutex_unlock
     ___awmod
   _os_yield
     _scheduler
   _pipe_read_block
     _read_pipe
       ___awmod
       _sem_post
         ___awmod
       _sem_wait
         ___awmod
         _scheduler

 _task_motors (ROOT)
   _mutex_lock
     ___awmod
     _scheduler
       _priority_scheduler
         ___awmod
         _os_task_pos
   _mutex_unlock
     ___awmod
   _os_delay
     _scheduler
   _pwm_set_duty

 _task_sensors (ROOT)
   _os_delay
     _scheduler
       _priority_scheduler
         ___awmod
         _os_task_pos
   _pipe_write_block
     _write_pipe
       ___awmod
       _sem_post
         ___awmod
       _sem_wait
         ___awmod
         _scheduler
   _read_adc_channel
     _adc_read
     _set_channel

 _task_battery (ROOT)
   _os_delay
     _scheduler
       _priority_scheduler
         ___awmod
         _os_task_pos
   _pipe_write_block
     _write_pipe
       ___awmod
       _sem_post
         ___awmod
       _sem_wait
         ___awmod
         _scheduler
   _read_adc_channel
     _adc_read
     _set_channel

 _task_central (ROOT)
   _mutex_lock
     ___awmod
     _scheduler
       _priority_scheduler
         ___awmod
         _os_task_pos
   _mutex_unlock
     ___awmod
   _os_yield
     _scheduler
   _pipe_read_block
     _read_pipe
       ___awmod
       _sem_post
         ___awmod
       _sem_wait
         ___awmod
         _scheduler

 _ISR_TIMER_0 (ROOT)
   _exti_isr
     Absolute function(Fake) *
     _isr_button_toggle *
   _os_task_time_decrease
   _pwm_tick
   _scheduler
     _priority_scheduler
       ___awmod
       _os_task_pos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     415      34       51.1%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      21       5       20.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     12      32       1       79.4%
BITBIGSFRlhhlll     2A      0       0      26        0.0%
BITBIGSFRllll       21      0       0      32        0.0%
BITBIGSFRlhhlll      E      0       0      25        0.0%
BITBIGSFRh           9      0       0      20        0.0%
BITBIGSFRlhhhh       8      0       0      21        0.0%
BITBIGSFRlhhlh       7      0       0      23        0.0%
BITBIGSFRlhhhl       7      0       0      22        0.0%
BITBIGSFRlllhh       6      0       0      30        0.0%
BITBIGSFRllhh        6      0       0      28        0.0%
BITBIGSFRlhhllh      1      0       0      24        0.0%
BITBIGSFRlllhl       1      0       0      31        0.0%
BITBIGSFRllhl        1      0       0      29        0.0%
BITBIGSFRlhl         1      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0      D6       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      53      33        0.0%
DATA                 0      0     53E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Oct 24 12:31:22 2025

                            l20 26AC                              l19 26AC                              l52 2916  
                            l64 2514                              l73 234C                              l49 28C8  
                           l132 298E                             l126 2946                             l230 1170  
                           l135 1BAC                             l233 11FA                             l217 21F8  
                           l129 243E                             l332 28E4                             l157 001C  
                           l246 1398                             l406 078C                             l423 17B8  
                           l335 29AE                             l440 1F64                             l249 1422  
                           l417 0702                             l329 29AA                             l450 1B9C  
                           l523 292C                             l284 0FB6                             l532 297A  
                           l462 264A                             l470 1606                             l374 2708  
                           l526 2958                             l447 1E76                             l391 0A82  
                           l535 28E8                             l551 257E                             l560 22AE  
                           l456 25E6                             l529 2848                             l538 28FE  
                           l298 299E                             l490 2122                             l395 204C  
                           l555 275E                             l571 2968                             l388 09F8  
                           l565 281C                             l398 24A8                             l823 1A96  
                           l479 1602                             l576 27EE                             l496 194C  
                           l568 289E                             _BSR 000FE0   __end_of_os_task_time_decrease 2350  
                           u341 21E6                             u350 20A0                             u351 209C  
                           _TOS 000FFD          _conf_osc_internal_8MHz 29A0                    _pwm_set_duty 2710  
                           prod 000FF3                             tosl 000FFD                             wreg 000FE8  
            _priority_scheduler 0D5E                            l2200 26EC                            l2210 1462  
                          l2202 142C                            l2220 14AC                            l2212 1478  
                          l2204 1442                            l2300 257A                            l2150 17F4  
                          l2230 1558                            l2222 14C8                            l2214 1496  
                          l2310 295C                            l2302 257C                            l2400 197A  
                          l2160 183A                            l2152 180A                            l2240 1590  
                          l2232 1566                            l2224 14EA                            l2208 144E  
                          l2312 287A                            l2304 27F0                            l2320 248C  
                          l2410 19C0                            l2402 1980                            l1610 28E2  
                          l1602 28CA                            l2162 1856                            l2154 1820  
                          l2242 15AE                            l2226 1508                            l2330 1F08  
                          l2322 1E80                            l2306 27F2                            l2314 2440  
                          l1612 2930                            l2340 07C2                            l2420 1A44  
                          l2412 19DE                            l2404 1990                            l2260 24F0  
                          l2252 24B0                            l2500 0EB4                            l1540 2162  
                          l1604 28CE                            l2180 18D6                            l2156 1832  
                          l2148 17CA                            l2244 15D4                            l2228 1536  
                          l2332 1F2A                            l2324 1E90                            l2308 281A  
                          l2316 2450                            l2350 0914                            l2342 080A  
                          l2334 0792                            l2422 1A4E                            l2414 19E2  
                          l2406 199C                            l2254 24B8                            l2262 24F4  
                          l2502 0EE2                            l1550 21B4                            l1542 2174  
                          l1710 28B4                            l1606 28DE                            l2270 2820  
                          l2182 18F4                            l2174 189C                            l2246 15F2  
                          l2238 157C                            l2326 1EAC                            l2318 2470  
                          l2360 0970                            l2352 0928                            l2344 0860  
                          l2336 0794                            l2416 19F2                            l2408 19B6  
                          l2424 1A6C                            l2264 2510                            l2256 24E6  
                          l2504 0F04                            l2512 0F6E                            l2600 06BA  
                          l1552 21C4                            l1544 2184                            l1536 2134  
                          l1560 205A                            l1608 28E0                            l2272 2846  
                          l2184 1910                            l2192 1936                            l2176 18B0  
                          l2168 1876                            l2328 1EC8                            l2280 254A  
                          l2440 2408                            l2432 23D0                            l1730 232C  
                          l1722 22B2                            l2530 1E56                            l2522 1D94  
                          l2370 09D2                            l2362 0998                            l2354 0938  
                          l2346 0880                            l2338 07A6                            l2426 1A7E  
                          l2418 1A20                            l2514 0F98                            l2506 0F2A  
                          l2610 0756                            l2602 06DA                            l1554 21EE  
                          l1546 2194                            l1538 2140                            l1570 20CE  
                          l1562 206E                            l2274 296E                            l2186 192E  
                          l2178 18C6                            l2290 2570                            l2282 255E  
                          l2450 2436                            l2442 2414                            l2434 23EC  
                          l1724 22BC                            l1732 2330                            l2700 1220  
                          l2532 1E74                            l2524 1D96                            l2372 09FA  
                          l2364 09AE                            l2348 08D4                            l2356 094C  
                          l2380 0A80                            l2540 1B0E                            l2428 1A8A  
                          l2516 0F9C                            l2508 0F54                            l2460 0D66  
                          l2612 0776                            l2604 06DC                            l2620 164A  
                          l1820 272A                            l1548 21A4                            l1708 28A2  
                          l1572 20E8                            l1564 2082                            l1556 29A0  
                          l2196 26B4                            l2292 2572                            l2284 2564  
                          l2276 2520                            l2452 2918                            l2268 2948  
                          l2444 241C                            l2436 23F8                            l1726 22E0  
                          l2702 1274                            l2710 12EC                            l2526 1DB4  
                          l2390 1FF4                            l2382 1F6A                            l2374 0A0C  
                          l2366 09B0                            l2358 0950                            l2542 1B7C  
                          l2534 1AA0                            l2454 28E6                            l2470 0DC6  
                          l2462 0D7A                            l2606 0704                            l2614 078A  
                          l2630 1754                            l2622 1650                            l1822 273E  
                          l1574 20FA                            l1566 20A0                            l1558 29AC  
                          l2198 26D0                            l2294 2574                            l2286 2566  
                          l2278 2532                            l2446 241E                            l2438 2400  
                          l2550 290C                            l1728 2316                            l2720 1350  
                          l2712 12F0                            l2704 12B4                            l2528 1E00  
                          l2800 0052                            l2392 204A                            l2384 1F6C  
                          l2376 0A4C                            l2368 09D0                            l2544 1B9A  
                          l2536 1AA2                            l2456 28F6                            l2480 0E22  
                          l2472 0DCA                            l2464 0D90                            l2608 0716  
                          l2624 1692                            l2632 1786                            l2616 1614  
                          l2640 0FC2                            l1824 2744                            l1816 2710  
                          l1568 20B0                            l2296 2576                            l2288 256E  
                          l2448 242A                            l2552 2910                            l1930 2216  
                          l2730 13EC                            l2722 1370                            l2714 1310  
                          l2706 12C8                            l2810 00CE                            l2802 005E  
                          l2386 1F7E                            l2378 0A6C                            l2538 1AC0  
                          l2394 195A                            l2490 0E8E                            l2482 0E28  
                          l2474 0DCE                            l2570 04C6                            l2562 0474  
                          l2634 1796                            l2626 16E2                            l2618 1616  
                          l2650 10A0                            l2642 0FD8                            l2298 2578  
                          l2554 2914                            l2546 2900                            l1940 27D4  
                          l1932 2218                            l2732 140C                            l2724 1372  
                          l2716 1338                            l2708 12D8                            l2820 0196  
                          l2812 00F4                            l2804 0082                            l2388 1FA8  
                          l2556 2980                            l2396 195E                            l2484 0E52  
                          l2476 0DD6                            l2468 0D9C                            l2580 058A  
                          l2564 0476                            l2636 17B6                            l2628 1738  
                          l2660 1110                            l2652 10B0                            l2644 0FF8  
                          l2548 2908                            l2740 26A8                            l1934 27B2  
                          l1926 2202                            l2726 139A                            l2718 134E  
                          l2734 1420                            l2822 01A6                            l2830 020C  
                          l2814 0122                            l2806 00A8                            l2558 298A  
                          l2398 196E                            l2478 0DF8                            l2486 0E6E  
                          l2582 05DE                            l2590 0656                            l2566 0492  
                          l2574 04CC                            l2670 1172                            l2662 1126  
                          l2646 104C                            l2654 10C4                            l2638 0FC0  
                          l2750 1BFC                            l2742 1BAC                            l1936 27C0  
                          l1928 2204                            l2728 13AC                            l2840 0266  
                          l2832 0214                            l2824 01C0                            l2816 0148  
                          l2808 00CE                            l2680 2588                            l2496 0EA4  
                          l2488 0E72                            l2736 2992                            l2592 065A  
                          l2584 061E                            l2576 0514                            l2568 04A2  
                          l2672 1184                            l2664 1128                            l2656 10C8  
                          l2648 108C                            l2760 1C8C                            l2752 1C36  
                          l2744 1BB8                            l1938 27C2                            l2690 25FA  
                          l2850 02C0                            l2842 027A                            l2834 0220  
                          l2826 01DC                            l2818 016E                            l2682 2590  
                          l2770 23BA                            l2762 2358                            l2498 0EB0  
                          l2594 067A                            l2586 0632                            l2578 056A  
                          l2674 11C4                            l2666 1148                            l2658 10E8  
                          l2754 1C44                            l2746 1BE0                            l1946 284E  
                          l2738 2654                            l2692 2624                            l2860 032E  
                          l2852 02DA                            l2836 0230                            l2844 0296  
                          l2828 01F0                            l2780 1D10                            l2772 1CAA  
                          l2684 25C0                            l2764 235E                            l2596 06A2  
                          l2588 0642                            l2676 11E4                            l2668 114A  
                          l2756 1C5C                            l2748 1BEC                            l1948 2850  
                          l2694 2628                            l2870 039A                            l2862 0340  
                          l2854 02F6                            l2846 029E                            l2838 024A  
                          l2782 1D22                            l2790 1D68                            l2774 1CBE  
                          l2686 25C4                            l2766 237A                            l2598 06B8  
                          l2678 11F8                            l2758 1C74                            l2696 11FE  
                          l2688 25F2                            l2880 03FA                            l2864 0350  
                          l2872 03B6                            l2856 030A                            l2848 02B0  
                          l2792 1D7A                            l2784 1D34                            l2776 1CC2  
                          l2768 2396                            l2698 1200                            l2890 0442  
                          l2874 03BE                            l2866 036A                            l2858 0326  
                          l2882 040A                            l2794 1D7E                            l2786 1D3A  
                          l2778 1CD6                            l2892 0462                            l2884 0422  
                          l2876 03D0                            l2868 0386                            l2796 001C  
                          l2788 1D5E                            l2886 042E                            l2878 03DC  
                          l2798 0040                            u1200 14C8                            u1201 14C4  
                          u1130 1832                            u1210 14EA                            u1131 182E  
                          u1211 14E6                            u1140 1856                            u1220 1508  
                          u1300 2890                            u1141 1852                            u1221 1504  
                          u1301 2888                            u1150 1872                            u1230 1558  
                          u1151 186E                            u1231 1554                            u1160 1898  
                          u1161 1894                            u1170 18C6                            u1171 18C2  
                          u1180 1442                            u1181 143E                            u1190 14A8  
                          u1318 2892                            u1270 2532                            u1191 14A4  
                          u1271 252E                            u1280 2808                            u1265 2978  
                          u1281 2800                            u1266 297A                            u1298 280A  
                          _TMR0 000FD6                            _WREG 000FE8                            _main 2654  
                          fsr0h 000FEA                            fsr1h 000FE2                            indf0 000FEF  
                          fsr2h 000FDA                            fsr0l 000FE9                            indf2 000FDF  
                          fsr1l 000FE1                            fsr2l 000FD9                            btemp 0001  
                          prodh 000FF4                            prodl 000FF3                            start 000C  
                  ___param_bank 000000                           _ADRES 000FC3                 __end_of___awmod 1AA0  
             _isr_button_toggle 2930                           i2l351 0C80                           i2l355 0D1C  
                         u51_40 22E0                           u51_41 22DC                           u36_40 2942  
                         u52_40 2316                           u36_41 293C                           u52_41 2312  
                         u37_40 2944                           u53_40 234C                           u53_41 2348  
                         u62_20 2726                           u62_21 2722                           u63_20 273E  
                         u63_21 273A                           u81_40 2278                           u80_48 2254  
                         u81_41 2270                           u83_40 22A0                           u82_48 227A  
                         u83_41 2298                           u76_40 2216                           u76_41 2212  
                         u85_40 27C0                           u84_48 22A2                           u77_40 222E  
                         u85_41 27BC                           u77_41 2226                           u86_40 27D4  
                         u86_41 27D0                           u79_40 2252                           u78_48 2230  
                         u79_41 224A                           u88_20 2860                           u88_21 285A  
                         u87_48 27DA                           u87_49 27EE                           u88_26 2862  
                    __SRAMmerge 17C2                           pclath 000FFA                           pclatu 000FFB  
                         tablat 000FF5                           ltemp0 0001                           ltemp1 0005  
                         ltemp2 0009                           plusw0 000FEB                           plusw1 000FE3  
                         plusw2 000FDB                           ttemp0 0001                           ttemp1 0004  
                         ttemp2 0007                           ttemp3 000A                           ttemp5 0002  
                         ttemp6 0005                           ttemp7 0009                           status 000FD8  
                         wtemp0 0001                           wtemp1 0003                           wtemp2 0005  
                         wtemp3 0007                           wtemp4 0009                           wtemp5 000B  
                         wtemp8 0002                _pipe_write_block 2586                 __initialization 2764  
                  ?_ISR_TIMER_0 003F                    __end_of_main 26B4       __end_of_isr_button_toggle 2948  
                 __activetblptr 000002                  fp__task_motors 0000                __end_of_adc_read 2900  
                        u132_20 07C2                          u140_20 1990                          u124_20 24E6  
                        u132_21 07BE                          u140_21 198C                          u124_21 24E2  
                        u133_20 0880                          u141_20 19B6                          u125_20 2510  
                        u133_21 087C                          u141_21 19B2                          u125_21 250C  
                        u134_20 0938                          u142_20 19F2                          u150_20 0E22  
                        u134_21 0934                          u142_21 19EE                          u150_21 0E1E  
                        i2l2900 0AE4                          i2l2910 0BB0                          i2l2902 0AE8  
                        i2l2920 0C36                          i2l2912 0BC0                          i2l2904 0B08  
                        u135_20 0970                          u143_20 1A20                          u151_20 0E52  
                        u135_21 096C                          u143_21 1A1C                          u151_21 0E4E  
                        i2l2930 0CD4                          i2l2922 0C58                          i2l2906 0B5C  
                        i2l2914 0BD4                          i2l2932 0CF4                          i2l2924 0C5A  
                        i2l2916 0BD8                          i2l2908 0B9C                          i2l2926 0C82  
                        i2l2918 0BF8                          i2l2934 0D08                          i2l2936 0D16  
                        i2l2928 0C94                          u136_20 09D0                          u144_20 1A6C  
                        u152_20 0E8E                          u160_20 058A                          u136_21 09CC  
                        u144_21 1A68                          u152_21 0E8A                          u160_21 0586  
                        i2l2938 0D1A                          i2l2894 0ACE                          i2l2896 0ADE  
                        u137_20 0A6C                          u145_20 1A7E                          u153_20 0EA0  
                        u161_20 0642                          u137_21 0A68                          u145_21 1A7A  
                        u153_21 0E9C                          u161_21 063E                          i2l2898 0AE0  
                        u138_20 1FA8                          u146_20 28F6                          u154_20 0F04  
                        u162_20 067A                          u170_20 1148                          u138_21 1FA4  
                        u146_21 28F2                          u154_21 0F00                          u162_21 0676  
                        u170_21 1144                          u139_20 196E                          u155_20 0F2A  
                        u147_20 0D7A                          u163_20 06DA                          u171_20 11E4  
                        u139_21 196A                          u155_21 0F26                          u147_21 0D76  
                        u163_21 06D6                          u171_21 11E0                          u180_20 1D08  
                        u172_20 25E6                          u156_20 0F54                          u148_20 0D90  
                        u164_20 0776                          u180_21 1D00                          u172_21 25E2  
                        u156_21 0F50                          u148_21 0D8C                          u164_21 0772  
                        u173_20 264A                          u157_20 0F98                          u149_20 0DF8  
                        u165_20 164A                          u173_21 2646                          u157_21 0F94  
                        u149_21 0DF4                          u165_21 1646                          u174_20 1220  
                        u190_20 02C0                          u182_20 1D22                          u181_28 1D0A  
                        u158_20 0FB2                          u166_20 1692                          u174_21 121C  
                        u190_21 02BC                          u182_21 1D1E                          u158_21 0FAE  
                        u166_21 168E                          u175_20 12D8                          u191_20 02DA  
                        u183_20 1D34                          u159_20 0492                          u167_20 0FF8  
                        u175_21 12D4                          u191_21 02D6                          u183_21 1D30  
                        u159_21 048E                          u167_21 0FF4                          u176_20 1310  
                        u192_20 0350                          u184_20 1D7A                          u168_20 10B0  
                        u176_21 130C                          u192_21 034C                          u184_21 1D76  
                        u168_21 10AC                          u177_20 1370                          u193_20 036A  
                        u185_20 0052                          u169_20 10E8                          u177_21 136C  
                        u193_21 0366                          u185_21 004E                          u169_21 10E4  
                        u178_20 140C                          u194_20 0422                          u186_20 01A6  
                        u178_21 1408                          u194_21 041E                          u186_21 01A2  
                        u195_20 0452                          u187_20 01C0                          u179_20 1BFC  
                        u195_21 044C                          u187_21 01BC                          u179_21 1BF8  
                        u195_26 0454                          u188_20 0230                          u188_21 022C  
                        u189_20 024A                          u189_21 0246                          _STATUS 000FD8  
                        _STKPTR 000FFC                          _adc_go 296E                          _g_pipe 0060  
             __end_of_SRAMalloc 1610                          clear_0 2784                          clear_1 2796  
                        clear_2 27A2                          isa$std 000001                __end_of_exti_isr 27F0  
              __end_of_os_delay 11FE                __end_of_sem_init 2710                __end_of_sem_wait 0A88  
              __end_of_sem_post 2052            __end_of_conf_timer_0 28E6                    __pdataCOMRAM 0051  
              __end_of_set_port 295C                __end_of_os_yield 1424                __end_of_os_start 2918  
                        lltemp0 0001                          lltemp1 0009                          lltemp2 0011  
                        lltemp3 0019                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                __end_of_pwm_init 2586                __end_of_pwm_tick 22B0  
                    __accesstop 0060         __end_of__initialization 27A8                   ___rparam_used 000001  
                _os_create_task 212C                  __pcstackCOMRAM 003F                      ___inthi_sp 064B  
               fp__os_idle_task 0000                 fp__task_battery 0000                 fp__task_central 0000  
                    __pbssBANK0 0060                 fp__task_sensors 0000                   __uDynamicHeap 0296  
        __end_of_os_create_task 2202  __end_of_conf_osc_internal_8MHz 29AC                      __pwm_phase 002F  
      __end_of_pipe_write_block 25F0                      _config_adc 2820           _os_task_time_decrease 22B0  
                    _config_app 23D0                         __Hparam 0000                         __Lparam 0000  
             task_central@F3734 0025                         ___awmod 1956                         __pcinit 2764  
                       __ramtop 0800                         __ptext0 2654                         __ptext1 2900  
                       __ptext2 23D0                         __ptext3 2948                         __ptext4 2918  
                       __ptext5 251C                         __ptext6 2440                         __ptext7 295C  
                       __ptext8 27F0                         __ptext9 287A                       _T0CONbits 000FD5  
                    _readyQueue 0081               __end_of_read_pipe 1E80                 _pipe_read_block 25F0  
             __end_of_exti_init 2820               __end_of_scheduler 29A0                  __pintcode_body 0A88  
          end_of_initialization 27A8               __end_of_os_config 28CA                   __Lmediumconst 0000  
                       int_func 0A88                    _conf_timer_0 28CA                         postdec0 000FED  
                       postdec1 000FE5                         postdec2 000FDD                _read_adc_channel 2980  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                     _PORTBbits 000F81                       _PORTDbits 000F83                       _SRAMalloc 1424  
                    _mutex_init 2440                      _mutex_lock 0474                       _TRISBbits 000F93  
                     _TRISDbits 000F95            fp__isr_button_toggle 0000              __end_of__SRAMmerge 1956  
                __end_of_adc_go 2980                   __pidataCOMRAM 29B0         __end_of_pipe_read_block 2654  
                    _write_pipe 1AA0             start_initialization 2764            __end_of_os_idle_task 287A  
           __end_of_create_pipe 1F6A            __end_of_task_battery 1D94            __end_of_task_central 0474  
                _g_speeds_mutex 0030                     __pbssBIGRAM 0081            __end_of_task_sensors 23D0  
                   __pbssCOMRAM 0021                 _conf_interrupts 29AC            __end_of_SRAMInitHeap 212C  
              _g_flight_enabled 0052                   ??_ISR_TIMER_0 003F                       __pintcode 0008  
                     __pwm_duty 0021        __end_of_read_adc_channel 2992                       _read_pipe 1D94  
                     _exti_init 27F0                       _scheduler 2992                     _create_pipe 1E80  
                      _LATBbits 000F8A                        _LATDbits 000F8C                     __pwm_period 0051  
                     _os_config 28A2                        i2u200_40 0C58                        i2u200_41 0C54  
                      i2u201_40 0CF4                        i2u201_41 0CF0                        i2u202_40 0D16  
                      i2u202_41 0D12                        i2u196_40 0ADE                        i2u196_41 0ADA  
                      i2u197_40 0B08                        i2u197_41 0B04                        i2u198_40 0BC0  
                      i2u198_41 0BBC                        i2u199_40 0BF8                        i2u199_41 0BF4  
             _exti_set_callback 295C      __end_of_priority_scheduler 0FC0             __end_of_exti_enable 28A2  
          __end_of_mutex_unlock 17C2                      _ADCON0bits 000FC2             __end_of_ISR_TIMER_0 0D5E  
                    _ADCON1bits 000FC1                      _ADCON2bits 000FC0         __end_of_conf_interrupts 29B0  
                   _INTCON2bits 000FF1            __end_of_pwm_set_duty 2764                        __Hrparam 0000  
     __end_of_exti_set_callback 296E                        __Lrparam 0000              __end_of_config_adc 284E  
           __end_of_set_channel 2930              __end_of_config_app 2440             __end_of_task_motors 1CA2  
           __end_of_os_task_pos 251C                        _adc_read 28E6                    _os_idle_task 284E  
                      __exti_cb 002D                        __ptext10 1E80                        __ptext11 26B4  
                      __ptext20 28A2                        __ptext12 1424                        __ptext21 212C  
                      __ptext13 17C2                        __ptext30 24AE                        __ptext22 284E  
                      __ptext14 2820                        __ptext31 1956                        __ptext23 1BA4  
                      __ptext15 296E                        __ptext40 0014                        __ptext32 2350  
                      __ptext24 2710                        __ptext16 28CA                        __ptext41 25F0  
                      __ptext33 2980                        __ptext25 0FC0                        __ptext17 29A0  
                      __ptext42 1D94                        __ptext34 28E6                        __ptext26 1610  
                      __ptext18 29AC                        __ptext43 11FE                        __ptext35 2586  
                      __ptext27 0474                        __ptext19 2052                        __ptext36 1AA0  
                      __ptext28 2992                        __ptext45 2202                        __ptext37 0792  
                      __ptext29 0D5E                        __ptext46 22B0                        __ptext38 1F6A  
                      __ptext47 27B2                        __ptext39 1CA2                        __ptext48 2930  
                      __ptext49 0000                        _g_speeds 0029                    _task_battery 1CA2  
                  _task_central 0014                        _exti_isr 27B2                        _os_delay 0FC0  
                  _task_sensors 2350                        _sem_init 26B4                     _exti_enable 287A  
                      _sem_wait 0792                        _sem_post 1F6A                        _set_port 2948  
                      _os_yield 11FE                        _os_start 2900                        isa$xinst 000000  
                   _ISR_TIMER_0 0008                        _pwm_init 251C                        _pwm_tick 2202  
                  _SRAMInitHeap 2052                      _INTCONbits 000FF2                        intlevel1 0000  
                      intlevel2 0000                     _set_channel 2918                      _OSCCONbits 000FD3  
                   _task_motors 1BA4                     _os_task_pos 24AE              __end_of_mutex_init 24AE  
            __end_of_mutex_lock 0792                    _mutex_unlock 1610              __end_of_write_pipe 1BA4  
